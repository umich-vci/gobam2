/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the SAMLServiceProviderSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SAMLServiceProviderSettings{}

// SAMLServiceProviderSettings struct for SAMLServiceProviderSettings
type SAMLServiceProviderSettings struct {
	Settings
	// The resource type.
	Type *string `json:"type,omitempty"`
	// The fully qualified domain name of the Address Manager server.
	AddressManagerFqdn *string `json:"addressManagerFqdn,omitempty"`
	// The identifier of the service provider entity.
	MetadataUrl *string `json:"metadataUrl,omitempty"`
	// The URL location where the response from the IdP will be returned to the service provider.
	ConsumeUrl *string `json:"consumeUrl,omitempty"`
	// The URL location where the logout response message will be returned to the service provider.
	LogoutUrl *string `json:"logoutUrl,omitempty"`
	// The specified constraints on the name identifier format used to represent the requested subject.
	NameIdFormat *string `json:"nameIdFormat,omitempty"`
	// Indicates whether the message sent by the service provider will be signed.
	SigningEnabled *bool `json:"signingEnabled,omitempty"`
	// Indicates the requirement for assertions received by the service provider to be encrypted.
	EncryptionEnabled *bool `json:"encryptionEnabled,omitempty"`
	Pkcs12 *string `json:"pkcs12,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	Password *string `json:"password,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The organization associated with the service provider.
	OrganizationName *string `json:"organizationName,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The website URL for the organization associated with the service provider.
	OrganizationUrl *string `json:"organizationUrl,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The name of the contact for the organization associated with the service provider.
	ContactName *string `json:"contactName,omitempty"`
	// The contact email for the organization associated with the service provider.
	ContactEmail *string `json:"contactEmail,omitempty"`
}

// NewSAMLServiceProviderSettings instantiates a new SAMLServiceProviderSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSAMLServiceProviderSettings() *SAMLServiceProviderSettings {
	this := SAMLServiceProviderSettings{}
	return &this
}

// NewSAMLServiceProviderSettingsWithDefaults instantiates a new SAMLServiceProviderSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSAMLServiceProviderSettingsWithDefaults() *SAMLServiceProviderSettings {
	this := SAMLServiceProviderSettings{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SAMLServiceProviderSettings) SetType(v string) {
	o.Type = &v
}

// GetAddressManagerFqdn returns the AddressManagerFqdn field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetAddressManagerFqdn() string {
	if o == nil || IsNil(o.AddressManagerFqdn) {
		var ret string
		return ret
	}
	return *o.AddressManagerFqdn
}

// GetAddressManagerFqdnOk returns a tuple with the AddressManagerFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetAddressManagerFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.AddressManagerFqdn) {
		return nil, false
	}
	return o.AddressManagerFqdn, true
}

// HasAddressManagerFqdn returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasAddressManagerFqdn() bool {
	if o != nil && !IsNil(o.AddressManagerFqdn) {
		return true
	}

	return false
}

// SetAddressManagerFqdn gets a reference to the given string and assigns it to the AddressManagerFqdn field.
func (o *SAMLServiceProviderSettings) SetAddressManagerFqdn(v string) {
	o.AddressManagerFqdn = &v
}

// GetMetadataUrl returns the MetadataUrl field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetMetadataUrl() string {
	if o == nil || IsNil(o.MetadataUrl) {
		var ret string
		return ret
	}
	return *o.MetadataUrl
}

// GetMetadataUrlOk returns a tuple with the MetadataUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetMetadataUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataUrl) {
		return nil, false
	}
	return o.MetadataUrl, true
}

// HasMetadataUrl returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasMetadataUrl() bool {
	if o != nil && !IsNil(o.MetadataUrl) {
		return true
	}

	return false
}

// SetMetadataUrl gets a reference to the given string and assigns it to the MetadataUrl field.
func (o *SAMLServiceProviderSettings) SetMetadataUrl(v string) {
	o.MetadataUrl = &v
}

// GetConsumeUrl returns the ConsumeUrl field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetConsumeUrl() string {
	if o == nil || IsNil(o.ConsumeUrl) {
		var ret string
		return ret
	}
	return *o.ConsumeUrl
}

// GetConsumeUrlOk returns a tuple with the ConsumeUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetConsumeUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumeUrl) {
		return nil, false
	}
	return o.ConsumeUrl, true
}

// HasConsumeUrl returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasConsumeUrl() bool {
	if o != nil && !IsNil(o.ConsumeUrl) {
		return true
	}

	return false
}

// SetConsumeUrl gets a reference to the given string and assigns it to the ConsumeUrl field.
func (o *SAMLServiceProviderSettings) SetConsumeUrl(v string) {
	o.ConsumeUrl = &v
}

// GetLogoutUrl returns the LogoutUrl field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetLogoutUrl() string {
	if o == nil || IsNil(o.LogoutUrl) {
		var ret string
		return ret
	}
	return *o.LogoutUrl
}

// GetLogoutUrlOk returns a tuple with the LogoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetLogoutUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LogoutUrl) {
		return nil, false
	}
	return o.LogoutUrl, true
}

// HasLogoutUrl returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasLogoutUrl() bool {
	if o != nil && !IsNil(o.LogoutUrl) {
		return true
	}

	return false
}

// SetLogoutUrl gets a reference to the given string and assigns it to the LogoutUrl field.
func (o *SAMLServiceProviderSettings) SetLogoutUrl(v string) {
	o.LogoutUrl = &v
}

// GetNameIdFormat returns the NameIdFormat field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetNameIdFormat() string {
	if o == nil || IsNil(o.NameIdFormat) {
		var ret string
		return ret
	}
	return *o.NameIdFormat
}

// GetNameIdFormatOk returns a tuple with the NameIdFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetNameIdFormatOk() (*string, bool) {
	if o == nil || IsNil(o.NameIdFormat) {
		return nil, false
	}
	return o.NameIdFormat, true
}

// HasNameIdFormat returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasNameIdFormat() bool {
	if o != nil && !IsNil(o.NameIdFormat) {
		return true
	}

	return false
}

// SetNameIdFormat gets a reference to the given string and assigns it to the NameIdFormat field.
func (o *SAMLServiceProviderSettings) SetNameIdFormat(v string) {
	o.NameIdFormat = &v
}

// GetSigningEnabled returns the SigningEnabled field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetSigningEnabled() bool {
	if o == nil || IsNil(o.SigningEnabled) {
		var ret bool
		return ret
	}
	return *o.SigningEnabled
}

// GetSigningEnabledOk returns a tuple with the SigningEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetSigningEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SigningEnabled) {
		return nil, false
	}
	return o.SigningEnabled, true
}

// HasSigningEnabled returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasSigningEnabled() bool {
	if o != nil && !IsNil(o.SigningEnabled) {
		return true
	}

	return false
}

// SetSigningEnabled gets a reference to the given bool and assigns it to the SigningEnabled field.
func (o *SAMLServiceProviderSettings) SetSigningEnabled(v bool) {
	o.SigningEnabled = &v
}

// GetEncryptionEnabled returns the EncryptionEnabled field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetEncryptionEnabled() bool {
	if o == nil || IsNil(o.EncryptionEnabled) {
		var ret bool
		return ret
	}
	return *o.EncryptionEnabled
}

// GetEncryptionEnabledOk returns a tuple with the EncryptionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetEncryptionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.EncryptionEnabled) {
		return nil, false
	}
	return o.EncryptionEnabled, true
}

// HasEncryptionEnabled returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasEncryptionEnabled() bool {
	if o != nil && !IsNil(o.EncryptionEnabled) {
		return true
	}

	return false
}

// SetEncryptionEnabled gets a reference to the given bool and assigns it to the EncryptionEnabled field.
func (o *SAMLServiceProviderSettings) SetEncryptionEnabled(v bool) {
	o.EncryptionEnabled = &v
}

// GetPkcs12 returns the Pkcs12 field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetPkcs12() string {
	if o == nil || IsNil(o.Pkcs12) {
		var ret string
		return ret
	}
	return *o.Pkcs12
}

// GetPkcs12Ok returns a tuple with the Pkcs12 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetPkcs12Ok() (*string, bool) {
	if o == nil || IsNil(o.Pkcs12) {
		return nil, false
	}
	return o.Pkcs12, true
}

// HasPkcs12 returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasPkcs12() bool {
	if o != nil && !IsNil(o.Pkcs12) {
		return true
	}

	return false
}

// SetPkcs12 gets a reference to the given string and assigns it to the Pkcs12 field.
func (o *SAMLServiceProviderSettings) SetPkcs12(v string) {
	o.Pkcs12 = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *SAMLServiceProviderSettings) SetPassword(v string) {
	o.Password = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *SAMLServiceProviderSettings) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetOrganizationUrl returns the OrganizationUrl field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetOrganizationUrl() string {
	if o == nil || IsNil(o.OrganizationUrl) {
		var ret string
		return ret
	}
	return *o.OrganizationUrl
}

// GetOrganizationUrlOk returns a tuple with the OrganizationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetOrganizationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationUrl) {
		return nil, false
	}
	return o.OrganizationUrl, true
}

// HasOrganizationUrl returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasOrganizationUrl() bool {
	if o != nil && !IsNil(o.OrganizationUrl) {
		return true
	}

	return false
}

// SetOrganizationUrl gets a reference to the given string and assigns it to the OrganizationUrl field.
func (o *SAMLServiceProviderSettings) SetOrganizationUrl(v string) {
	o.OrganizationUrl = &v
}

// GetContactName returns the ContactName field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetContactName() string {
	if o == nil || IsNil(o.ContactName) {
		var ret string
		return ret
	}
	return *o.ContactName
}

// GetContactNameOk returns a tuple with the ContactName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetContactNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContactName) {
		return nil, false
	}
	return o.ContactName, true
}

// HasContactName returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasContactName() bool {
	if o != nil && !IsNil(o.ContactName) {
		return true
	}

	return false
}

// SetContactName gets a reference to the given string and assigns it to the ContactName field.
func (o *SAMLServiceProviderSettings) SetContactName(v string) {
	o.ContactName = &v
}

// GetContactEmail returns the ContactEmail field value if set, zero value otherwise.
func (o *SAMLServiceProviderSettings) GetContactEmail() string {
	if o == nil || IsNil(o.ContactEmail) {
		var ret string
		return ret
	}
	return *o.ContactEmail
}

// GetContactEmailOk returns a tuple with the ContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SAMLServiceProviderSettings) GetContactEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ContactEmail) {
		return nil, false
	}
	return o.ContactEmail, true
}

// HasContactEmail returns a boolean if a field has been set.
func (o *SAMLServiceProviderSettings) HasContactEmail() bool {
	if o != nil && !IsNil(o.ContactEmail) {
		return true
	}

	return false
}

// SetContactEmail gets a reference to the given string and assigns it to the ContactEmail field.
func (o *SAMLServiceProviderSettings) SetContactEmail(v string) {
	o.ContactEmail = &v
}

func (o SAMLServiceProviderSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SAMLServiceProviderSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.AddressManagerFqdn) {
		toSerialize["addressManagerFqdn"] = o.AddressManagerFqdn
	}
	if !IsNil(o.MetadataUrl) {
		toSerialize["metadataUrl"] = o.MetadataUrl
	}
	if !IsNil(o.ConsumeUrl) {
		toSerialize["consumeUrl"] = o.ConsumeUrl
	}
	if !IsNil(o.LogoutUrl) {
		toSerialize["logoutUrl"] = o.LogoutUrl
	}
	if !IsNil(o.NameIdFormat) {
		toSerialize["nameIdFormat"] = o.NameIdFormat
	}
	if !IsNil(o.SigningEnabled) {
		toSerialize["signingEnabled"] = o.SigningEnabled
	}
	if !IsNil(o.EncryptionEnabled) {
		toSerialize["encryptionEnabled"] = o.EncryptionEnabled
	}
	if !IsNil(o.Pkcs12) {
		toSerialize["pkcs12"] = o.Pkcs12
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.OrganizationUrl) {
		toSerialize["organizationUrl"] = o.OrganizationUrl
	}
	if !IsNil(o.ContactName) {
		toSerialize["contactName"] = o.ContactName
	}
	if !IsNil(o.ContactEmail) {
		toSerialize["contactEmail"] = o.ContactEmail
	}
	return toSerialize, nil
}

type NullableSAMLServiceProviderSettings struct {
	value *SAMLServiceProviderSettings
	isSet bool
}

func (v NullableSAMLServiceProviderSettings) Get() *SAMLServiceProviderSettings {
	return v.value
}

func (v *NullableSAMLServiceProviderSettings) Set(val *SAMLServiceProviderSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableSAMLServiceProviderSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableSAMLServiceProviderSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSAMLServiceProviderSettings(val *SAMLServiceProviderSettings) *NullableSAMLServiceProviderSettings {
	return &NullableSAMLServiceProviderSettings{value: val, isSet: true}
}

func (v NullableSAMLServiceProviderSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSAMLServiceProviderSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


