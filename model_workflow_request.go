/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
	"time"
)

// checks if the WorkflowRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowRequest{}

// WorkflowRequest struct for WorkflowRequest
type WorkflowRequest struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The resource type.
	Type *string `json:"type,omitempty"`
	// The approval state of the workflow request. The state will be PENDING if the workflow request has not yet been processed by an authorized user.
	State *string `json:"state,omitempty"`
	// The requested operation for the workflow request.
	RequestType *string `json:"requestType,omitempty"`
	Creator *User `json:"creator,omitempty"`
	Resource *Resource `json:"resource,omitempty"`
	DependentResource *Resource `json:"dependentResource,omitempty"`
	Modifier *User `json:"modifier,omitempty"`
	// The time the workflow request was created.
	CreationDateTime *time.Time `json:"creationDateTime,omitempty"`
	// The time the workflow request was modified.
	ModificationDateTime *time.Time `json:"modificationDateTime,omitempty"`
	// The change control comment added during creation of the workflow request.
	Comment *string `json:"comment,omitempty"`
}

// NewWorkflowRequest instantiates a new WorkflowRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowRequest() *WorkflowRequest {
	this := WorkflowRequest{}
	return &this
}

// NewWorkflowRequestWithDefaults instantiates a new WorkflowRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowRequestWithDefaults() *WorkflowRequest {
	this := WorkflowRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkflowRequest) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRequest) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkflowRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *WorkflowRequest) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WorkflowRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WorkflowRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WorkflowRequest) SetType(v string) {
	o.Type = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *WorkflowRequest) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRequest) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *WorkflowRequest) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *WorkflowRequest) SetState(v string) {
	o.State = &v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise.
func (o *WorkflowRequest) GetRequestType() string {
	if o == nil || IsNil(o.RequestType) {
		var ret string
		return ret
	}
	return *o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRequest) GetRequestTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RequestType) {
		return nil, false
	}
	return o.RequestType, true
}

// HasRequestType returns a boolean if a field has been set.
func (o *WorkflowRequest) HasRequestType() bool {
	if o != nil && !IsNil(o.RequestType) {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given string and assigns it to the RequestType field.
func (o *WorkflowRequest) SetRequestType(v string) {
	o.RequestType = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *WorkflowRequest) GetCreator() User {
	if o == nil || IsNil(o.Creator) {
		var ret User
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRequest) GetCreatorOk() (*User, bool) {
	if o == nil || IsNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *WorkflowRequest) HasCreator() bool {
	if o != nil && !IsNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given User and assigns it to the Creator field.
func (o *WorkflowRequest) SetCreator(v User) {
	o.Creator = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *WorkflowRequest) GetResource() Resource {
	if o == nil || IsNil(o.Resource) {
		var ret Resource
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRequest) GetResourceOk() (*Resource, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *WorkflowRequest) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given Resource and assigns it to the Resource field.
func (o *WorkflowRequest) SetResource(v Resource) {
	o.Resource = &v
}

// GetDependentResource returns the DependentResource field value if set, zero value otherwise.
func (o *WorkflowRequest) GetDependentResource() Resource {
	if o == nil || IsNil(o.DependentResource) {
		var ret Resource
		return ret
	}
	return *o.DependentResource
}

// GetDependentResourceOk returns a tuple with the DependentResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRequest) GetDependentResourceOk() (*Resource, bool) {
	if o == nil || IsNil(o.DependentResource) {
		return nil, false
	}
	return o.DependentResource, true
}

// HasDependentResource returns a boolean if a field has been set.
func (o *WorkflowRequest) HasDependentResource() bool {
	if o != nil && !IsNil(o.DependentResource) {
		return true
	}

	return false
}

// SetDependentResource gets a reference to the given Resource and assigns it to the DependentResource field.
func (o *WorkflowRequest) SetDependentResource(v Resource) {
	o.DependentResource = &v
}

// GetModifier returns the Modifier field value if set, zero value otherwise.
func (o *WorkflowRequest) GetModifier() User {
	if o == nil || IsNil(o.Modifier) {
		var ret User
		return ret
	}
	return *o.Modifier
}

// GetModifierOk returns a tuple with the Modifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRequest) GetModifierOk() (*User, bool) {
	if o == nil || IsNil(o.Modifier) {
		return nil, false
	}
	return o.Modifier, true
}

// HasModifier returns a boolean if a field has been set.
func (o *WorkflowRequest) HasModifier() bool {
	if o != nil && !IsNil(o.Modifier) {
		return true
	}

	return false
}

// SetModifier gets a reference to the given User and assigns it to the Modifier field.
func (o *WorkflowRequest) SetModifier(v User) {
	o.Modifier = &v
}

// GetCreationDateTime returns the CreationDateTime field value if set, zero value otherwise.
func (o *WorkflowRequest) GetCreationDateTime() time.Time {
	if o == nil || IsNil(o.CreationDateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationDateTime
}

// GetCreationDateTimeOk returns a tuple with the CreationDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRequest) GetCreationDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDateTime) {
		return nil, false
	}
	return o.CreationDateTime, true
}

// HasCreationDateTime returns a boolean if a field has been set.
func (o *WorkflowRequest) HasCreationDateTime() bool {
	if o != nil && !IsNil(o.CreationDateTime) {
		return true
	}

	return false
}

// SetCreationDateTime gets a reference to the given time.Time and assigns it to the CreationDateTime field.
func (o *WorkflowRequest) SetCreationDateTime(v time.Time) {
	o.CreationDateTime = &v
}

// GetModificationDateTime returns the ModificationDateTime field value if set, zero value otherwise.
func (o *WorkflowRequest) GetModificationDateTime() time.Time {
	if o == nil || IsNil(o.ModificationDateTime) {
		var ret time.Time
		return ret
	}
	return *o.ModificationDateTime
}

// GetModificationDateTimeOk returns a tuple with the ModificationDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRequest) GetModificationDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModificationDateTime) {
		return nil, false
	}
	return o.ModificationDateTime, true
}

// HasModificationDateTime returns a boolean if a field has been set.
func (o *WorkflowRequest) HasModificationDateTime() bool {
	if o != nil && !IsNil(o.ModificationDateTime) {
		return true
	}

	return false
}

// SetModificationDateTime gets a reference to the given time.Time and assigns it to the ModificationDateTime field.
func (o *WorkflowRequest) SetModificationDateTime(v time.Time) {
	o.ModificationDateTime = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *WorkflowRequest) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRequest) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *WorkflowRequest) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *WorkflowRequest) SetComment(v string) {
	o.Comment = &v
}

func (o WorkflowRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.RequestType) {
		toSerialize["requestType"] = o.RequestType
	}
	if !IsNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.DependentResource) {
		toSerialize["dependentResource"] = o.DependentResource
	}
	if !IsNil(o.Modifier) {
		toSerialize["modifier"] = o.Modifier
	}
	if !IsNil(o.CreationDateTime) {
		toSerialize["creationDateTime"] = o.CreationDateTime
	}
	if !IsNil(o.ModificationDateTime) {
		toSerialize["modificationDateTime"] = o.ModificationDateTime
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullableWorkflowRequest struct {
	value *WorkflowRequest
	isSet bool
}

func (v NullableWorkflowRequest) Get() *WorkflowRequest {
	return v.value
}

func (v *NullableWorkflowRequest) Set(val *WorkflowRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowRequest(val *WorkflowRequest) *NullableWorkflowRequest {
	return &NullableWorkflowRequest{value: val, isSet: true}
}

func (v NullableWorkflowRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


