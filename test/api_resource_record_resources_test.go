/*
BlueCat Address Manager 9.5 RESTful v2 API

Testing ResourceRecordResourcesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package gobam2

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/umich-vci/gobam2"
)

func Test_gobam2_ResourceRecordResourcesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ResourceRecordResourcesAPIService DeleteAddressResourceRecord", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64
		var id int64

		httpRes, err := apiClient.ResourceRecordResourcesAPI.DeleteAddressResourceRecord(context.Background(), collectionId, id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService DeleteResourceRecord", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int64

		httpRes, err := apiClient.ResourceRecordResourcesAPI.DeleteResourceRecord(context.Background(), id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetAddressResourceRecord", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64
		var id int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetAddressResourceRecord(context.Background(), collectionId, id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetAddressResourceRecords", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetAddressResourceRecords(context.Background(), collectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetCollectionResourceRecords", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collection string
		var collectionId int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetCollectionResourceRecords(context.Background(), collection, collectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetDeploymentAddedRecord", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64
		var id int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetDeploymentAddedRecord(context.Background(), collectionId, id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetDeploymentAddedRecords", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetDeploymentAddedRecords(context.Background(), collectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetDeploymentDeletedRecord", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64
		var id int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetDeploymentDeletedRecord(context.Background(), collectionId, id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetDeploymentDeletedRecords", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetDeploymentDeletedRecords(context.Background(), collectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetDeploymentUpdatedRecord", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64
		var id int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetDeploymentUpdatedRecord(context.Background(), collectionId, id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetDeploymentUpdatedRecords", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetDeploymentUpdatedRecords(context.Background(), collectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetResourceRecord", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetResourceRecord(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetResourceRecordDependentRecord", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64
		var id int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetResourceRecordDependentRecord(context.Background(), collectionId, id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetResourceRecordDependentRecords", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetResourceRecordDependentRecords(context.Background(), collectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService GetResourceRecords", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.GetResourceRecords(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService PostAddressResourceRecord", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.PostAddressResourceRecord(context.Background(), collectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService PostCollectionResourceRecord", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collection string
		var collectionId int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.PostCollectionResourceRecord(context.Background(), collection, collectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ResourceRecordResourcesAPIService PutResourceRecord", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id int64

		resp, httpRes, err := apiClient.ResourceRecordResourcesAPI.PutResourceRecord(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
