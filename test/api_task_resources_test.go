/*
BlueCat Address Manager 9.5 RESTful v2 API

Testing TaskResourcesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package gobam2

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/umich-vci/gobam2"
)

func Test_gobam2_TaskResourcesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test TaskResourcesAPIService DeleteUserTask", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64
		var id int64

		httpRes, err := apiClient.TaskResourcesAPI.DeleteUserTask(context.Background(), collectionId, id).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TaskResourcesAPIService GetUserTask", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64
		var id int64

		resp, httpRes, err := apiClient.TaskResourcesAPI.GetUserTask(context.Background(), collectionId, id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TaskResourcesAPIService GetUserTasks", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64

		resp, httpRes, err := apiClient.TaskResourcesAPI.GetUserTasks(context.Background(), collectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TaskResourcesAPIService PostUserTask", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64

		resp, httpRes, err := apiClient.TaskResourcesAPI.PostUserTask(context.Background(), collectionId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TaskResourcesAPIService PutUserTask", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var collectionId int64
		var id int64

		resp, httpRes, err := apiClient.TaskResourcesAPI.PutUserTask(context.Background(), collectionId, id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
