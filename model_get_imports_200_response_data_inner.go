/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
	"time"
)

// checks if the GetImports200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetImports200ResponseDataInner{}

// GetImports200ResponseDataInner struct for GetImports200ResponseDataInner
type GetImports200ResponseDataInner struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The type of import
	Type *string `json:"type,omitempty"`
	FileInfo interface{} `json:"fileInfo,omitempty"`
	FileData interface{} `json:"fileData,omitempty"`
	// The name of the import
	Name *string `json:"name,omitempty"`
	// The content type of the import data
	ContentType *string `json:"contentType,omitempty"`
	// The size of the import, in bytes
	Size *int64 `json:"size,omitempty"`
	// The current state of the import
	State *string `json:"state,omitempty"`
	// The date and time the import resource was created
	CreationDateTime *time.Time `json:"creationDateTime,omitempty"`
	// The date and time the import was started
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	// The date and time the import completed
	CompletionDateTime *time.Time `json:"completionDateTime,omitempty"`
	Links *ResourceLinks `json:"_links,omitempty"`
}

// NewGetImports200ResponseDataInner instantiates a new GetImports200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetImports200ResponseDataInner() *GetImports200ResponseDataInner {
	this := GetImports200ResponseDataInner{}
	return &this
}

// NewGetImports200ResponseDataInnerWithDefaults instantiates a new GetImports200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetImports200ResponseDataInnerWithDefaults() *GetImports200ResponseDataInner {
	this := GetImports200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetImports200ResponseDataInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImports200ResponseDataInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetImports200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetImports200ResponseDataInner) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetImports200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImports200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetImports200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetImports200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetFileInfo returns the FileInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetImports200ResponseDataInner) GetFileInfo() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FileInfo
}

// GetFileInfoOk returns a tuple with the FileInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetImports200ResponseDataInner) GetFileInfoOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FileInfo) {
		return nil, false
	}
	return &o.FileInfo, true
}

// HasFileInfo returns a boolean if a field has been set.
func (o *GetImports200ResponseDataInner) HasFileInfo() bool {
	if o != nil && !IsNil(o.FileInfo) {
		return true
	}

	return false
}

// SetFileInfo gets a reference to the given interface{} and assigns it to the FileInfo field.
func (o *GetImports200ResponseDataInner) SetFileInfo(v interface{}) {
	o.FileInfo = v
}

// GetFileData returns the FileData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetImports200ResponseDataInner) GetFileData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.FileData
}

// GetFileDataOk returns a tuple with the FileData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetImports200ResponseDataInner) GetFileDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.FileData) {
		return nil, false
	}
	return &o.FileData, true
}

// HasFileData returns a boolean if a field has been set.
func (o *GetImports200ResponseDataInner) HasFileData() bool {
	if o != nil && !IsNil(o.FileData) {
		return true
	}

	return false
}

// SetFileData gets a reference to the given interface{} and assigns it to the FileData field.
func (o *GetImports200ResponseDataInner) SetFileData(v interface{}) {
	o.FileData = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetImports200ResponseDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImports200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetImports200ResponseDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetImports200ResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *GetImports200ResponseDataInner) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImports200ResponseDataInner) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *GetImports200ResponseDataInner) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *GetImports200ResponseDataInner) SetContentType(v string) {
	o.ContentType = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *GetImports200ResponseDataInner) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImports200ResponseDataInner) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *GetImports200ResponseDataInner) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *GetImports200ResponseDataInner) SetSize(v int64) {
	o.Size = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetImports200ResponseDataInner) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImports200ResponseDataInner) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetImports200ResponseDataInner) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GetImports200ResponseDataInner) SetState(v string) {
	o.State = &v
}

// GetCreationDateTime returns the CreationDateTime field value if set, zero value otherwise.
func (o *GetImports200ResponseDataInner) GetCreationDateTime() time.Time {
	if o == nil || IsNil(o.CreationDateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationDateTime
}

// GetCreationDateTimeOk returns a tuple with the CreationDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImports200ResponseDataInner) GetCreationDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDateTime) {
		return nil, false
	}
	return o.CreationDateTime, true
}

// HasCreationDateTime returns a boolean if a field has been set.
func (o *GetImports200ResponseDataInner) HasCreationDateTime() bool {
	if o != nil && !IsNil(o.CreationDateTime) {
		return true
	}

	return false
}

// SetCreationDateTime gets a reference to the given time.Time and assigns it to the CreationDateTime field.
func (o *GetImports200ResponseDataInner) SetCreationDateTime(v time.Time) {
	o.CreationDateTime = &v
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *GetImports200ResponseDataInner) GetStartDateTime() time.Time {
	if o == nil || IsNil(o.StartDateTime) {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImports200ResponseDataInner) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDateTime) {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *GetImports200ResponseDataInner) HasStartDateTime() bool {
	if o != nil && !IsNil(o.StartDateTime) {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given time.Time and assigns it to the StartDateTime field.
func (o *GetImports200ResponseDataInner) SetStartDateTime(v time.Time) {
	o.StartDateTime = &v
}

// GetCompletionDateTime returns the CompletionDateTime field value if set, zero value otherwise.
func (o *GetImports200ResponseDataInner) GetCompletionDateTime() time.Time {
	if o == nil || IsNil(o.CompletionDateTime) {
		var ret time.Time
		return ret
	}
	return *o.CompletionDateTime
}

// GetCompletionDateTimeOk returns a tuple with the CompletionDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImports200ResponseDataInner) GetCompletionDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CompletionDateTime) {
		return nil, false
	}
	return o.CompletionDateTime, true
}

// HasCompletionDateTime returns a boolean if a field has been set.
func (o *GetImports200ResponseDataInner) HasCompletionDateTime() bool {
	if o != nil && !IsNil(o.CompletionDateTime) {
		return true
	}

	return false
}

// SetCompletionDateTime gets a reference to the given time.Time and assigns it to the CompletionDateTime field.
func (o *GetImports200ResponseDataInner) SetCompletionDateTime(v time.Time) {
	o.CompletionDateTime = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetImports200ResponseDataInner) GetLinks() ResourceLinks {
	if o == nil || IsNil(o.Links) {
		var ret ResourceLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetImports200ResponseDataInner) GetLinksOk() (*ResourceLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetImports200ResponseDataInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ResourceLinks and assigns it to the Links field.
func (o *GetImports200ResponseDataInner) SetLinks(v ResourceLinks) {
	o.Links = &v
}

func (o GetImports200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetImports200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.FileInfo != nil {
		toSerialize["fileInfo"] = o.FileInfo
	}
	if o.FileData != nil {
		toSerialize["fileData"] = o.FileData
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ContentType) {
		toSerialize["contentType"] = o.ContentType
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.CreationDateTime) {
		toSerialize["creationDateTime"] = o.CreationDateTime
	}
	if !IsNil(o.StartDateTime) {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	if !IsNil(o.CompletionDateTime) {
		toSerialize["completionDateTime"] = o.CompletionDateTime
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetImports200ResponseDataInner struct {
	value *GetImports200ResponseDataInner
	isSet bool
}

func (v NullableGetImports200ResponseDataInner) Get() *GetImports200ResponseDataInner {
	return v.value
}

func (v *NullableGetImports200ResponseDataInner) Set(val *GetImports200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetImports200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetImports200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetImports200ResponseDataInner(val *GetImports200ResponseDataInner) *NullableGetImports200ResponseDataInner {
	return &NullableGetImports200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetImports200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetImports200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


