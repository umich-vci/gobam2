/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the GetMoves200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMoves200ResponseDataInner{}

// GetMoves200ResponseDataInner struct for GetMoves200ResponseDataInner
type GetMoves200ResponseDataInner struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The resource type.
	Type *string `json:"type,omitempty"`
	// The IP address of the destination resource where the IP resource is to be moved.
	Address *string `json:"address,omitempty"`
	MacAddress *IPMoveAllOfMacAddress `json:"macAddress,omitempty"`
	ServersUpdated *bool `json:"serversUpdated,omitempty"`
	// The absolute name of the destination zone resource where the DNS resource is to be moved.
	AbsoluteName *string `json:"absoluteName,omitempty"`
	RoleTypes []string `json:"roleTypes,omitempty"`
	Destination *InlinedServerInterface `json:"destination,omitempty"`
	Links *ResourceLinks `json:"_links,omitempty"`
}

// NewGetMoves200ResponseDataInner instantiates a new GetMoves200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMoves200ResponseDataInner() *GetMoves200ResponseDataInner {
	this := GetMoves200ResponseDataInner{}
	return &this
}

// NewGetMoves200ResponseDataInnerWithDefaults instantiates a new GetMoves200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMoves200ResponseDataInnerWithDefaults() *GetMoves200ResponseDataInner {
	this := GetMoves200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetMoves200ResponseDataInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoves200ResponseDataInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetMoves200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetMoves200ResponseDataInner) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetMoves200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoves200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetMoves200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetMoves200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *GetMoves200ResponseDataInner) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoves200ResponseDataInner) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *GetMoves200ResponseDataInner) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *GetMoves200ResponseDataInner) SetAddress(v string) {
	o.Address = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *GetMoves200ResponseDataInner) GetMacAddress() IPMoveAllOfMacAddress {
	if o == nil || IsNil(o.MacAddress) {
		var ret IPMoveAllOfMacAddress
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoves200ResponseDataInner) GetMacAddressOk() (*IPMoveAllOfMacAddress, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *GetMoves200ResponseDataInner) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given IPMoveAllOfMacAddress and assigns it to the MacAddress field.
func (o *GetMoves200ResponseDataInner) SetMacAddress(v IPMoveAllOfMacAddress) {
	o.MacAddress = &v
}

// GetServersUpdated returns the ServersUpdated field value if set, zero value otherwise.
func (o *GetMoves200ResponseDataInner) GetServersUpdated() bool {
	if o == nil || IsNil(o.ServersUpdated) {
		var ret bool
		return ret
	}
	return *o.ServersUpdated
}

// GetServersUpdatedOk returns a tuple with the ServersUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoves200ResponseDataInner) GetServersUpdatedOk() (*bool, bool) {
	if o == nil || IsNil(o.ServersUpdated) {
		return nil, false
	}
	return o.ServersUpdated, true
}

// HasServersUpdated returns a boolean if a field has been set.
func (o *GetMoves200ResponseDataInner) HasServersUpdated() bool {
	if o != nil && !IsNil(o.ServersUpdated) {
		return true
	}

	return false
}

// SetServersUpdated gets a reference to the given bool and assigns it to the ServersUpdated field.
func (o *GetMoves200ResponseDataInner) SetServersUpdated(v bool) {
	o.ServersUpdated = &v
}

// GetAbsoluteName returns the AbsoluteName field value if set, zero value otherwise.
func (o *GetMoves200ResponseDataInner) GetAbsoluteName() string {
	if o == nil || IsNil(o.AbsoluteName) {
		var ret string
		return ret
	}
	return *o.AbsoluteName
}

// GetAbsoluteNameOk returns a tuple with the AbsoluteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoves200ResponseDataInner) GetAbsoluteNameOk() (*string, bool) {
	if o == nil || IsNil(o.AbsoluteName) {
		return nil, false
	}
	return o.AbsoluteName, true
}

// HasAbsoluteName returns a boolean if a field has been set.
func (o *GetMoves200ResponseDataInner) HasAbsoluteName() bool {
	if o != nil && !IsNil(o.AbsoluteName) {
		return true
	}

	return false
}

// SetAbsoluteName gets a reference to the given string and assigns it to the AbsoluteName field.
func (o *GetMoves200ResponseDataInner) SetAbsoluteName(v string) {
	o.AbsoluteName = &v
}

// GetRoleTypes returns the RoleTypes field value if set, zero value otherwise.
func (o *GetMoves200ResponseDataInner) GetRoleTypes() []string {
	if o == nil || IsNil(o.RoleTypes) {
		var ret []string
		return ret
	}
	return o.RoleTypes
}

// GetRoleTypesOk returns a tuple with the RoleTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoves200ResponseDataInner) GetRoleTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.RoleTypes) {
		return nil, false
	}
	return o.RoleTypes, true
}

// HasRoleTypes returns a boolean if a field has been set.
func (o *GetMoves200ResponseDataInner) HasRoleTypes() bool {
	if o != nil && !IsNil(o.RoleTypes) {
		return true
	}

	return false
}

// SetRoleTypes gets a reference to the given []string and assigns it to the RoleTypes field.
func (o *GetMoves200ResponseDataInner) SetRoleTypes(v []string) {
	o.RoleTypes = v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *GetMoves200ResponseDataInner) GetDestination() InlinedServerInterface {
	if o == nil || IsNil(o.Destination) {
		var ret InlinedServerInterface
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoves200ResponseDataInner) GetDestinationOk() (*InlinedServerInterface, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *GetMoves200ResponseDataInner) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given InlinedServerInterface and assigns it to the Destination field.
func (o *GetMoves200ResponseDataInner) SetDestination(v InlinedServerInterface) {
	o.Destination = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetMoves200ResponseDataInner) GetLinks() ResourceLinks {
	if o == nil || IsNil(o.Links) {
		var ret ResourceLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMoves200ResponseDataInner) GetLinksOk() (*ResourceLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetMoves200ResponseDataInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ResourceLinks and assigns it to the Links field.
func (o *GetMoves200ResponseDataInner) SetLinks(v ResourceLinks) {
	o.Links = &v
}

func (o GetMoves200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMoves200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.MacAddress) {
		toSerialize["macAddress"] = o.MacAddress
	}
	if !IsNil(o.ServersUpdated) {
		toSerialize["serversUpdated"] = o.ServersUpdated
	}
	if !IsNil(o.AbsoluteName) {
		toSerialize["absoluteName"] = o.AbsoluteName
	}
	if !IsNil(o.RoleTypes) {
		toSerialize["roleTypes"] = o.RoleTypes
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetMoves200ResponseDataInner struct {
	value *GetMoves200ResponseDataInner
	isSet bool
}

func (v NullableGetMoves200ResponseDataInner) Get() *GetMoves200ResponseDataInner {
	return v.value
}

func (v *NullableGetMoves200ResponseDataInner) Set(val *GetMoves200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMoves200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMoves200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMoves200ResponseDataInner(val *GetMoves200ResponseDataInner) *NullableGetMoves200ResponseDataInner {
	return &NullableGetMoves200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetMoves200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMoves200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


