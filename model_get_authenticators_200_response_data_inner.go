/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the GetAuthenticators200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAuthenticators200ResponseDataInner{}

// GetAuthenticators200ResponseDataInner struct for GetAuthenticators200ResponseDataInner
type GetAuthenticators200ResponseDataInner struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The type of authenticator.
	Type *string `json:"type,omitempty"`
	// The name for the authenticator.
	Name *string `json:"name,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// User-defined fields set for the resource.
	UserDefinedFields *map[string]string `json:"userDefinedFields,omitempty"`
	SecondaryAuthenticator *InlinedAuthenticator `json:"secondaryAuthenticator,omitempty"`
	// The fully qualified domain name or IP address for the authenticator.
	Hostname *string `json:"hostname,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The administrative domain for the Kerberos server.
	Realm *string `json:"realm,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The TCP port number used for communication between the client and server.
	Port *int32 `json:"port,omitempty"`
	// The distinguished name or relative distinguished name of a user with rights to search the LDAP directory.
	AdminDn *string `json:"adminDn,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The password for the distinguished name or relative distinguished name.
	AdminPassword *string `json:"adminPassword,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// Determines whether SSL communication is enabled between Address Manager and the LDAP server.
	SslEnabled *bool `json:"sslEnabled,omitempty"`
	// The type of LDAP schema.
	SchemaType *string `json:"schemaType,omitempty"`
	// The search base distinguished name location from which the search for users on the LDAP server begins.
	SearchBase *string `json:"searchBase,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The user object class used to locate an LDAP user.
	UserObjectClass *string `json:"userObjectClass,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The group object class used to indicate that a DN is a group.
	GroupObjectClass *string `json:"groupObjectClass,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The user attribute for user accounts in the LDAP tree.
	UserPrefix *string `json:"userPrefix,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The variable to be used for the email prefix.
	EmailPrefix *string `json:"emailPrefix,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The attribute used to store user-group membership information.
	MemberOfPrefix *string `json:"memberOfPrefix,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The environment property that indicates how to handle referrals from external resources to the service providers.
	ReferralPolicy *string `json:"referralPolicy,omitempty"`
	// The environment property that indicates whether alias entries are dereferenced.
	AliasDereferencePolicy *string `json:"aliasDereferencePolicy,omitempty"`
	// The description of the SAML IdP configuration.
	Description *string `json:"description,omitempty"`
	// Indicates whether SAML IdP authentication is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// The user claim name of the authorization server.
	UserClaim *string `json:"userClaim,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The group claim name of the authorization server.
	GroupClaim *string `json:"groupClaim,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The email claim name of the authorization server.
	EmailClaim *string `json:"emailClaim,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The method that indicates where the token validation occurs.
	ValidationMethod *string `json:"validationMethod,omitempty"`
	// The public identifier of the application.
	ClientId *string `json:"clientId,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The client secret known only to the application and authorization server.
	ClientSecret *string `json:"clientSecret,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The introspection endpoint that allows Address Manager to check the validity of access tokens.
	IntrospectionUrl *string `json:"introspectionUrl,omitempty"`
	// The endpoint containing information about the user, including the group membership information and user ID.
	UserInfoUrl *string `json:"userInfoUrl,omitempty"`
	// The authorization method used when Address Manager sends the client ID and client secret to the authorization server.
	AuthorizationOption *string `json:"authorizationOption,omitempty"`
	// The name of the BAM API bearer token obtained from the authorization server.
	Audience *string `json:"audience,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The name of the token issuer.
	Issuer *string `json:"issuer,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The SAML IdP server signing certificate.
	SigningCertificate *string `json:"signingCertificate,omitempty"`
	// The value that overrides the timeout setting used for authentication requests sent to the TACACS+ server.
	Timeout *string `json:"timeout,omitempty"`
	// The number of times Address Manager attempts to retransmit a failed authentication request sent to the RADIUS server.
	Retries *int32 `json:"retries,omitempty"`
	// The shared secret used to encrypt and decrypt packets between the client and the server.
	SharedSecret *string `json:"sharedSecret,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The authentication protocol.
	AuthenticationProtocol *string `json:"authenticationProtocol,omitempty"`
	// The special attribute used for the custom service in the TACACS+ server. This attribute is used to get the group name defined in the TACACS+ server.
	GroupAttribute *string `json:"groupAttribute,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The attribute name for email in the SAML response.
	EmailAttribute *string `json:"emailAttribute,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The sign-in URL of the SAMP IdP.
	SignOnUrl *string `json:"signOnUrl,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The logout URL of the SAMP IdP.
	LogoutUrl *string `json:"logoutUrl,omitempty"`
	// The entity ID of the SAMP IdP.
	EntityId *string `json:"entityId,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	Attributes []NameValuePairBean `json:"attributes,omitempty"`
	Links *ResourceLinks `json:"_links,omitempty"`
}

// NewGetAuthenticators200ResponseDataInner instantiates a new GetAuthenticators200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAuthenticators200ResponseDataInner() *GetAuthenticators200ResponseDataInner {
	this := GetAuthenticators200ResponseDataInner{}
	return &this
}

// NewGetAuthenticators200ResponseDataInnerWithDefaults instantiates a new GetAuthenticators200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAuthenticators200ResponseDataInnerWithDefaults() *GetAuthenticators200ResponseDataInner {
	this := GetAuthenticators200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetAuthenticators200ResponseDataInner) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetAuthenticators200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetAuthenticators200ResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetUserDefinedFields() map[string]string {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret map[string]string
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetUserDefinedFieldsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given map[string]string and assigns it to the UserDefinedFields field.
func (o *GetAuthenticators200ResponseDataInner) SetUserDefinedFields(v map[string]string) {
	o.UserDefinedFields = &v
}

// GetSecondaryAuthenticator returns the SecondaryAuthenticator field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetSecondaryAuthenticator() InlinedAuthenticator {
	if o == nil || IsNil(o.SecondaryAuthenticator) {
		var ret InlinedAuthenticator
		return ret
	}
	return *o.SecondaryAuthenticator
}

// GetSecondaryAuthenticatorOk returns a tuple with the SecondaryAuthenticator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetSecondaryAuthenticatorOk() (*InlinedAuthenticator, bool) {
	if o == nil || IsNil(o.SecondaryAuthenticator) {
		return nil, false
	}
	return o.SecondaryAuthenticator, true
}

// HasSecondaryAuthenticator returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasSecondaryAuthenticator() bool {
	if o != nil && !IsNil(o.SecondaryAuthenticator) {
		return true
	}

	return false
}

// SetSecondaryAuthenticator gets a reference to the given InlinedAuthenticator and assigns it to the SecondaryAuthenticator field.
func (o *GetAuthenticators200ResponseDataInner) SetSecondaryAuthenticator(v InlinedAuthenticator) {
	o.SecondaryAuthenticator = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *GetAuthenticators200ResponseDataInner) SetHostname(v string) {
	o.Hostname = &v
}

// GetRealm returns the Realm field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetRealm() string {
	if o == nil || IsNil(o.Realm) {
		var ret string
		return ret
	}
	return *o.Realm
}

// GetRealmOk returns a tuple with the Realm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetRealmOk() (*string, bool) {
	if o == nil || IsNil(o.Realm) {
		return nil, false
	}
	return o.Realm, true
}

// HasRealm returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasRealm() bool {
	if o != nil && !IsNil(o.Realm) {
		return true
	}

	return false
}

// SetRealm gets a reference to the given string and assigns it to the Realm field.
func (o *GetAuthenticators200ResponseDataInner) SetRealm(v string) {
	o.Realm = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *GetAuthenticators200ResponseDataInner) SetPort(v int32) {
	o.Port = &v
}

// GetAdminDn returns the AdminDn field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetAdminDn() string {
	if o == nil || IsNil(o.AdminDn) {
		var ret string
		return ret
	}
	return *o.AdminDn
}

// GetAdminDnOk returns a tuple with the AdminDn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetAdminDnOk() (*string, bool) {
	if o == nil || IsNil(o.AdminDn) {
		return nil, false
	}
	return o.AdminDn, true
}

// HasAdminDn returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasAdminDn() bool {
	if o != nil && !IsNil(o.AdminDn) {
		return true
	}

	return false
}

// SetAdminDn gets a reference to the given string and assigns it to the AdminDn field.
func (o *GetAuthenticators200ResponseDataInner) SetAdminDn(v string) {
	o.AdminDn = &v
}

// GetAdminPassword returns the AdminPassword field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetAdminPassword() string {
	if o == nil || IsNil(o.AdminPassword) {
		var ret string
		return ret
	}
	return *o.AdminPassword
}

// GetAdminPasswordOk returns a tuple with the AdminPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetAdminPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.AdminPassword) {
		return nil, false
	}
	return o.AdminPassword, true
}

// HasAdminPassword returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasAdminPassword() bool {
	if o != nil && !IsNil(o.AdminPassword) {
		return true
	}

	return false
}

// SetAdminPassword gets a reference to the given string and assigns it to the AdminPassword field.
func (o *GetAuthenticators200ResponseDataInner) SetAdminPassword(v string) {
	o.AdminPassword = &v
}

// GetSslEnabled returns the SslEnabled field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetSslEnabled() bool {
	if o == nil || IsNil(o.SslEnabled) {
		var ret bool
		return ret
	}
	return *o.SslEnabled
}

// GetSslEnabledOk returns a tuple with the SslEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetSslEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SslEnabled) {
		return nil, false
	}
	return o.SslEnabled, true
}

// HasSslEnabled returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasSslEnabled() bool {
	if o != nil && !IsNil(o.SslEnabled) {
		return true
	}

	return false
}

// SetSslEnabled gets a reference to the given bool and assigns it to the SslEnabled field.
func (o *GetAuthenticators200ResponseDataInner) SetSslEnabled(v bool) {
	o.SslEnabled = &v
}

// GetSchemaType returns the SchemaType field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetSchemaType() string {
	if o == nil || IsNil(o.SchemaType) {
		var ret string
		return ret
	}
	return *o.SchemaType
}

// GetSchemaTypeOk returns a tuple with the SchemaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetSchemaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SchemaType) {
		return nil, false
	}
	return o.SchemaType, true
}

// HasSchemaType returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasSchemaType() bool {
	if o != nil && !IsNil(o.SchemaType) {
		return true
	}

	return false
}

// SetSchemaType gets a reference to the given string and assigns it to the SchemaType field.
func (o *GetAuthenticators200ResponseDataInner) SetSchemaType(v string) {
	o.SchemaType = &v
}

// GetSearchBase returns the SearchBase field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetSearchBase() string {
	if o == nil || IsNil(o.SearchBase) {
		var ret string
		return ret
	}
	return *o.SearchBase
}

// GetSearchBaseOk returns a tuple with the SearchBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetSearchBaseOk() (*string, bool) {
	if o == nil || IsNil(o.SearchBase) {
		return nil, false
	}
	return o.SearchBase, true
}

// HasSearchBase returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasSearchBase() bool {
	if o != nil && !IsNil(o.SearchBase) {
		return true
	}

	return false
}

// SetSearchBase gets a reference to the given string and assigns it to the SearchBase field.
func (o *GetAuthenticators200ResponseDataInner) SetSearchBase(v string) {
	o.SearchBase = &v
}

// GetUserObjectClass returns the UserObjectClass field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetUserObjectClass() string {
	if o == nil || IsNil(o.UserObjectClass) {
		var ret string
		return ret
	}
	return *o.UserObjectClass
}

// GetUserObjectClassOk returns a tuple with the UserObjectClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetUserObjectClassOk() (*string, bool) {
	if o == nil || IsNil(o.UserObjectClass) {
		return nil, false
	}
	return o.UserObjectClass, true
}

// HasUserObjectClass returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasUserObjectClass() bool {
	if o != nil && !IsNil(o.UserObjectClass) {
		return true
	}

	return false
}

// SetUserObjectClass gets a reference to the given string and assigns it to the UserObjectClass field.
func (o *GetAuthenticators200ResponseDataInner) SetUserObjectClass(v string) {
	o.UserObjectClass = &v
}

// GetGroupObjectClass returns the GroupObjectClass field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetGroupObjectClass() string {
	if o == nil || IsNil(o.GroupObjectClass) {
		var ret string
		return ret
	}
	return *o.GroupObjectClass
}

// GetGroupObjectClassOk returns a tuple with the GroupObjectClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetGroupObjectClassOk() (*string, bool) {
	if o == nil || IsNil(o.GroupObjectClass) {
		return nil, false
	}
	return o.GroupObjectClass, true
}

// HasGroupObjectClass returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasGroupObjectClass() bool {
	if o != nil && !IsNil(o.GroupObjectClass) {
		return true
	}

	return false
}

// SetGroupObjectClass gets a reference to the given string and assigns it to the GroupObjectClass field.
func (o *GetAuthenticators200ResponseDataInner) SetGroupObjectClass(v string) {
	o.GroupObjectClass = &v
}

// GetUserPrefix returns the UserPrefix field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetUserPrefix() string {
	if o == nil || IsNil(o.UserPrefix) {
		var ret string
		return ret
	}
	return *o.UserPrefix
}

// GetUserPrefixOk returns a tuple with the UserPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetUserPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.UserPrefix) {
		return nil, false
	}
	return o.UserPrefix, true
}

// HasUserPrefix returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasUserPrefix() bool {
	if o != nil && !IsNil(o.UserPrefix) {
		return true
	}

	return false
}

// SetUserPrefix gets a reference to the given string and assigns it to the UserPrefix field.
func (o *GetAuthenticators200ResponseDataInner) SetUserPrefix(v string) {
	o.UserPrefix = &v
}

// GetEmailPrefix returns the EmailPrefix field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetEmailPrefix() string {
	if o == nil || IsNil(o.EmailPrefix) {
		var ret string
		return ret
	}
	return *o.EmailPrefix
}

// GetEmailPrefixOk returns a tuple with the EmailPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetEmailPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.EmailPrefix) {
		return nil, false
	}
	return o.EmailPrefix, true
}

// HasEmailPrefix returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasEmailPrefix() bool {
	if o != nil && !IsNil(o.EmailPrefix) {
		return true
	}

	return false
}

// SetEmailPrefix gets a reference to the given string and assigns it to the EmailPrefix field.
func (o *GetAuthenticators200ResponseDataInner) SetEmailPrefix(v string) {
	o.EmailPrefix = &v
}

// GetMemberOfPrefix returns the MemberOfPrefix field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetMemberOfPrefix() string {
	if o == nil || IsNil(o.MemberOfPrefix) {
		var ret string
		return ret
	}
	return *o.MemberOfPrefix
}

// GetMemberOfPrefixOk returns a tuple with the MemberOfPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetMemberOfPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.MemberOfPrefix) {
		return nil, false
	}
	return o.MemberOfPrefix, true
}

// HasMemberOfPrefix returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasMemberOfPrefix() bool {
	if o != nil && !IsNil(o.MemberOfPrefix) {
		return true
	}

	return false
}

// SetMemberOfPrefix gets a reference to the given string and assigns it to the MemberOfPrefix field.
func (o *GetAuthenticators200ResponseDataInner) SetMemberOfPrefix(v string) {
	o.MemberOfPrefix = &v
}

// GetReferralPolicy returns the ReferralPolicy field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetReferralPolicy() string {
	if o == nil || IsNil(o.ReferralPolicy) {
		var ret string
		return ret
	}
	return *o.ReferralPolicy
}

// GetReferralPolicyOk returns a tuple with the ReferralPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetReferralPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.ReferralPolicy) {
		return nil, false
	}
	return o.ReferralPolicy, true
}

// HasReferralPolicy returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasReferralPolicy() bool {
	if o != nil && !IsNil(o.ReferralPolicy) {
		return true
	}

	return false
}

// SetReferralPolicy gets a reference to the given string and assigns it to the ReferralPolicy field.
func (o *GetAuthenticators200ResponseDataInner) SetReferralPolicy(v string) {
	o.ReferralPolicy = &v
}

// GetAliasDereferencePolicy returns the AliasDereferencePolicy field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetAliasDereferencePolicy() string {
	if o == nil || IsNil(o.AliasDereferencePolicy) {
		var ret string
		return ret
	}
	return *o.AliasDereferencePolicy
}

// GetAliasDereferencePolicyOk returns a tuple with the AliasDereferencePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetAliasDereferencePolicyOk() (*string, bool) {
	if o == nil || IsNil(o.AliasDereferencePolicy) {
		return nil, false
	}
	return o.AliasDereferencePolicy, true
}

// HasAliasDereferencePolicy returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasAliasDereferencePolicy() bool {
	if o != nil && !IsNil(o.AliasDereferencePolicy) {
		return true
	}

	return false
}

// SetAliasDereferencePolicy gets a reference to the given string and assigns it to the AliasDereferencePolicy field.
func (o *GetAuthenticators200ResponseDataInner) SetAliasDereferencePolicy(v string) {
	o.AliasDereferencePolicy = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetAuthenticators200ResponseDataInner) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetAuthenticators200ResponseDataInner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetUserClaim returns the UserClaim field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetUserClaim() string {
	if o == nil || IsNil(o.UserClaim) {
		var ret string
		return ret
	}
	return *o.UserClaim
}

// GetUserClaimOk returns a tuple with the UserClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetUserClaimOk() (*string, bool) {
	if o == nil || IsNil(o.UserClaim) {
		return nil, false
	}
	return o.UserClaim, true
}

// HasUserClaim returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasUserClaim() bool {
	if o != nil && !IsNil(o.UserClaim) {
		return true
	}

	return false
}

// SetUserClaim gets a reference to the given string and assigns it to the UserClaim field.
func (o *GetAuthenticators200ResponseDataInner) SetUserClaim(v string) {
	o.UserClaim = &v
}

// GetGroupClaim returns the GroupClaim field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetGroupClaim() string {
	if o == nil || IsNil(o.GroupClaim) {
		var ret string
		return ret
	}
	return *o.GroupClaim
}

// GetGroupClaimOk returns a tuple with the GroupClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetGroupClaimOk() (*string, bool) {
	if o == nil || IsNil(o.GroupClaim) {
		return nil, false
	}
	return o.GroupClaim, true
}

// HasGroupClaim returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasGroupClaim() bool {
	if o != nil && !IsNil(o.GroupClaim) {
		return true
	}

	return false
}

// SetGroupClaim gets a reference to the given string and assigns it to the GroupClaim field.
func (o *GetAuthenticators200ResponseDataInner) SetGroupClaim(v string) {
	o.GroupClaim = &v
}

// GetEmailClaim returns the EmailClaim field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetEmailClaim() string {
	if o == nil || IsNil(o.EmailClaim) {
		var ret string
		return ret
	}
	return *o.EmailClaim
}

// GetEmailClaimOk returns a tuple with the EmailClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetEmailClaimOk() (*string, bool) {
	if o == nil || IsNil(o.EmailClaim) {
		return nil, false
	}
	return o.EmailClaim, true
}

// HasEmailClaim returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasEmailClaim() bool {
	if o != nil && !IsNil(o.EmailClaim) {
		return true
	}

	return false
}

// SetEmailClaim gets a reference to the given string and assigns it to the EmailClaim field.
func (o *GetAuthenticators200ResponseDataInner) SetEmailClaim(v string) {
	o.EmailClaim = &v
}

// GetValidationMethod returns the ValidationMethod field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetValidationMethod() string {
	if o == nil || IsNil(o.ValidationMethod) {
		var ret string
		return ret
	}
	return *o.ValidationMethod
}

// GetValidationMethodOk returns a tuple with the ValidationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetValidationMethodOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationMethod) {
		return nil, false
	}
	return o.ValidationMethod, true
}

// HasValidationMethod returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasValidationMethod() bool {
	if o != nil && !IsNil(o.ValidationMethod) {
		return true
	}

	return false
}

// SetValidationMethod gets a reference to the given string and assigns it to the ValidationMethod field.
func (o *GetAuthenticators200ResponseDataInner) SetValidationMethod(v string) {
	o.ValidationMethod = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *GetAuthenticators200ResponseDataInner) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *GetAuthenticators200ResponseDataInner) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetIntrospectionUrl returns the IntrospectionUrl field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetIntrospectionUrl() string {
	if o == nil || IsNil(o.IntrospectionUrl) {
		var ret string
		return ret
	}
	return *o.IntrospectionUrl
}

// GetIntrospectionUrlOk returns a tuple with the IntrospectionUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetIntrospectionUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IntrospectionUrl) {
		return nil, false
	}
	return o.IntrospectionUrl, true
}

// HasIntrospectionUrl returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasIntrospectionUrl() bool {
	if o != nil && !IsNil(o.IntrospectionUrl) {
		return true
	}

	return false
}

// SetIntrospectionUrl gets a reference to the given string and assigns it to the IntrospectionUrl field.
func (o *GetAuthenticators200ResponseDataInner) SetIntrospectionUrl(v string) {
	o.IntrospectionUrl = &v
}

// GetUserInfoUrl returns the UserInfoUrl field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetUserInfoUrl() string {
	if o == nil || IsNil(o.UserInfoUrl) {
		var ret string
		return ret
	}
	return *o.UserInfoUrl
}

// GetUserInfoUrlOk returns a tuple with the UserInfoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetUserInfoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.UserInfoUrl) {
		return nil, false
	}
	return o.UserInfoUrl, true
}

// HasUserInfoUrl returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasUserInfoUrl() bool {
	if o != nil && !IsNil(o.UserInfoUrl) {
		return true
	}

	return false
}

// SetUserInfoUrl gets a reference to the given string and assigns it to the UserInfoUrl field.
func (o *GetAuthenticators200ResponseDataInner) SetUserInfoUrl(v string) {
	o.UserInfoUrl = &v
}

// GetAuthorizationOption returns the AuthorizationOption field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetAuthorizationOption() string {
	if o == nil || IsNil(o.AuthorizationOption) {
		var ret string
		return ret
	}
	return *o.AuthorizationOption
}

// GetAuthorizationOptionOk returns a tuple with the AuthorizationOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetAuthorizationOptionOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationOption) {
		return nil, false
	}
	return o.AuthorizationOption, true
}

// HasAuthorizationOption returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasAuthorizationOption() bool {
	if o != nil && !IsNil(o.AuthorizationOption) {
		return true
	}

	return false
}

// SetAuthorizationOption gets a reference to the given string and assigns it to the AuthorizationOption field.
func (o *GetAuthenticators200ResponseDataInner) SetAuthorizationOption(v string) {
	o.AuthorizationOption = &v
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetAudience() string {
	if o == nil || IsNil(o.Audience) {
		var ret string
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetAudienceOk() (*string, bool) {
	if o == nil || IsNil(o.Audience) {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasAudience() bool {
	if o != nil && !IsNil(o.Audience) {
		return true
	}

	return false
}

// SetAudience gets a reference to the given string and assigns it to the Audience field.
func (o *GetAuthenticators200ResponseDataInner) SetAudience(v string) {
	o.Audience = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetIssuer() string {
	if o == nil || IsNil(o.Issuer) {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *GetAuthenticators200ResponseDataInner) SetIssuer(v string) {
	o.Issuer = &v
}

// GetSigningCertificate returns the SigningCertificate field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetSigningCertificate() string {
	if o == nil || IsNil(o.SigningCertificate) {
		var ret string
		return ret
	}
	return *o.SigningCertificate
}

// GetSigningCertificateOk returns a tuple with the SigningCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetSigningCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.SigningCertificate) {
		return nil, false
	}
	return o.SigningCertificate, true
}

// HasSigningCertificate returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasSigningCertificate() bool {
	if o != nil && !IsNil(o.SigningCertificate) {
		return true
	}

	return false
}

// SetSigningCertificate gets a reference to the given string and assigns it to the SigningCertificate field.
func (o *GetAuthenticators200ResponseDataInner) SetSigningCertificate(v string) {
	o.SigningCertificate = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetTimeout() string {
	if o == nil || IsNil(o.Timeout) {
		var ret string
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given string and assigns it to the Timeout field.
func (o *GetAuthenticators200ResponseDataInner) SetTimeout(v string) {
	o.Timeout = &v
}

// GetRetries returns the Retries field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetRetries() int32 {
	if o == nil || IsNil(o.Retries) {
		var ret int32
		return ret
	}
	return *o.Retries
}

// GetRetriesOk returns a tuple with the Retries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetRetriesOk() (*int32, bool) {
	if o == nil || IsNil(o.Retries) {
		return nil, false
	}
	return o.Retries, true
}

// HasRetries returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasRetries() bool {
	if o != nil && !IsNil(o.Retries) {
		return true
	}

	return false
}

// SetRetries gets a reference to the given int32 and assigns it to the Retries field.
func (o *GetAuthenticators200ResponseDataInner) SetRetries(v int32) {
	o.Retries = &v
}

// GetSharedSecret returns the SharedSecret field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetSharedSecret() string {
	if o == nil || IsNil(o.SharedSecret) {
		var ret string
		return ret
	}
	return *o.SharedSecret
}

// GetSharedSecretOk returns a tuple with the SharedSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetSharedSecretOk() (*string, bool) {
	if o == nil || IsNil(o.SharedSecret) {
		return nil, false
	}
	return o.SharedSecret, true
}

// HasSharedSecret returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasSharedSecret() bool {
	if o != nil && !IsNil(o.SharedSecret) {
		return true
	}

	return false
}

// SetSharedSecret gets a reference to the given string and assigns it to the SharedSecret field.
func (o *GetAuthenticators200ResponseDataInner) SetSharedSecret(v string) {
	o.SharedSecret = &v
}

// GetAuthenticationProtocol returns the AuthenticationProtocol field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetAuthenticationProtocol() string {
	if o == nil || IsNil(o.AuthenticationProtocol) {
		var ret string
		return ret
	}
	return *o.AuthenticationProtocol
}

// GetAuthenticationProtocolOk returns a tuple with the AuthenticationProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetAuthenticationProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationProtocol) {
		return nil, false
	}
	return o.AuthenticationProtocol, true
}

// HasAuthenticationProtocol returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasAuthenticationProtocol() bool {
	if o != nil && !IsNil(o.AuthenticationProtocol) {
		return true
	}

	return false
}

// SetAuthenticationProtocol gets a reference to the given string and assigns it to the AuthenticationProtocol field.
func (o *GetAuthenticators200ResponseDataInner) SetAuthenticationProtocol(v string) {
	o.AuthenticationProtocol = &v
}

// GetGroupAttribute returns the GroupAttribute field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetGroupAttribute() string {
	if o == nil || IsNil(o.GroupAttribute) {
		var ret string
		return ret
	}
	return *o.GroupAttribute
}

// GetGroupAttributeOk returns a tuple with the GroupAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetGroupAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.GroupAttribute) {
		return nil, false
	}
	return o.GroupAttribute, true
}

// HasGroupAttribute returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasGroupAttribute() bool {
	if o != nil && !IsNil(o.GroupAttribute) {
		return true
	}

	return false
}

// SetGroupAttribute gets a reference to the given string and assigns it to the GroupAttribute field.
func (o *GetAuthenticators200ResponseDataInner) SetGroupAttribute(v string) {
	o.GroupAttribute = &v
}

// GetEmailAttribute returns the EmailAttribute field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetEmailAttribute() string {
	if o == nil || IsNil(o.EmailAttribute) {
		var ret string
		return ret
	}
	return *o.EmailAttribute
}

// GetEmailAttributeOk returns a tuple with the EmailAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetEmailAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAttribute) {
		return nil, false
	}
	return o.EmailAttribute, true
}

// HasEmailAttribute returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasEmailAttribute() bool {
	if o != nil && !IsNil(o.EmailAttribute) {
		return true
	}

	return false
}

// SetEmailAttribute gets a reference to the given string and assigns it to the EmailAttribute field.
func (o *GetAuthenticators200ResponseDataInner) SetEmailAttribute(v string) {
	o.EmailAttribute = &v
}

// GetSignOnUrl returns the SignOnUrl field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetSignOnUrl() string {
	if o == nil || IsNil(o.SignOnUrl) {
		var ret string
		return ret
	}
	return *o.SignOnUrl
}

// GetSignOnUrlOk returns a tuple with the SignOnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetSignOnUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SignOnUrl) {
		return nil, false
	}
	return o.SignOnUrl, true
}

// HasSignOnUrl returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasSignOnUrl() bool {
	if o != nil && !IsNil(o.SignOnUrl) {
		return true
	}

	return false
}

// SetSignOnUrl gets a reference to the given string and assigns it to the SignOnUrl field.
func (o *GetAuthenticators200ResponseDataInner) SetSignOnUrl(v string) {
	o.SignOnUrl = &v
}

// GetLogoutUrl returns the LogoutUrl field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetLogoutUrl() string {
	if o == nil || IsNil(o.LogoutUrl) {
		var ret string
		return ret
	}
	return *o.LogoutUrl
}

// GetLogoutUrlOk returns a tuple with the LogoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetLogoutUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LogoutUrl) {
		return nil, false
	}
	return o.LogoutUrl, true
}

// HasLogoutUrl returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasLogoutUrl() bool {
	if o != nil && !IsNil(o.LogoutUrl) {
		return true
	}

	return false
}

// SetLogoutUrl gets a reference to the given string and assigns it to the LogoutUrl field.
func (o *GetAuthenticators200ResponseDataInner) SetLogoutUrl(v string) {
	o.LogoutUrl = &v
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetEntityId() string {
	if o == nil || IsNil(o.EntityId) {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.EntityId) {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasEntityId() bool {
	if o != nil && !IsNil(o.EntityId) {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *GetAuthenticators200ResponseDataInner) SetEntityId(v string) {
	o.EntityId = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetAttributes() []NameValuePairBean {
	if o == nil || IsNil(o.Attributes) {
		var ret []NameValuePairBean
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetAttributesOk() ([]NameValuePairBean, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []NameValuePairBean and assigns it to the Attributes field.
func (o *GetAuthenticators200ResponseDataInner) SetAttributes(v []NameValuePairBean) {
	o.Attributes = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetAuthenticators200ResponseDataInner) GetLinks() ResourceLinks {
	if o == nil || IsNil(o.Links) {
		var ret ResourceLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAuthenticators200ResponseDataInner) GetLinksOk() (*ResourceLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetAuthenticators200ResponseDataInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ResourceLinks and assigns it to the Links field.
func (o *GetAuthenticators200ResponseDataInner) SetLinks(v ResourceLinks) {
	o.Links = &v
}

func (o GetAuthenticators200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAuthenticators200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	if !IsNil(o.SecondaryAuthenticator) {
		toSerialize["secondaryAuthenticator"] = o.SecondaryAuthenticator
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Realm) {
		toSerialize["realm"] = o.Realm
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.AdminDn) {
		toSerialize["adminDn"] = o.AdminDn
	}
	if !IsNil(o.AdminPassword) {
		toSerialize["adminPassword"] = o.AdminPassword
	}
	if !IsNil(o.SslEnabled) {
		toSerialize["sslEnabled"] = o.SslEnabled
	}
	if !IsNil(o.SchemaType) {
		toSerialize["schemaType"] = o.SchemaType
	}
	if !IsNil(o.SearchBase) {
		toSerialize["searchBase"] = o.SearchBase
	}
	if !IsNil(o.UserObjectClass) {
		toSerialize["userObjectClass"] = o.UserObjectClass
	}
	if !IsNil(o.GroupObjectClass) {
		toSerialize["groupObjectClass"] = o.GroupObjectClass
	}
	if !IsNil(o.UserPrefix) {
		toSerialize["userPrefix"] = o.UserPrefix
	}
	if !IsNil(o.EmailPrefix) {
		toSerialize["emailPrefix"] = o.EmailPrefix
	}
	if !IsNil(o.MemberOfPrefix) {
		toSerialize["memberOfPrefix"] = o.MemberOfPrefix
	}
	if !IsNil(o.ReferralPolicy) {
		toSerialize["referralPolicy"] = o.ReferralPolicy
	}
	if !IsNil(o.AliasDereferencePolicy) {
		toSerialize["aliasDereferencePolicy"] = o.AliasDereferencePolicy
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.UserClaim) {
		toSerialize["userClaim"] = o.UserClaim
	}
	if !IsNil(o.GroupClaim) {
		toSerialize["groupClaim"] = o.GroupClaim
	}
	if !IsNil(o.EmailClaim) {
		toSerialize["emailClaim"] = o.EmailClaim
	}
	if !IsNil(o.ValidationMethod) {
		toSerialize["validationMethod"] = o.ValidationMethod
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if !IsNil(o.IntrospectionUrl) {
		toSerialize["introspectionUrl"] = o.IntrospectionUrl
	}
	if !IsNil(o.UserInfoUrl) {
		toSerialize["userInfoUrl"] = o.UserInfoUrl
	}
	if !IsNil(o.AuthorizationOption) {
		toSerialize["authorizationOption"] = o.AuthorizationOption
	}
	if !IsNil(o.Audience) {
		toSerialize["audience"] = o.Audience
	}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.SigningCertificate) {
		toSerialize["signingCertificate"] = o.SigningCertificate
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.Retries) {
		toSerialize["retries"] = o.Retries
	}
	if !IsNil(o.SharedSecret) {
		toSerialize["sharedSecret"] = o.SharedSecret
	}
	if !IsNil(o.AuthenticationProtocol) {
		toSerialize["authenticationProtocol"] = o.AuthenticationProtocol
	}
	if !IsNil(o.GroupAttribute) {
		toSerialize["groupAttribute"] = o.GroupAttribute
	}
	if !IsNil(o.EmailAttribute) {
		toSerialize["emailAttribute"] = o.EmailAttribute
	}
	if !IsNil(o.SignOnUrl) {
		toSerialize["signOnUrl"] = o.SignOnUrl
	}
	if !IsNil(o.LogoutUrl) {
		toSerialize["logoutUrl"] = o.LogoutUrl
	}
	if !IsNil(o.EntityId) {
		toSerialize["entityId"] = o.EntityId
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetAuthenticators200ResponseDataInner struct {
	value *GetAuthenticators200ResponseDataInner
	isSet bool
}

func (v NullableGetAuthenticators200ResponseDataInner) Get() *GetAuthenticators200ResponseDataInner {
	return v.value
}

func (v *NullableGetAuthenticators200ResponseDataInner) Set(val *GetAuthenticators200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAuthenticators200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAuthenticators200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAuthenticators200ResponseDataInner(val *GetAuthenticators200ResponseDataInner) *NullableGetAuthenticators200ResponseDataInner {
	return &NullableGetAuthenticators200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetAuthenticators200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAuthenticators200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


