/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the GetSigningPolicies200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSigningPolicies200ResponseDataInner{}

// GetSigningPolicies200ResponseDataInner struct for GetSigningPolicies200ResponseDataInner
type GetSigningPolicies200ResponseDataInner struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The resource type.
	Type *string `json:"type,omitempty"`
	// The name of the resource.
	Name *string `json:"name,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// User-defined fields set for the resource.
	UserDefinedFields *map[string]string `json:"userDefinedFields,omitempty"`
	// The system that created the DNSSEC signing key.
	KeyProvider *string `json:"keyProvider,omitempty"`
	// The algorithm used for the Delegation Signer (DS) record.
	SignatureDigestAlgorithm *string `json:"signatureDigestAlgorithm,omitempty"`
	// The duration for which the RRSIG resource record is valid.
	SignatureValidityPeriod *string `json:"signatureValidityPeriod,omitempty"`
	// The duration before the end of the signature validity period at which BIND resigns the zone.
	SignatureResigningPeriod *string `json:"signatureResigningPeriod,omitempty"`
	// The algorithm for the Zone Signing Key (ZSK).
	ZoneSigningKeyAlgorithm *string `json:"zoneSigningKeyAlgorithm,omitempty"`
	// The length of the zone signing key in bits.
	ZoneSigningKeyLength *int32 `json:"zoneSigningKeyLength,omitempty"`
	// The overridden TTL value of the zone signing key.
	ZoneSigningKeyOverrideTtl *string `json:"zoneSigningKeyOverrideTtl,omitempty"`
	// The duration for which the zone signing key is valid.
	ZoneSigningKeyValidityPeriod *string `json:"zoneSigningKeyValidityPeriod,omitempty"`
	// The duration before the end of the validity period at which a new key is generated for key rollover.
	ZoneSigningKeyOverlapPeriod *string `json:"zoneSigningKeyOverlapPeriod,omitempty"`
	// The method to make the new zone signing key available when the key rolls over.
	ZoneSigningKeyRolloverMethod *string `json:"zoneSigningKeyRolloverMethod,omitempty"`
	// The duration before the end of the key validity period. During this time, the resource records in the zone are simultaneously signed by the new key and unsigned by the old key.
	ZoneSigningKeySigningPeriod *string `json:"zoneSigningKeySigningPeriod,omitempty"`
	// The zone signing key protection type when Enstrust HSM is configured as the key provider.
	ZoneSigningKeyProtectionType *string `json:"zoneSigningKeyProtectionType,omitempty"`
	// The algorithm for the key signing key (KSK).
	KeySigningKeyAlgorithm *string `json:"keySigningKeyAlgorithm,omitempty"`
	// The length of the key signing key in bits.
	KeySigningKeyLength *int32 `json:"keySigningKeyLength,omitempty"`
	// The overridden TTL value of the key signing key.
	KeySigningKeyOverrideTtl *string `json:"keySigningKeyOverrideTtl,omitempty"`
	// The duration for which the key signing key is valid.
	KeySigningKeyValidityPeriod *string `json:"keySigningKeyValidityPeriod,omitempty"`
	// The duration before the end of the validity period at which a new key is generated for key rollover.
	KeySigningKeyOverlapPeriod *string `json:"keySigningKeyOverlapPeriod,omitempty"`
	// The method to make the new key signing key available when the key rolls over.
	KeySigningKeyRolloverMethod *string `json:"keySigningKeyRolloverMethod,omitempty"`
	// The duration before the end of the key validity period. During this time, the resource records in the keys are simultaneously signed by the new key and unsigned by the old key.
	KeySigningKeySigningPeriod *string `json:"keySigningKeySigningPeriod,omitempty"`
	// The key signing key protection type when Enstrust HSM is configured as the key provider.
	KeySigningKeyProtectionType *string `json:"keySigningKeyProtectionType,omitempty"`
	Links *ResourceLinks `json:"_links,omitempty"`
}

// NewGetSigningPolicies200ResponseDataInner instantiates a new GetSigningPolicies200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSigningPolicies200ResponseDataInner() *GetSigningPolicies200ResponseDataInner {
	this := GetSigningPolicies200ResponseDataInner{}
	return &this
}

// NewGetSigningPolicies200ResponseDataInnerWithDefaults instantiates a new GetSigningPolicies200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSigningPolicies200ResponseDataInnerWithDefaults() *GetSigningPolicies200ResponseDataInner {
	this := GetSigningPolicies200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetSigningPolicies200ResponseDataInner) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetSigningPolicies200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetSigningPolicies200ResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetUserDefinedFields() map[string]string {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret map[string]string
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetUserDefinedFieldsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given map[string]string and assigns it to the UserDefinedFields field.
func (o *GetSigningPolicies200ResponseDataInner) SetUserDefinedFields(v map[string]string) {
	o.UserDefinedFields = &v
}

// GetKeyProvider returns the KeyProvider field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetKeyProvider() string {
	if o == nil || IsNil(o.KeyProvider) {
		var ret string
		return ret
	}
	return *o.KeyProvider
}

// GetKeyProviderOk returns a tuple with the KeyProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetKeyProviderOk() (*string, bool) {
	if o == nil || IsNil(o.KeyProvider) {
		return nil, false
	}
	return o.KeyProvider, true
}

// HasKeyProvider returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasKeyProvider() bool {
	if o != nil && !IsNil(o.KeyProvider) {
		return true
	}

	return false
}

// SetKeyProvider gets a reference to the given string and assigns it to the KeyProvider field.
func (o *GetSigningPolicies200ResponseDataInner) SetKeyProvider(v string) {
	o.KeyProvider = &v
}

// GetSignatureDigestAlgorithm returns the SignatureDigestAlgorithm field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetSignatureDigestAlgorithm() string {
	if o == nil || IsNil(o.SignatureDigestAlgorithm) {
		var ret string
		return ret
	}
	return *o.SignatureDigestAlgorithm
}

// GetSignatureDigestAlgorithmOk returns a tuple with the SignatureDigestAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetSignatureDigestAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureDigestAlgorithm) {
		return nil, false
	}
	return o.SignatureDigestAlgorithm, true
}

// HasSignatureDigestAlgorithm returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasSignatureDigestAlgorithm() bool {
	if o != nil && !IsNil(o.SignatureDigestAlgorithm) {
		return true
	}

	return false
}

// SetSignatureDigestAlgorithm gets a reference to the given string and assigns it to the SignatureDigestAlgorithm field.
func (o *GetSigningPolicies200ResponseDataInner) SetSignatureDigestAlgorithm(v string) {
	o.SignatureDigestAlgorithm = &v
}

// GetSignatureValidityPeriod returns the SignatureValidityPeriod field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetSignatureValidityPeriod() string {
	if o == nil || IsNil(o.SignatureValidityPeriod) {
		var ret string
		return ret
	}
	return *o.SignatureValidityPeriod
}

// GetSignatureValidityPeriodOk returns a tuple with the SignatureValidityPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetSignatureValidityPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureValidityPeriod) {
		return nil, false
	}
	return o.SignatureValidityPeriod, true
}

// HasSignatureValidityPeriod returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasSignatureValidityPeriod() bool {
	if o != nil && !IsNil(o.SignatureValidityPeriod) {
		return true
	}

	return false
}

// SetSignatureValidityPeriod gets a reference to the given string and assigns it to the SignatureValidityPeriod field.
func (o *GetSigningPolicies200ResponseDataInner) SetSignatureValidityPeriod(v string) {
	o.SignatureValidityPeriod = &v
}

// GetSignatureResigningPeriod returns the SignatureResigningPeriod field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetSignatureResigningPeriod() string {
	if o == nil || IsNil(o.SignatureResigningPeriod) {
		var ret string
		return ret
	}
	return *o.SignatureResigningPeriod
}

// GetSignatureResigningPeriodOk returns a tuple with the SignatureResigningPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetSignatureResigningPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureResigningPeriod) {
		return nil, false
	}
	return o.SignatureResigningPeriod, true
}

// HasSignatureResigningPeriod returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasSignatureResigningPeriod() bool {
	if o != nil && !IsNil(o.SignatureResigningPeriod) {
		return true
	}

	return false
}

// SetSignatureResigningPeriod gets a reference to the given string and assigns it to the SignatureResigningPeriod field.
func (o *GetSigningPolicies200ResponseDataInner) SetSignatureResigningPeriod(v string) {
	o.SignatureResigningPeriod = &v
}

// GetZoneSigningKeyAlgorithm returns the ZoneSigningKeyAlgorithm field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyAlgorithm() string {
	if o == nil || IsNil(o.ZoneSigningKeyAlgorithm) {
		var ret string
		return ret
	}
	return *o.ZoneSigningKeyAlgorithm
}

// GetZoneSigningKeyAlgorithmOk returns a tuple with the ZoneSigningKeyAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneSigningKeyAlgorithm) {
		return nil, false
	}
	return o.ZoneSigningKeyAlgorithm, true
}

// HasZoneSigningKeyAlgorithm returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasZoneSigningKeyAlgorithm() bool {
	if o != nil && !IsNil(o.ZoneSigningKeyAlgorithm) {
		return true
	}

	return false
}

// SetZoneSigningKeyAlgorithm gets a reference to the given string and assigns it to the ZoneSigningKeyAlgorithm field.
func (o *GetSigningPolicies200ResponseDataInner) SetZoneSigningKeyAlgorithm(v string) {
	o.ZoneSigningKeyAlgorithm = &v
}

// GetZoneSigningKeyLength returns the ZoneSigningKeyLength field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyLength() int32 {
	if o == nil || IsNil(o.ZoneSigningKeyLength) {
		var ret int32
		return ret
	}
	return *o.ZoneSigningKeyLength
}

// GetZoneSigningKeyLengthOk returns a tuple with the ZoneSigningKeyLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.ZoneSigningKeyLength) {
		return nil, false
	}
	return o.ZoneSigningKeyLength, true
}

// HasZoneSigningKeyLength returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasZoneSigningKeyLength() bool {
	if o != nil && !IsNil(o.ZoneSigningKeyLength) {
		return true
	}

	return false
}

// SetZoneSigningKeyLength gets a reference to the given int32 and assigns it to the ZoneSigningKeyLength field.
func (o *GetSigningPolicies200ResponseDataInner) SetZoneSigningKeyLength(v int32) {
	o.ZoneSigningKeyLength = &v
}

// GetZoneSigningKeyOverrideTtl returns the ZoneSigningKeyOverrideTtl field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyOverrideTtl() string {
	if o == nil || IsNil(o.ZoneSigningKeyOverrideTtl) {
		var ret string
		return ret
	}
	return *o.ZoneSigningKeyOverrideTtl
}

// GetZoneSigningKeyOverrideTtlOk returns a tuple with the ZoneSigningKeyOverrideTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyOverrideTtlOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneSigningKeyOverrideTtl) {
		return nil, false
	}
	return o.ZoneSigningKeyOverrideTtl, true
}

// HasZoneSigningKeyOverrideTtl returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasZoneSigningKeyOverrideTtl() bool {
	if o != nil && !IsNil(o.ZoneSigningKeyOverrideTtl) {
		return true
	}

	return false
}

// SetZoneSigningKeyOverrideTtl gets a reference to the given string and assigns it to the ZoneSigningKeyOverrideTtl field.
func (o *GetSigningPolicies200ResponseDataInner) SetZoneSigningKeyOverrideTtl(v string) {
	o.ZoneSigningKeyOverrideTtl = &v
}

// GetZoneSigningKeyValidityPeriod returns the ZoneSigningKeyValidityPeriod field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyValidityPeriod() string {
	if o == nil || IsNil(o.ZoneSigningKeyValidityPeriod) {
		var ret string
		return ret
	}
	return *o.ZoneSigningKeyValidityPeriod
}

// GetZoneSigningKeyValidityPeriodOk returns a tuple with the ZoneSigningKeyValidityPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyValidityPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneSigningKeyValidityPeriod) {
		return nil, false
	}
	return o.ZoneSigningKeyValidityPeriod, true
}

// HasZoneSigningKeyValidityPeriod returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasZoneSigningKeyValidityPeriod() bool {
	if o != nil && !IsNil(o.ZoneSigningKeyValidityPeriod) {
		return true
	}

	return false
}

// SetZoneSigningKeyValidityPeriod gets a reference to the given string and assigns it to the ZoneSigningKeyValidityPeriod field.
func (o *GetSigningPolicies200ResponseDataInner) SetZoneSigningKeyValidityPeriod(v string) {
	o.ZoneSigningKeyValidityPeriod = &v
}

// GetZoneSigningKeyOverlapPeriod returns the ZoneSigningKeyOverlapPeriod field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyOverlapPeriod() string {
	if o == nil || IsNil(o.ZoneSigningKeyOverlapPeriod) {
		var ret string
		return ret
	}
	return *o.ZoneSigningKeyOverlapPeriod
}

// GetZoneSigningKeyOverlapPeriodOk returns a tuple with the ZoneSigningKeyOverlapPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyOverlapPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneSigningKeyOverlapPeriod) {
		return nil, false
	}
	return o.ZoneSigningKeyOverlapPeriod, true
}

// HasZoneSigningKeyOverlapPeriod returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasZoneSigningKeyOverlapPeriod() bool {
	if o != nil && !IsNil(o.ZoneSigningKeyOverlapPeriod) {
		return true
	}

	return false
}

// SetZoneSigningKeyOverlapPeriod gets a reference to the given string and assigns it to the ZoneSigningKeyOverlapPeriod field.
func (o *GetSigningPolicies200ResponseDataInner) SetZoneSigningKeyOverlapPeriod(v string) {
	o.ZoneSigningKeyOverlapPeriod = &v
}

// GetZoneSigningKeyRolloverMethod returns the ZoneSigningKeyRolloverMethod field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyRolloverMethod() string {
	if o == nil || IsNil(o.ZoneSigningKeyRolloverMethod) {
		var ret string
		return ret
	}
	return *o.ZoneSigningKeyRolloverMethod
}

// GetZoneSigningKeyRolloverMethodOk returns a tuple with the ZoneSigningKeyRolloverMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyRolloverMethodOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneSigningKeyRolloverMethod) {
		return nil, false
	}
	return o.ZoneSigningKeyRolloverMethod, true
}

// HasZoneSigningKeyRolloverMethod returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasZoneSigningKeyRolloverMethod() bool {
	if o != nil && !IsNil(o.ZoneSigningKeyRolloverMethod) {
		return true
	}

	return false
}

// SetZoneSigningKeyRolloverMethod gets a reference to the given string and assigns it to the ZoneSigningKeyRolloverMethod field.
func (o *GetSigningPolicies200ResponseDataInner) SetZoneSigningKeyRolloverMethod(v string) {
	o.ZoneSigningKeyRolloverMethod = &v
}

// GetZoneSigningKeySigningPeriod returns the ZoneSigningKeySigningPeriod field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeySigningPeriod() string {
	if o == nil || IsNil(o.ZoneSigningKeySigningPeriod) {
		var ret string
		return ret
	}
	return *o.ZoneSigningKeySigningPeriod
}

// GetZoneSigningKeySigningPeriodOk returns a tuple with the ZoneSigningKeySigningPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeySigningPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneSigningKeySigningPeriod) {
		return nil, false
	}
	return o.ZoneSigningKeySigningPeriod, true
}

// HasZoneSigningKeySigningPeriod returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasZoneSigningKeySigningPeriod() bool {
	if o != nil && !IsNil(o.ZoneSigningKeySigningPeriod) {
		return true
	}

	return false
}

// SetZoneSigningKeySigningPeriod gets a reference to the given string and assigns it to the ZoneSigningKeySigningPeriod field.
func (o *GetSigningPolicies200ResponseDataInner) SetZoneSigningKeySigningPeriod(v string) {
	o.ZoneSigningKeySigningPeriod = &v
}

// GetZoneSigningKeyProtectionType returns the ZoneSigningKeyProtectionType field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyProtectionType() string {
	if o == nil || IsNil(o.ZoneSigningKeyProtectionType) {
		var ret string
		return ret
	}
	return *o.ZoneSigningKeyProtectionType
}

// GetZoneSigningKeyProtectionTypeOk returns a tuple with the ZoneSigningKeyProtectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetZoneSigningKeyProtectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneSigningKeyProtectionType) {
		return nil, false
	}
	return o.ZoneSigningKeyProtectionType, true
}

// HasZoneSigningKeyProtectionType returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasZoneSigningKeyProtectionType() bool {
	if o != nil && !IsNil(o.ZoneSigningKeyProtectionType) {
		return true
	}

	return false
}

// SetZoneSigningKeyProtectionType gets a reference to the given string and assigns it to the ZoneSigningKeyProtectionType field.
func (o *GetSigningPolicies200ResponseDataInner) SetZoneSigningKeyProtectionType(v string) {
	o.ZoneSigningKeyProtectionType = &v
}

// GetKeySigningKeyAlgorithm returns the KeySigningKeyAlgorithm field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyAlgorithm() string {
	if o == nil || IsNil(o.KeySigningKeyAlgorithm) {
		var ret string
		return ret
	}
	return *o.KeySigningKeyAlgorithm
}

// GetKeySigningKeyAlgorithmOk returns a tuple with the KeySigningKeyAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.KeySigningKeyAlgorithm) {
		return nil, false
	}
	return o.KeySigningKeyAlgorithm, true
}

// HasKeySigningKeyAlgorithm returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasKeySigningKeyAlgorithm() bool {
	if o != nil && !IsNil(o.KeySigningKeyAlgorithm) {
		return true
	}

	return false
}

// SetKeySigningKeyAlgorithm gets a reference to the given string and assigns it to the KeySigningKeyAlgorithm field.
func (o *GetSigningPolicies200ResponseDataInner) SetKeySigningKeyAlgorithm(v string) {
	o.KeySigningKeyAlgorithm = &v
}

// GetKeySigningKeyLength returns the KeySigningKeyLength field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyLength() int32 {
	if o == nil || IsNil(o.KeySigningKeyLength) {
		var ret int32
		return ret
	}
	return *o.KeySigningKeyLength
}

// GetKeySigningKeyLengthOk returns a tuple with the KeySigningKeyLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.KeySigningKeyLength) {
		return nil, false
	}
	return o.KeySigningKeyLength, true
}

// HasKeySigningKeyLength returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasKeySigningKeyLength() bool {
	if o != nil && !IsNil(o.KeySigningKeyLength) {
		return true
	}

	return false
}

// SetKeySigningKeyLength gets a reference to the given int32 and assigns it to the KeySigningKeyLength field.
func (o *GetSigningPolicies200ResponseDataInner) SetKeySigningKeyLength(v int32) {
	o.KeySigningKeyLength = &v
}

// GetKeySigningKeyOverrideTtl returns the KeySigningKeyOverrideTtl field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyOverrideTtl() string {
	if o == nil || IsNil(o.KeySigningKeyOverrideTtl) {
		var ret string
		return ret
	}
	return *o.KeySigningKeyOverrideTtl
}

// GetKeySigningKeyOverrideTtlOk returns a tuple with the KeySigningKeyOverrideTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyOverrideTtlOk() (*string, bool) {
	if o == nil || IsNil(o.KeySigningKeyOverrideTtl) {
		return nil, false
	}
	return o.KeySigningKeyOverrideTtl, true
}

// HasKeySigningKeyOverrideTtl returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasKeySigningKeyOverrideTtl() bool {
	if o != nil && !IsNil(o.KeySigningKeyOverrideTtl) {
		return true
	}

	return false
}

// SetKeySigningKeyOverrideTtl gets a reference to the given string and assigns it to the KeySigningKeyOverrideTtl field.
func (o *GetSigningPolicies200ResponseDataInner) SetKeySigningKeyOverrideTtl(v string) {
	o.KeySigningKeyOverrideTtl = &v
}

// GetKeySigningKeyValidityPeriod returns the KeySigningKeyValidityPeriod field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyValidityPeriod() string {
	if o == nil || IsNil(o.KeySigningKeyValidityPeriod) {
		var ret string
		return ret
	}
	return *o.KeySigningKeyValidityPeriod
}

// GetKeySigningKeyValidityPeriodOk returns a tuple with the KeySigningKeyValidityPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyValidityPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.KeySigningKeyValidityPeriod) {
		return nil, false
	}
	return o.KeySigningKeyValidityPeriod, true
}

// HasKeySigningKeyValidityPeriod returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasKeySigningKeyValidityPeriod() bool {
	if o != nil && !IsNil(o.KeySigningKeyValidityPeriod) {
		return true
	}

	return false
}

// SetKeySigningKeyValidityPeriod gets a reference to the given string and assigns it to the KeySigningKeyValidityPeriod field.
func (o *GetSigningPolicies200ResponseDataInner) SetKeySigningKeyValidityPeriod(v string) {
	o.KeySigningKeyValidityPeriod = &v
}

// GetKeySigningKeyOverlapPeriod returns the KeySigningKeyOverlapPeriod field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyOverlapPeriod() string {
	if o == nil || IsNil(o.KeySigningKeyOverlapPeriod) {
		var ret string
		return ret
	}
	return *o.KeySigningKeyOverlapPeriod
}

// GetKeySigningKeyOverlapPeriodOk returns a tuple with the KeySigningKeyOverlapPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyOverlapPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.KeySigningKeyOverlapPeriod) {
		return nil, false
	}
	return o.KeySigningKeyOverlapPeriod, true
}

// HasKeySigningKeyOverlapPeriod returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasKeySigningKeyOverlapPeriod() bool {
	if o != nil && !IsNil(o.KeySigningKeyOverlapPeriod) {
		return true
	}

	return false
}

// SetKeySigningKeyOverlapPeriod gets a reference to the given string and assigns it to the KeySigningKeyOverlapPeriod field.
func (o *GetSigningPolicies200ResponseDataInner) SetKeySigningKeyOverlapPeriod(v string) {
	o.KeySigningKeyOverlapPeriod = &v
}

// GetKeySigningKeyRolloverMethod returns the KeySigningKeyRolloverMethod field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyRolloverMethod() string {
	if o == nil || IsNil(o.KeySigningKeyRolloverMethod) {
		var ret string
		return ret
	}
	return *o.KeySigningKeyRolloverMethod
}

// GetKeySigningKeyRolloverMethodOk returns a tuple with the KeySigningKeyRolloverMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyRolloverMethodOk() (*string, bool) {
	if o == nil || IsNil(o.KeySigningKeyRolloverMethod) {
		return nil, false
	}
	return o.KeySigningKeyRolloverMethod, true
}

// HasKeySigningKeyRolloverMethod returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasKeySigningKeyRolloverMethod() bool {
	if o != nil && !IsNil(o.KeySigningKeyRolloverMethod) {
		return true
	}

	return false
}

// SetKeySigningKeyRolloverMethod gets a reference to the given string and assigns it to the KeySigningKeyRolloverMethod field.
func (o *GetSigningPolicies200ResponseDataInner) SetKeySigningKeyRolloverMethod(v string) {
	o.KeySigningKeyRolloverMethod = &v
}

// GetKeySigningKeySigningPeriod returns the KeySigningKeySigningPeriod field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeySigningPeriod() string {
	if o == nil || IsNil(o.KeySigningKeySigningPeriod) {
		var ret string
		return ret
	}
	return *o.KeySigningKeySigningPeriod
}

// GetKeySigningKeySigningPeriodOk returns a tuple with the KeySigningKeySigningPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeySigningPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.KeySigningKeySigningPeriod) {
		return nil, false
	}
	return o.KeySigningKeySigningPeriod, true
}

// HasKeySigningKeySigningPeriod returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasKeySigningKeySigningPeriod() bool {
	if o != nil && !IsNil(o.KeySigningKeySigningPeriod) {
		return true
	}

	return false
}

// SetKeySigningKeySigningPeriod gets a reference to the given string and assigns it to the KeySigningKeySigningPeriod field.
func (o *GetSigningPolicies200ResponseDataInner) SetKeySigningKeySigningPeriod(v string) {
	o.KeySigningKeySigningPeriod = &v
}

// GetKeySigningKeyProtectionType returns the KeySigningKeyProtectionType field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyProtectionType() string {
	if o == nil || IsNil(o.KeySigningKeyProtectionType) {
		var ret string
		return ret
	}
	return *o.KeySigningKeyProtectionType
}

// GetKeySigningKeyProtectionTypeOk returns a tuple with the KeySigningKeyProtectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetKeySigningKeyProtectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.KeySigningKeyProtectionType) {
		return nil, false
	}
	return o.KeySigningKeyProtectionType, true
}

// HasKeySigningKeyProtectionType returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasKeySigningKeyProtectionType() bool {
	if o != nil && !IsNil(o.KeySigningKeyProtectionType) {
		return true
	}

	return false
}

// SetKeySigningKeyProtectionType gets a reference to the given string and assigns it to the KeySigningKeyProtectionType field.
func (o *GetSigningPolicies200ResponseDataInner) SetKeySigningKeyProtectionType(v string) {
	o.KeySigningKeyProtectionType = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetSigningPolicies200ResponseDataInner) GetLinks() ResourceLinks {
	if o == nil || IsNil(o.Links) {
		var ret ResourceLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSigningPolicies200ResponseDataInner) GetLinksOk() (*ResourceLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetSigningPolicies200ResponseDataInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ResourceLinks and assigns it to the Links field.
func (o *GetSigningPolicies200ResponseDataInner) SetLinks(v ResourceLinks) {
	o.Links = &v
}

func (o GetSigningPolicies200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSigningPolicies200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	if !IsNil(o.KeyProvider) {
		toSerialize["keyProvider"] = o.KeyProvider
	}
	if !IsNil(o.SignatureDigestAlgorithm) {
		toSerialize["signatureDigestAlgorithm"] = o.SignatureDigestAlgorithm
	}
	if !IsNil(o.SignatureValidityPeriod) {
		toSerialize["signatureValidityPeriod"] = o.SignatureValidityPeriod
	}
	if !IsNil(o.SignatureResigningPeriod) {
		toSerialize["signatureResigningPeriod"] = o.SignatureResigningPeriod
	}
	if !IsNil(o.ZoneSigningKeyAlgorithm) {
		toSerialize["zoneSigningKeyAlgorithm"] = o.ZoneSigningKeyAlgorithm
	}
	if !IsNil(o.ZoneSigningKeyLength) {
		toSerialize["zoneSigningKeyLength"] = o.ZoneSigningKeyLength
	}
	if !IsNil(o.ZoneSigningKeyOverrideTtl) {
		toSerialize["zoneSigningKeyOverrideTtl"] = o.ZoneSigningKeyOverrideTtl
	}
	if !IsNil(o.ZoneSigningKeyValidityPeriod) {
		toSerialize["zoneSigningKeyValidityPeriod"] = o.ZoneSigningKeyValidityPeriod
	}
	if !IsNil(o.ZoneSigningKeyOverlapPeriod) {
		toSerialize["zoneSigningKeyOverlapPeriod"] = o.ZoneSigningKeyOverlapPeriod
	}
	if !IsNil(o.ZoneSigningKeyRolloverMethod) {
		toSerialize["zoneSigningKeyRolloverMethod"] = o.ZoneSigningKeyRolloverMethod
	}
	if !IsNil(o.ZoneSigningKeySigningPeriod) {
		toSerialize["zoneSigningKeySigningPeriod"] = o.ZoneSigningKeySigningPeriod
	}
	if !IsNil(o.ZoneSigningKeyProtectionType) {
		toSerialize["zoneSigningKeyProtectionType"] = o.ZoneSigningKeyProtectionType
	}
	if !IsNil(o.KeySigningKeyAlgorithm) {
		toSerialize["keySigningKeyAlgorithm"] = o.KeySigningKeyAlgorithm
	}
	if !IsNil(o.KeySigningKeyLength) {
		toSerialize["keySigningKeyLength"] = o.KeySigningKeyLength
	}
	if !IsNil(o.KeySigningKeyOverrideTtl) {
		toSerialize["keySigningKeyOverrideTtl"] = o.KeySigningKeyOverrideTtl
	}
	if !IsNil(o.KeySigningKeyValidityPeriod) {
		toSerialize["keySigningKeyValidityPeriod"] = o.KeySigningKeyValidityPeriod
	}
	if !IsNil(o.KeySigningKeyOverlapPeriod) {
		toSerialize["keySigningKeyOverlapPeriod"] = o.KeySigningKeyOverlapPeriod
	}
	if !IsNil(o.KeySigningKeyRolloverMethod) {
		toSerialize["keySigningKeyRolloverMethod"] = o.KeySigningKeyRolloverMethod
	}
	if !IsNil(o.KeySigningKeySigningPeriod) {
		toSerialize["keySigningKeySigningPeriod"] = o.KeySigningKeySigningPeriod
	}
	if !IsNil(o.KeySigningKeyProtectionType) {
		toSerialize["keySigningKeyProtectionType"] = o.KeySigningKeyProtectionType
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetSigningPolicies200ResponseDataInner struct {
	value *GetSigningPolicies200ResponseDataInner
	isSet bool
}

func (v NullableGetSigningPolicies200ResponseDataInner) Get() *GetSigningPolicies200ResponseDataInner {
	return v.value
}

func (v *NullableGetSigningPolicies200ResponseDataInner) Set(val *GetSigningPolicies200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSigningPolicies200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSigningPolicies200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSigningPolicies200ResponseDataInner(val *GetSigningPolicies200ResponseDataInner) *NullableGetSigningPolicies200ResponseDataInner {
	return &NullableGetSigningPolicies200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetSigningPolicies200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSigningPolicies200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


