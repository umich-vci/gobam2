/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the GetServers200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetServers200ResponseDataInner{}

// GetServers200ResponseDataInner struct for GetServers200ResponseDataInner
type GetServers200ResponseDataInner struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The resource type.
	Type *string `json:"type,omitempty"`
	// The name of the resource.
	Name *string `json:"name,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// User-defined fields set for the resource.
	UserDefinedFields *map[string]string `json:"userDefinedFields,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`
	// The profile of the server.
	Profile *string `json:"profile,omitempty"`
	// The current state of the server, indicating whether the server is enabled or disabled.
	State *string `json:"state,omitempty"`
	// The username used to authenticate with the server.
	Username *string `json:"username,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The password used to authenticate with the server.
	Password *string `json:"password,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	ServerGroup *InlinedServerGroup `json:"serverGroup,omitempty"`
	// Indicates whether the server is connected to Address Manager.
	Connected *bool `json:"connected,omitempty"`
	// Indicates whether monitoring service is enabled on the server.
	MonitoringEnabled *bool `json:"monitoringEnabled,omitempty"`
	Snmp *SnmpBean `json:"snmp,omitempty"`
	// The list of network interfaces of the server.
	Interfaces []HAServerAllOfInterfaces `json:"interfaces,omitempty"`
	Location *InlinedLocation `json:"location,omitempty"`
	// Displays statistics information collected from the monitoring service.
	Statistics map[string]map[string]interface{} `json:"statistics,omitempty"`
	// Indicates whether DHCP deployment validation settings configured at the configuration level are overridden at the server level.
	OverrideConfigurationLevelDhcpValidation *bool `json:"overrideConfigurationLevelDhcpValidation,omitempty"`
	// Indicates whether DNS deployment validation settings configured at the configuration level are overridden at the server level.
	OverrideConfigurationLevelDnsValidation *bool `json:"overrideConfigurationLevelDnsValidation,omitempty"`
	// Indicates whether the syntax of the dhcpd.conf file is validated prior to deployment from Address Manager.
	DhcpConfigurationValidationEnabled *bool `json:"dhcpConfigurationValidationEnabled,omitempty"`
	// Indicates whether the syntax of the named.conf file is validated prior to deployment from Address Manager.
	DnsConfigurationValidationEnabled *bool `json:"dnsConfigurationValidationEnabled,omitempty"`
	// Indicates whether the syntax of each DNS zone file is validated prior to deployment from Address Manager.
	DnsZoneValidationEnabled *bool `json:"dnsZoneValidationEnabled,omitempty"`
	// The method for which the syntax checks of the DNS zone file is checked.
	CheckIntegrityValidation *string `json:"checkIntegrityValidation,omitempty"`
	// Checks if MX records point to a CNAME record rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
	CheckMxCnameValidation *string `json:"checkMxCnameValidation,omitempty"`
	// Checks if MX records point to an IP address rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
	CheckMxValidation *string `json:"checkMxValidation,omitempty"`
	// Checks the names within the DNS zone files and determines how Address Manager handles conditions found by the check.
	CheckNamesValidation *string `json:"checkNamesValidation,omitempty"`
	// Checks if NS records point to an IP address rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
	CheckNsValidation *string `json:"checkNsValidation,omitempty"`
	// Checks if SRV records point to a CNAME record rather than an A or AAAA, and determines how Address Manager handles conditions found by the check.
	CheckSrvCnameValidation *string `json:"checkSrvCnameValidation,omitempty"`
	// Checks for wildcards in zone names that don't appear as the last segment of a zone name, and determines how Address Manager handles conditions found by the check.
	CheckWildcardValidation *string `json:"checkWildcardValidation,omitempty"`
	// The private IP address of the server.
	PrivateAddress *string `json:"privateAddress,omitempty"`
	// Indicates whether notifications are encrypted between Address Manager and the DNS/DHCP Server
	EncryptedNotificationsEnabled *bool `json:"encryptedNotificationsEnabled,omitempty"`
	// Specifies the management URL for an F5 LTM or GTM server.
	ManagementUrl *string `json:"managementUrl,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// Specifies the self URL for an F5 GTM server.
	SelfIpAddress *string `json:"selfIpAddress,omitempty"`
	// Indicates whether a backbone is enabled between nodes of a high-availability pair.
	HaBackboneEnabled *bool `json:"haBackboneEnabled,omitempty"`
	// Sets the ping address of the high-availability pair.
	HaPingAddress *string `json:"haPingAddress,omitempty"`
	DhcpServicePrincipal *InlinedKerberosServicePrincipal `json:"dhcpServicePrincipal,omitempty"`
	DnsServicePrincipal *InlinedKerberosServicePrincipal `json:"dnsServicePrincipal,omitempty"`
	// Indicates whether dedicated management is enabled on the server.
	DedicatedManagementEnabled *bool `json:"dedicatedManagementEnabled,omitempty"`
	HaRole *string `json:"haRole,omitempty"`
	HaPeerConnectionState *string `json:"haPeerConnectionState,omitempty"`
	HaDiskState *string `json:"haDiskState,omitempty"`
	// Indicates whether HSM is enabled on the server.
	HsmSupportEnabled *bool `json:"hsmSupportEnabled,omitempty"`
	// Indicates whether interface redundancy is enabled on the server.
	InterfaceRedundancyEnabled *bool `json:"interfaceRedundancyEnabled,omitempty"`
	InheritedFields []string `json:"_inheritedFields,omitempty"`
	ActiveServer *InlinedServer `json:"activeServer,omitempty"`
	PassiveServer *InlinedServer `json:"passiveServer,omitempty"`
	Links *ResourceLinks `json:"_links,omitempty"`
}

// NewGetServers200ResponseDataInner instantiates a new GetServers200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetServers200ResponseDataInner() *GetServers200ResponseDataInner {
	this := GetServers200ResponseDataInner{}
	return &this
}

// NewGetServers200ResponseDataInnerWithDefaults instantiates a new GetServers200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetServers200ResponseDataInnerWithDefaults() *GetServers200ResponseDataInner {
	this := GetServers200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetServers200ResponseDataInner) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetServers200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetServers200ResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetUserDefinedFields() map[string]string {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret map[string]string
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetUserDefinedFieldsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given map[string]string and assigns it to the UserDefinedFields field.
func (o *GetServers200ResponseDataInner) SetUserDefinedFields(v map[string]string) {
	o.UserDefinedFields = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetConfiguration() InlinedConfiguration {
	if o == nil || IsNil(o.Configuration) {
		var ret InlinedConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetConfigurationOk() (*InlinedConfiguration, bool) {
	if o == nil || IsNil(o.Configuration) {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given InlinedConfiguration and assigns it to the Configuration field.
func (o *GetServers200ResponseDataInner) SetConfiguration(v InlinedConfiguration) {
	o.Configuration = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *GetServers200ResponseDataInner) SetProfile(v string) {
	o.Profile = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GetServers200ResponseDataInner) SetState(v string) {
	o.State = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *GetServers200ResponseDataInner) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *GetServers200ResponseDataInner) SetPassword(v string) {
	o.Password = &v
}

// GetServerGroup returns the ServerGroup field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetServerGroup() InlinedServerGroup {
	if o == nil || IsNil(o.ServerGroup) {
		var ret InlinedServerGroup
		return ret
	}
	return *o.ServerGroup
}

// GetServerGroupOk returns a tuple with the ServerGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetServerGroupOk() (*InlinedServerGroup, bool) {
	if o == nil || IsNil(o.ServerGroup) {
		return nil, false
	}
	return o.ServerGroup, true
}

// HasServerGroup returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasServerGroup() bool {
	if o != nil && !IsNil(o.ServerGroup) {
		return true
	}

	return false
}

// SetServerGroup gets a reference to the given InlinedServerGroup and assigns it to the ServerGroup field.
func (o *GetServers200ResponseDataInner) SetServerGroup(v InlinedServerGroup) {
	o.ServerGroup = &v
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetConnected() bool {
	if o == nil || IsNil(o.Connected) {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetConnectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Connected) {
		return nil, false
	}
	return o.Connected, true
}

// HasConnected returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasConnected() bool {
	if o != nil && !IsNil(o.Connected) {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *GetServers200ResponseDataInner) SetConnected(v bool) {
	o.Connected = &v
}

// GetMonitoringEnabled returns the MonitoringEnabled field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetMonitoringEnabled() bool {
	if o == nil || IsNil(o.MonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.MonitoringEnabled
}

// GetMonitoringEnabledOk returns a tuple with the MonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MonitoringEnabled) {
		return nil, false
	}
	return o.MonitoringEnabled, true
}

// HasMonitoringEnabled returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasMonitoringEnabled() bool {
	if o != nil && !IsNil(o.MonitoringEnabled) {
		return true
	}

	return false
}

// SetMonitoringEnabled gets a reference to the given bool and assigns it to the MonitoringEnabled field.
func (o *GetServers200ResponseDataInner) SetMonitoringEnabled(v bool) {
	o.MonitoringEnabled = &v
}

// GetSnmp returns the Snmp field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetSnmp() SnmpBean {
	if o == nil || IsNil(o.Snmp) {
		var ret SnmpBean
		return ret
	}
	return *o.Snmp
}

// GetSnmpOk returns a tuple with the Snmp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetSnmpOk() (*SnmpBean, bool) {
	if o == nil || IsNil(o.Snmp) {
		return nil, false
	}
	return o.Snmp, true
}

// HasSnmp returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasSnmp() bool {
	if o != nil && !IsNil(o.Snmp) {
		return true
	}

	return false
}

// SetSnmp gets a reference to the given SnmpBean and assigns it to the Snmp field.
func (o *GetServers200ResponseDataInner) SetSnmp(v SnmpBean) {
	o.Snmp = &v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetInterfaces() []HAServerAllOfInterfaces {
	if o == nil || IsNil(o.Interfaces) {
		var ret []HAServerAllOfInterfaces
		return ret
	}
	return o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetInterfacesOk() ([]HAServerAllOfInterfaces, bool) {
	if o == nil || IsNil(o.Interfaces) {
		return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasInterfaces() bool {
	if o != nil && !IsNil(o.Interfaces) {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given []HAServerAllOfInterfaces and assigns it to the Interfaces field.
func (o *GetServers200ResponseDataInner) SetInterfaces(v []HAServerAllOfInterfaces) {
	o.Interfaces = v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetLocation() InlinedLocation {
	if o == nil || IsNil(o.Location) {
		var ret InlinedLocation
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetLocationOk() (*InlinedLocation, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given InlinedLocation and assigns it to the Location field.
func (o *GetServers200ResponseDataInner) SetLocation(v InlinedLocation) {
	o.Location = &v
}

// GetStatistics returns the Statistics field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetStatistics() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Statistics) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetStatisticsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Statistics) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Statistics, true
}

// HasStatistics returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasStatistics() bool {
	if o != nil && !IsNil(o.Statistics) {
		return true
	}

	return false
}

// SetStatistics gets a reference to the given map[string]map[string]interface{} and assigns it to the Statistics field.
func (o *GetServers200ResponseDataInner) SetStatistics(v map[string]map[string]interface{}) {
	o.Statistics = v
}

// GetOverrideConfigurationLevelDhcpValidation returns the OverrideConfigurationLevelDhcpValidation field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetOverrideConfigurationLevelDhcpValidation() bool {
	if o == nil || IsNil(o.OverrideConfigurationLevelDhcpValidation) {
		var ret bool
		return ret
	}
	return *o.OverrideConfigurationLevelDhcpValidation
}

// GetOverrideConfigurationLevelDhcpValidationOk returns a tuple with the OverrideConfigurationLevelDhcpValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetOverrideConfigurationLevelDhcpValidationOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideConfigurationLevelDhcpValidation) {
		return nil, false
	}
	return o.OverrideConfigurationLevelDhcpValidation, true
}

// HasOverrideConfigurationLevelDhcpValidation returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasOverrideConfigurationLevelDhcpValidation() bool {
	if o != nil && !IsNil(o.OverrideConfigurationLevelDhcpValidation) {
		return true
	}

	return false
}

// SetOverrideConfigurationLevelDhcpValidation gets a reference to the given bool and assigns it to the OverrideConfigurationLevelDhcpValidation field.
func (o *GetServers200ResponseDataInner) SetOverrideConfigurationLevelDhcpValidation(v bool) {
	o.OverrideConfigurationLevelDhcpValidation = &v
}

// GetOverrideConfigurationLevelDnsValidation returns the OverrideConfigurationLevelDnsValidation field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetOverrideConfigurationLevelDnsValidation() bool {
	if o == nil || IsNil(o.OverrideConfigurationLevelDnsValidation) {
		var ret bool
		return ret
	}
	return *o.OverrideConfigurationLevelDnsValidation
}

// GetOverrideConfigurationLevelDnsValidationOk returns a tuple with the OverrideConfigurationLevelDnsValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetOverrideConfigurationLevelDnsValidationOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideConfigurationLevelDnsValidation) {
		return nil, false
	}
	return o.OverrideConfigurationLevelDnsValidation, true
}

// HasOverrideConfigurationLevelDnsValidation returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasOverrideConfigurationLevelDnsValidation() bool {
	if o != nil && !IsNil(o.OverrideConfigurationLevelDnsValidation) {
		return true
	}

	return false
}

// SetOverrideConfigurationLevelDnsValidation gets a reference to the given bool and assigns it to the OverrideConfigurationLevelDnsValidation field.
func (o *GetServers200ResponseDataInner) SetOverrideConfigurationLevelDnsValidation(v bool) {
	o.OverrideConfigurationLevelDnsValidation = &v
}

// GetDhcpConfigurationValidationEnabled returns the DhcpConfigurationValidationEnabled field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetDhcpConfigurationValidationEnabled() bool {
	if o == nil || IsNil(o.DhcpConfigurationValidationEnabled) {
		var ret bool
		return ret
	}
	return *o.DhcpConfigurationValidationEnabled
}

// GetDhcpConfigurationValidationEnabledOk returns a tuple with the DhcpConfigurationValidationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetDhcpConfigurationValidationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DhcpConfigurationValidationEnabled) {
		return nil, false
	}
	return o.DhcpConfigurationValidationEnabled, true
}

// HasDhcpConfigurationValidationEnabled returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasDhcpConfigurationValidationEnabled() bool {
	if o != nil && !IsNil(o.DhcpConfigurationValidationEnabled) {
		return true
	}

	return false
}

// SetDhcpConfigurationValidationEnabled gets a reference to the given bool and assigns it to the DhcpConfigurationValidationEnabled field.
func (o *GetServers200ResponseDataInner) SetDhcpConfigurationValidationEnabled(v bool) {
	o.DhcpConfigurationValidationEnabled = &v
}

// GetDnsConfigurationValidationEnabled returns the DnsConfigurationValidationEnabled field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetDnsConfigurationValidationEnabled() bool {
	if o == nil || IsNil(o.DnsConfigurationValidationEnabled) {
		var ret bool
		return ret
	}
	return *o.DnsConfigurationValidationEnabled
}

// GetDnsConfigurationValidationEnabledOk returns a tuple with the DnsConfigurationValidationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetDnsConfigurationValidationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DnsConfigurationValidationEnabled) {
		return nil, false
	}
	return o.DnsConfigurationValidationEnabled, true
}

// HasDnsConfigurationValidationEnabled returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasDnsConfigurationValidationEnabled() bool {
	if o != nil && !IsNil(o.DnsConfigurationValidationEnabled) {
		return true
	}

	return false
}

// SetDnsConfigurationValidationEnabled gets a reference to the given bool and assigns it to the DnsConfigurationValidationEnabled field.
func (o *GetServers200ResponseDataInner) SetDnsConfigurationValidationEnabled(v bool) {
	o.DnsConfigurationValidationEnabled = &v
}

// GetDnsZoneValidationEnabled returns the DnsZoneValidationEnabled field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetDnsZoneValidationEnabled() bool {
	if o == nil || IsNil(o.DnsZoneValidationEnabled) {
		var ret bool
		return ret
	}
	return *o.DnsZoneValidationEnabled
}

// GetDnsZoneValidationEnabledOk returns a tuple with the DnsZoneValidationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetDnsZoneValidationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DnsZoneValidationEnabled) {
		return nil, false
	}
	return o.DnsZoneValidationEnabled, true
}

// HasDnsZoneValidationEnabled returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasDnsZoneValidationEnabled() bool {
	if o != nil && !IsNil(o.DnsZoneValidationEnabled) {
		return true
	}

	return false
}

// SetDnsZoneValidationEnabled gets a reference to the given bool and assigns it to the DnsZoneValidationEnabled field.
func (o *GetServers200ResponseDataInner) SetDnsZoneValidationEnabled(v bool) {
	o.DnsZoneValidationEnabled = &v
}

// GetCheckIntegrityValidation returns the CheckIntegrityValidation field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetCheckIntegrityValidation() string {
	if o == nil || IsNil(o.CheckIntegrityValidation) {
		var ret string
		return ret
	}
	return *o.CheckIntegrityValidation
}

// GetCheckIntegrityValidationOk returns a tuple with the CheckIntegrityValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetCheckIntegrityValidationOk() (*string, bool) {
	if o == nil || IsNil(o.CheckIntegrityValidation) {
		return nil, false
	}
	return o.CheckIntegrityValidation, true
}

// HasCheckIntegrityValidation returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasCheckIntegrityValidation() bool {
	if o != nil && !IsNil(o.CheckIntegrityValidation) {
		return true
	}

	return false
}

// SetCheckIntegrityValidation gets a reference to the given string and assigns it to the CheckIntegrityValidation field.
func (o *GetServers200ResponseDataInner) SetCheckIntegrityValidation(v string) {
	o.CheckIntegrityValidation = &v
}

// GetCheckMxCnameValidation returns the CheckMxCnameValidation field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetCheckMxCnameValidation() string {
	if o == nil || IsNil(o.CheckMxCnameValidation) {
		var ret string
		return ret
	}
	return *o.CheckMxCnameValidation
}

// GetCheckMxCnameValidationOk returns a tuple with the CheckMxCnameValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetCheckMxCnameValidationOk() (*string, bool) {
	if o == nil || IsNil(o.CheckMxCnameValidation) {
		return nil, false
	}
	return o.CheckMxCnameValidation, true
}

// HasCheckMxCnameValidation returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasCheckMxCnameValidation() bool {
	if o != nil && !IsNil(o.CheckMxCnameValidation) {
		return true
	}

	return false
}

// SetCheckMxCnameValidation gets a reference to the given string and assigns it to the CheckMxCnameValidation field.
func (o *GetServers200ResponseDataInner) SetCheckMxCnameValidation(v string) {
	o.CheckMxCnameValidation = &v
}

// GetCheckMxValidation returns the CheckMxValidation field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetCheckMxValidation() string {
	if o == nil || IsNil(o.CheckMxValidation) {
		var ret string
		return ret
	}
	return *o.CheckMxValidation
}

// GetCheckMxValidationOk returns a tuple with the CheckMxValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetCheckMxValidationOk() (*string, bool) {
	if o == nil || IsNil(o.CheckMxValidation) {
		return nil, false
	}
	return o.CheckMxValidation, true
}

// HasCheckMxValidation returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasCheckMxValidation() bool {
	if o != nil && !IsNil(o.CheckMxValidation) {
		return true
	}

	return false
}

// SetCheckMxValidation gets a reference to the given string and assigns it to the CheckMxValidation field.
func (o *GetServers200ResponseDataInner) SetCheckMxValidation(v string) {
	o.CheckMxValidation = &v
}

// GetCheckNamesValidation returns the CheckNamesValidation field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetCheckNamesValidation() string {
	if o == nil || IsNil(o.CheckNamesValidation) {
		var ret string
		return ret
	}
	return *o.CheckNamesValidation
}

// GetCheckNamesValidationOk returns a tuple with the CheckNamesValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetCheckNamesValidationOk() (*string, bool) {
	if o == nil || IsNil(o.CheckNamesValidation) {
		return nil, false
	}
	return o.CheckNamesValidation, true
}

// HasCheckNamesValidation returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasCheckNamesValidation() bool {
	if o != nil && !IsNil(o.CheckNamesValidation) {
		return true
	}

	return false
}

// SetCheckNamesValidation gets a reference to the given string and assigns it to the CheckNamesValidation field.
func (o *GetServers200ResponseDataInner) SetCheckNamesValidation(v string) {
	o.CheckNamesValidation = &v
}

// GetCheckNsValidation returns the CheckNsValidation field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetCheckNsValidation() string {
	if o == nil || IsNil(o.CheckNsValidation) {
		var ret string
		return ret
	}
	return *o.CheckNsValidation
}

// GetCheckNsValidationOk returns a tuple with the CheckNsValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetCheckNsValidationOk() (*string, bool) {
	if o == nil || IsNil(o.CheckNsValidation) {
		return nil, false
	}
	return o.CheckNsValidation, true
}

// HasCheckNsValidation returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasCheckNsValidation() bool {
	if o != nil && !IsNil(o.CheckNsValidation) {
		return true
	}

	return false
}

// SetCheckNsValidation gets a reference to the given string and assigns it to the CheckNsValidation field.
func (o *GetServers200ResponseDataInner) SetCheckNsValidation(v string) {
	o.CheckNsValidation = &v
}

// GetCheckSrvCnameValidation returns the CheckSrvCnameValidation field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetCheckSrvCnameValidation() string {
	if o == nil || IsNil(o.CheckSrvCnameValidation) {
		var ret string
		return ret
	}
	return *o.CheckSrvCnameValidation
}

// GetCheckSrvCnameValidationOk returns a tuple with the CheckSrvCnameValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetCheckSrvCnameValidationOk() (*string, bool) {
	if o == nil || IsNil(o.CheckSrvCnameValidation) {
		return nil, false
	}
	return o.CheckSrvCnameValidation, true
}

// HasCheckSrvCnameValidation returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasCheckSrvCnameValidation() bool {
	if o != nil && !IsNil(o.CheckSrvCnameValidation) {
		return true
	}

	return false
}

// SetCheckSrvCnameValidation gets a reference to the given string and assigns it to the CheckSrvCnameValidation field.
func (o *GetServers200ResponseDataInner) SetCheckSrvCnameValidation(v string) {
	o.CheckSrvCnameValidation = &v
}

// GetCheckWildcardValidation returns the CheckWildcardValidation field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetCheckWildcardValidation() string {
	if o == nil || IsNil(o.CheckWildcardValidation) {
		var ret string
		return ret
	}
	return *o.CheckWildcardValidation
}

// GetCheckWildcardValidationOk returns a tuple with the CheckWildcardValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetCheckWildcardValidationOk() (*string, bool) {
	if o == nil || IsNil(o.CheckWildcardValidation) {
		return nil, false
	}
	return o.CheckWildcardValidation, true
}

// HasCheckWildcardValidation returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasCheckWildcardValidation() bool {
	if o != nil && !IsNil(o.CheckWildcardValidation) {
		return true
	}

	return false
}

// SetCheckWildcardValidation gets a reference to the given string and assigns it to the CheckWildcardValidation field.
func (o *GetServers200ResponseDataInner) SetCheckWildcardValidation(v string) {
	o.CheckWildcardValidation = &v
}

// GetPrivateAddress returns the PrivateAddress field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetPrivateAddress() string {
	if o == nil || IsNil(o.PrivateAddress) {
		var ret string
		return ret
	}
	return *o.PrivateAddress
}

// GetPrivateAddressOk returns a tuple with the PrivateAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetPrivateAddressOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateAddress) {
		return nil, false
	}
	return o.PrivateAddress, true
}

// HasPrivateAddress returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasPrivateAddress() bool {
	if o != nil && !IsNil(o.PrivateAddress) {
		return true
	}

	return false
}

// SetPrivateAddress gets a reference to the given string and assigns it to the PrivateAddress field.
func (o *GetServers200ResponseDataInner) SetPrivateAddress(v string) {
	o.PrivateAddress = &v
}

// GetEncryptedNotificationsEnabled returns the EncryptedNotificationsEnabled field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetEncryptedNotificationsEnabled() bool {
	if o == nil || IsNil(o.EncryptedNotificationsEnabled) {
		var ret bool
		return ret
	}
	return *o.EncryptedNotificationsEnabled
}

// GetEncryptedNotificationsEnabledOk returns a tuple with the EncryptedNotificationsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetEncryptedNotificationsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.EncryptedNotificationsEnabled) {
		return nil, false
	}
	return o.EncryptedNotificationsEnabled, true
}

// HasEncryptedNotificationsEnabled returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasEncryptedNotificationsEnabled() bool {
	if o != nil && !IsNil(o.EncryptedNotificationsEnabled) {
		return true
	}

	return false
}

// SetEncryptedNotificationsEnabled gets a reference to the given bool and assigns it to the EncryptedNotificationsEnabled field.
func (o *GetServers200ResponseDataInner) SetEncryptedNotificationsEnabled(v bool) {
	o.EncryptedNotificationsEnabled = &v
}

// GetManagementUrl returns the ManagementUrl field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetManagementUrl() string {
	if o == nil || IsNil(o.ManagementUrl) {
		var ret string
		return ret
	}
	return *o.ManagementUrl
}

// GetManagementUrlOk returns a tuple with the ManagementUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetManagementUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementUrl) {
		return nil, false
	}
	return o.ManagementUrl, true
}

// HasManagementUrl returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasManagementUrl() bool {
	if o != nil && !IsNil(o.ManagementUrl) {
		return true
	}

	return false
}

// SetManagementUrl gets a reference to the given string and assigns it to the ManagementUrl field.
func (o *GetServers200ResponseDataInner) SetManagementUrl(v string) {
	o.ManagementUrl = &v
}

// GetSelfIpAddress returns the SelfIpAddress field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetSelfIpAddress() string {
	if o == nil || IsNil(o.SelfIpAddress) {
		var ret string
		return ret
	}
	return *o.SelfIpAddress
}

// GetSelfIpAddressOk returns a tuple with the SelfIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetSelfIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SelfIpAddress) {
		return nil, false
	}
	return o.SelfIpAddress, true
}

// HasSelfIpAddress returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasSelfIpAddress() bool {
	if o != nil && !IsNil(o.SelfIpAddress) {
		return true
	}

	return false
}

// SetSelfIpAddress gets a reference to the given string and assigns it to the SelfIpAddress field.
func (o *GetServers200ResponseDataInner) SetSelfIpAddress(v string) {
	o.SelfIpAddress = &v
}

// GetHaBackboneEnabled returns the HaBackboneEnabled field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetHaBackboneEnabled() bool {
	if o == nil || IsNil(o.HaBackboneEnabled) {
		var ret bool
		return ret
	}
	return *o.HaBackboneEnabled
}

// GetHaBackboneEnabledOk returns a tuple with the HaBackboneEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetHaBackboneEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.HaBackboneEnabled) {
		return nil, false
	}
	return o.HaBackboneEnabled, true
}

// HasHaBackboneEnabled returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasHaBackboneEnabled() bool {
	if o != nil && !IsNil(o.HaBackboneEnabled) {
		return true
	}

	return false
}

// SetHaBackboneEnabled gets a reference to the given bool and assigns it to the HaBackboneEnabled field.
func (o *GetServers200ResponseDataInner) SetHaBackboneEnabled(v bool) {
	o.HaBackboneEnabled = &v
}

// GetHaPingAddress returns the HaPingAddress field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetHaPingAddress() string {
	if o == nil || IsNil(o.HaPingAddress) {
		var ret string
		return ret
	}
	return *o.HaPingAddress
}

// GetHaPingAddressOk returns a tuple with the HaPingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetHaPingAddressOk() (*string, bool) {
	if o == nil || IsNil(o.HaPingAddress) {
		return nil, false
	}
	return o.HaPingAddress, true
}

// HasHaPingAddress returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasHaPingAddress() bool {
	if o != nil && !IsNil(o.HaPingAddress) {
		return true
	}

	return false
}

// SetHaPingAddress gets a reference to the given string and assigns it to the HaPingAddress field.
func (o *GetServers200ResponseDataInner) SetHaPingAddress(v string) {
	o.HaPingAddress = &v
}

// GetDhcpServicePrincipal returns the DhcpServicePrincipal field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetDhcpServicePrincipal() InlinedKerberosServicePrincipal {
	if o == nil || IsNil(o.DhcpServicePrincipal) {
		var ret InlinedKerberosServicePrincipal
		return ret
	}
	return *o.DhcpServicePrincipal
}

// GetDhcpServicePrincipalOk returns a tuple with the DhcpServicePrincipal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetDhcpServicePrincipalOk() (*InlinedKerberosServicePrincipal, bool) {
	if o == nil || IsNil(o.DhcpServicePrincipal) {
		return nil, false
	}
	return o.DhcpServicePrincipal, true
}

// HasDhcpServicePrincipal returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasDhcpServicePrincipal() bool {
	if o != nil && !IsNil(o.DhcpServicePrincipal) {
		return true
	}

	return false
}

// SetDhcpServicePrincipal gets a reference to the given InlinedKerberosServicePrincipal and assigns it to the DhcpServicePrincipal field.
func (o *GetServers200ResponseDataInner) SetDhcpServicePrincipal(v InlinedKerberosServicePrincipal) {
	o.DhcpServicePrincipal = &v
}

// GetDnsServicePrincipal returns the DnsServicePrincipal field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetDnsServicePrincipal() InlinedKerberosServicePrincipal {
	if o == nil || IsNil(o.DnsServicePrincipal) {
		var ret InlinedKerberosServicePrincipal
		return ret
	}
	return *o.DnsServicePrincipal
}

// GetDnsServicePrincipalOk returns a tuple with the DnsServicePrincipal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetDnsServicePrincipalOk() (*InlinedKerberosServicePrincipal, bool) {
	if o == nil || IsNil(o.DnsServicePrincipal) {
		return nil, false
	}
	return o.DnsServicePrincipal, true
}

// HasDnsServicePrincipal returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasDnsServicePrincipal() bool {
	if o != nil && !IsNil(o.DnsServicePrincipal) {
		return true
	}

	return false
}

// SetDnsServicePrincipal gets a reference to the given InlinedKerberosServicePrincipal and assigns it to the DnsServicePrincipal field.
func (o *GetServers200ResponseDataInner) SetDnsServicePrincipal(v InlinedKerberosServicePrincipal) {
	o.DnsServicePrincipal = &v
}

// GetDedicatedManagementEnabled returns the DedicatedManagementEnabled field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetDedicatedManagementEnabled() bool {
	if o == nil || IsNil(o.DedicatedManagementEnabled) {
		var ret bool
		return ret
	}
	return *o.DedicatedManagementEnabled
}

// GetDedicatedManagementEnabledOk returns a tuple with the DedicatedManagementEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetDedicatedManagementEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DedicatedManagementEnabled) {
		return nil, false
	}
	return o.DedicatedManagementEnabled, true
}

// HasDedicatedManagementEnabled returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasDedicatedManagementEnabled() bool {
	if o != nil && !IsNil(o.DedicatedManagementEnabled) {
		return true
	}

	return false
}

// SetDedicatedManagementEnabled gets a reference to the given bool and assigns it to the DedicatedManagementEnabled field.
func (o *GetServers200ResponseDataInner) SetDedicatedManagementEnabled(v bool) {
	o.DedicatedManagementEnabled = &v
}

// GetHaRole returns the HaRole field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetHaRole() string {
	if o == nil || IsNil(o.HaRole) {
		var ret string
		return ret
	}
	return *o.HaRole
}

// GetHaRoleOk returns a tuple with the HaRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetHaRoleOk() (*string, bool) {
	if o == nil || IsNil(o.HaRole) {
		return nil, false
	}
	return o.HaRole, true
}

// HasHaRole returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasHaRole() bool {
	if o != nil && !IsNil(o.HaRole) {
		return true
	}

	return false
}

// SetHaRole gets a reference to the given string and assigns it to the HaRole field.
func (o *GetServers200ResponseDataInner) SetHaRole(v string) {
	o.HaRole = &v
}

// GetHaPeerConnectionState returns the HaPeerConnectionState field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetHaPeerConnectionState() string {
	if o == nil || IsNil(o.HaPeerConnectionState) {
		var ret string
		return ret
	}
	return *o.HaPeerConnectionState
}

// GetHaPeerConnectionStateOk returns a tuple with the HaPeerConnectionState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetHaPeerConnectionStateOk() (*string, bool) {
	if o == nil || IsNil(o.HaPeerConnectionState) {
		return nil, false
	}
	return o.HaPeerConnectionState, true
}

// HasHaPeerConnectionState returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasHaPeerConnectionState() bool {
	if o != nil && !IsNil(o.HaPeerConnectionState) {
		return true
	}

	return false
}

// SetHaPeerConnectionState gets a reference to the given string and assigns it to the HaPeerConnectionState field.
func (o *GetServers200ResponseDataInner) SetHaPeerConnectionState(v string) {
	o.HaPeerConnectionState = &v
}

// GetHaDiskState returns the HaDiskState field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetHaDiskState() string {
	if o == nil || IsNil(o.HaDiskState) {
		var ret string
		return ret
	}
	return *o.HaDiskState
}

// GetHaDiskStateOk returns a tuple with the HaDiskState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetHaDiskStateOk() (*string, bool) {
	if o == nil || IsNil(o.HaDiskState) {
		return nil, false
	}
	return o.HaDiskState, true
}

// HasHaDiskState returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasHaDiskState() bool {
	if o != nil && !IsNil(o.HaDiskState) {
		return true
	}

	return false
}

// SetHaDiskState gets a reference to the given string and assigns it to the HaDiskState field.
func (o *GetServers200ResponseDataInner) SetHaDiskState(v string) {
	o.HaDiskState = &v
}

// GetHsmSupportEnabled returns the HsmSupportEnabled field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetHsmSupportEnabled() bool {
	if o == nil || IsNil(o.HsmSupportEnabled) {
		var ret bool
		return ret
	}
	return *o.HsmSupportEnabled
}

// GetHsmSupportEnabledOk returns a tuple with the HsmSupportEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetHsmSupportEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.HsmSupportEnabled) {
		return nil, false
	}
	return o.HsmSupportEnabled, true
}

// HasHsmSupportEnabled returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasHsmSupportEnabled() bool {
	if o != nil && !IsNil(o.HsmSupportEnabled) {
		return true
	}

	return false
}

// SetHsmSupportEnabled gets a reference to the given bool and assigns it to the HsmSupportEnabled field.
func (o *GetServers200ResponseDataInner) SetHsmSupportEnabled(v bool) {
	o.HsmSupportEnabled = &v
}

// GetInterfaceRedundancyEnabled returns the InterfaceRedundancyEnabled field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetInterfaceRedundancyEnabled() bool {
	if o == nil || IsNil(o.InterfaceRedundancyEnabled) {
		var ret bool
		return ret
	}
	return *o.InterfaceRedundancyEnabled
}

// GetInterfaceRedundancyEnabledOk returns a tuple with the InterfaceRedundancyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetInterfaceRedundancyEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.InterfaceRedundancyEnabled) {
		return nil, false
	}
	return o.InterfaceRedundancyEnabled, true
}

// HasInterfaceRedundancyEnabled returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasInterfaceRedundancyEnabled() bool {
	if o != nil && !IsNil(o.InterfaceRedundancyEnabled) {
		return true
	}

	return false
}

// SetInterfaceRedundancyEnabled gets a reference to the given bool and assigns it to the InterfaceRedundancyEnabled field.
func (o *GetServers200ResponseDataInner) SetInterfaceRedundancyEnabled(v bool) {
	o.InterfaceRedundancyEnabled = &v
}

// GetInheritedFields returns the InheritedFields field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetInheritedFields() []string {
	if o == nil || IsNil(o.InheritedFields) {
		var ret []string
		return ret
	}
	return o.InheritedFields
}

// GetInheritedFieldsOk returns a tuple with the InheritedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetInheritedFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.InheritedFields) {
		return nil, false
	}
	return o.InheritedFields, true
}

// HasInheritedFields returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasInheritedFields() bool {
	if o != nil && !IsNil(o.InheritedFields) {
		return true
	}

	return false
}

// SetInheritedFields gets a reference to the given []string and assigns it to the InheritedFields field.
func (o *GetServers200ResponseDataInner) SetInheritedFields(v []string) {
	o.InheritedFields = v
}

// GetActiveServer returns the ActiveServer field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetActiveServer() InlinedServer {
	if o == nil || IsNil(o.ActiveServer) {
		var ret InlinedServer
		return ret
	}
	return *o.ActiveServer
}

// GetActiveServerOk returns a tuple with the ActiveServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetActiveServerOk() (*InlinedServer, bool) {
	if o == nil || IsNil(o.ActiveServer) {
		return nil, false
	}
	return o.ActiveServer, true
}

// HasActiveServer returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasActiveServer() bool {
	if o != nil && !IsNil(o.ActiveServer) {
		return true
	}

	return false
}

// SetActiveServer gets a reference to the given InlinedServer and assigns it to the ActiveServer field.
func (o *GetServers200ResponseDataInner) SetActiveServer(v InlinedServer) {
	o.ActiveServer = &v
}

// GetPassiveServer returns the PassiveServer field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetPassiveServer() InlinedServer {
	if o == nil || IsNil(o.PassiveServer) {
		var ret InlinedServer
		return ret
	}
	return *o.PassiveServer
}

// GetPassiveServerOk returns a tuple with the PassiveServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetPassiveServerOk() (*InlinedServer, bool) {
	if o == nil || IsNil(o.PassiveServer) {
		return nil, false
	}
	return o.PassiveServer, true
}

// HasPassiveServer returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasPassiveServer() bool {
	if o != nil && !IsNil(o.PassiveServer) {
		return true
	}

	return false
}

// SetPassiveServer gets a reference to the given InlinedServer and assigns it to the PassiveServer field.
func (o *GetServers200ResponseDataInner) SetPassiveServer(v InlinedServer) {
	o.PassiveServer = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetServers200ResponseDataInner) GetLinks() ResourceLinks {
	if o == nil || IsNil(o.Links) {
		var ret ResourceLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServers200ResponseDataInner) GetLinksOk() (*ResourceLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetServers200ResponseDataInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ResourceLinks and assigns it to the Links field.
func (o *GetServers200ResponseDataInner) SetLinks(v ResourceLinks) {
	o.Links = &v
}

func (o GetServers200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetServers200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.ServerGroup) {
		toSerialize["serverGroup"] = o.ServerGroup
	}
	if !IsNil(o.Connected) {
		toSerialize["connected"] = o.Connected
	}
	if !IsNil(o.MonitoringEnabled) {
		toSerialize["monitoringEnabled"] = o.MonitoringEnabled
	}
	if !IsNil(o.Snmp) {
		toSerialize["snmp"] = o.Snmp
	}
	if !IsNil(o.Interfaces) {
		toSerialize["interfaces"] = o.Interfaces
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Statistics) {
		toSerialize["statistics"] = o.Statistics
	}
	if !IsNil(o.OverrideConfigurationLevelDhcpValidation) {
		toSerialize["overrideConfigurationLevelDhcpValidation"] = o.OverrideConfigurationLevelDhcpValidation
	}
	if !IsNil(o.OverrideConfigurationLevelDnsValidation) {
		toSerialize["overrideConfigurationLevelDnsValidation"] = o.OverrideConfigurationLevelDnsValidation
	}
	if !IsNil(o.DhcpConfigurationValidationEnabled) {
		toSerialize["dhcpConfigurationValidationEnabled"] = o.DhcpConfigurationValidationEnabled
	}
	if !IsNil(o.DnsConfigurationValidationEnabled) {
		toSerialize["dnsConfigurationValidationEnabled"] = o.DnsConfigurationValidationEnabled
	}
	if !IsNil(o.DnsZoneValidationEnabled) {
		toSerialize["dnsZoneValidationEnabled"] = o.DnsZoneValidationEnabled
	}
	if !IsNil(o.CheckIntegrityValidation) {
		toSerialize["checkIntegrityValidation"] = o.CheckIntegrityValidation
	}
	if !IsNil(o.CheckMxCnameValidation) {
		toSerialize["checkMxCnameValidation"] = o.CheckMxCnameValidation
	}
	if !IsNil(o.CheckMxValidation) {
		toSerialize["checkMxValidation"] = o.CheckMxValidation
	}
	if !IsNil(o.CheckNamesValidation) {
		toSerialize["checkNamesValidation"] = o.CheckNamesValidation
	}
	if !IsNil(o.CheckNsValidation) {
		toSerialize["checkNsValidation"] = o.CheckNsValidation
	}
	if !IsNil(o.CheckSrvCnameValidation) {
		toSerialize["checkSrvCnameValidation"] = o.CheckSrvCnameValidation
	}
	if !IsNil(o.CheckWildcardValidation) {
		toSerialize["checkWildcardValidation"] = o.CheckWildcardValidation
	}
	if !IsNil(o.PrivateAddress) {
		toSerialize["privateAddress"] = o.PrivateAddress
	}
	if !IsNil(o.EncryptedNotificationsEnabled) {
		toSerialize["encryptedNotificationsEnabled"] = o.EncryptedNotificationsEnabled
	}
	if !IsNil(o.ManagementUrl) {
		toSerialize["managementUrl"] = o.ManagementUrl
	}
	if !IsNil(o.SelfIpAddress) {
		toSerialize["selfIpAddress"] = o.SelfIpAddress
	}
	if !IsNil(o.HaBackboneEnabled) {
		toSerialize["haBackboneEnabled"] = o.HaBackboneEnabled
	}
	if !IsNil(o.HaPingAddress) {
		toSerialize["haPingAddress"] = o.HaPingAddress
	}
	if !IsNil(o.DhcpServicePrincipal) {
		toSerialize["dhcpServicePrincipal"] = o.DhcpServicePrincipal
	}
	if !IsNil(o.DnsServicePrincipal) {
		toSerialize["dnsServicePrincipal"] = o.DnsServicePrincipal
	}
	if !IsNil(o.DedicatedManagementEnabled) {
		toSerialize["dedicatedManagementEnabled"] = o.DedicatedManagementEnabled
	}
	if !IsNil(o.HaRole) {
		toSerialize["haRole"] = o.HaRole
	}
	if !IsNil(o.HaPeerConnectionState) {
		toSerialize["haPeerConnectionState"] = o.HaPeerConnectionState
	}
	if !IsNil(o.HaDiskState) {
		toSerialize["haDiskState"] = o.HaDiskState
	}
	if !IsNil(o.HsmSupportEnabled) {
		toSerialize["hsmSupportEnabled"] = o.HsmSupportEnabled
	}
	if !IsNil(o.InterfaceRedundancyEnabled) {
		toSerialize["interfaceRedundancyEnabled"] = o.InterfaceRedundancyEnabled
	}
	if !IsNil(o.InheritedFields) {
		toSerialize["_inheritedFields"] = o.InheritedFields
	}
	if !IsNil(o.ActiveServer) {
		toSerialize["activeServer"] = o.ActiveServer
	}
	if !IsNil(o.PassiveServer) {
		toSerialize["passiveServer"] = o.PassiveServer
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetServers200ResponseDataInner struct {
	value *GetServers200ResponseDataInner
	isSet bool
}

func (v NullableGetServers200ResponseDataInner) Get() *GetServers200ResponseDataInner {
	return v.value
}

func (v *NullableGetServers200ResponseDataInner) Set(val *GetServers200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServers200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServers200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServers200ResponseDataInner(val *GetServers200ResponseDataInner) *NullableGetServers200ResponseDataInner {
	return &NullableGetServers200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetServers200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServers200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


