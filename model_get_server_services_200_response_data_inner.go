/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the GetServerServices200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetServerServices200ResponseDataInner{}

// GetServerServices200ResponseDataInner struct for GetServerServices200ResponseDataInner
type GetServerServices200ResponseDataInner struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The resource type.
	Type *string `json:"type,omitempty"`
	ServerVersion *string `json:"serverVersion,omitempty"`
	// Indicates whether the SSH service is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Indicates whether the syslog redirection service configuration has been manually overridden.
	ManualOverrideEnabled *bool `json:"manualOverrideEnabled,omitempty"`
	// The Anycast IP addresses.
	Addresses []string `json:"addresses,omitempty"`
	Routing *RoutingProtocolBean `json:"routing,omitempty"`
	// The maximum number of events to be stored in the memory buffer
	MaximumBufferedEvents *int64 `json:"maximumBufferedEvents,omitempty"`
	Destination *SinkBean `json:"destination,omitempty"`
	Dhcpv4Enabled *bool `json:"dhcpv4Enabled,omitempty"`
	Dhcpv6Enabled *bool `json:"dhcpv6Enabled,omitempty"`
	Filters []DnsActivityFilterBean `json:"filters,omitempty"`
	// The list of servers to redirect syslog messages to.
	Servers []SyslogRedirectionServerBean `json:"servers,omitempty"`
	// The SNMP polling interval, in ISO 8601 duration format, that determines the frequency that SNMP values are refreshed on the system.
	PollingInterval *string `json:"pollingInterval,omitempty"`
	// Indicates whether the server responds to the ping command.
	PingAllowed *bool `json:"pingAllowed,omitempty"`
	// The status of the Gateway service running on the DNS/DHCP Server.
	State *string `json:"state,omitempty"`
	Container *GatewayContainerBean `json:"container,omitempty"`
	// The docker username used to pull the Gateway image from the container repository.
	RepositoryUsername *string `json:"repositoryUsername,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The docker password used to pull the image from a private repository.
	RepositoryPassword *string `json:"repositoryPassword,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// Indicates whether the Gateway image is removed upon disabling the Gateway service.
	DeleteImageOnDisable *bool `json:"deleteImageOnDisable,omitempty"`
	// Indicates whether the local volumes and the mounted data and log directories are removed upon disabling the Gateway service.
	DeleteMountPointsOnDisable *bool `json:"deleteMountPointsOnDisable,omitempty"`
	DedicatedManagementEnabled *bool `json:"dedicatedManagementEnabled,omitempty"`
	Interfaces []InterfaceBean `json:"interfaces,omitempty"`
	Routes []RouteBean `json:"routes,omitempty"`
	ClientId *string `json:"clientId,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	Key *string `json:"key,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The system name to be reported through SNMP.
	ContactName *string `json:"contactName,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The email address for the system contact to be reported through SNMP.
	ContactEmail *string `json:"contactEmail,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The description of the system's location to be reported through SNMP.
	Location *string `json:"location,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The description of the system to be reported through SNMP.
	Description *string `json:"description,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The logging level for SNMP events.
	LogLevel *string `json:"logLevel,omitempty"`
	Snmpv1 *Snmpv1Bean `json:"snmpv1,omitempty"`
	Snmpv2c *Snmpv2cBean `json:"snmpv2c,omitempty"`
	Snmpv3 *Snmpv3Bean `json:"snmpv3,omitempty"`
	TrapServers []SnmpTrapServerBean `json:"trapServers,omitempty"`
	TacacsPlusAuthentication *TacacsPlusAuthenticationBean `json:"tacacsPlusAuthentication,omitempty"`
	// Indicates whether the ISO 8601 date time format is used when logging timestamps.
	Iso8601TimestampsEnabled *bool `json:"iso8601TimestampsEnabled,omitempty"`
	Links *ResourceLinks `json:"_links,omitempty"`
}

// NewGetServerServices200ResponseDataInner instantiates a new GetServerServices200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetServerServices200ResponseDataInner() *GetServerServices200ResponseDataInner {
	this := GetServerServices200ResponseDataInner{}
	return &this
}

// NewGetServerServices200ResponseDataInnerWithDefaults instantiates a new GetServerServices200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetServerServices200ResponseDataInnerWithDefaults() *GetServerServices200ResponseDataInner {
	this := GetServerServices200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetServerServices200ResponseDataInner) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetServerServices200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetServerVersion returns the ServerVersion field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetServerVersion() string {
	if o == nil || IsNil(o.ServerVersion) {
		var ret string
		return ret
	}
	return *o.ServerVersion
}

// GetServerVersionOk returns a tuple with the ServerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetServerVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ServerVersion) {
		return nil, false
	}
	return o.ServerVersion, true
}

// HasServerVersion returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasServerVersion() bool {
	if o != nil && !IsNil(o.ServerVersion) {
		return true
	}

	return false
}

// SetServerVersion gets a reference to the given string and assigns it to the ServerVersion field.
func (o *GetServerServices200ResponseDataInner) SetServerVersion(v string) {
	o.ServerVersion = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetServerServices200ResponseDataInner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetManualOverrideEnabled returns the ManualOverrideEnabled field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetManualOverrideEnabled() bool {
	if o == nil || IsNil(o.ManualOverrideEnabled) {
		var ret bool
		return ret
	}
	return *o.ManualOverrideEnabled
}

// GetManualOverrideEnabledOk returns a tuple with the ManualOverrideEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetManualOverrideEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ManualOverrideEnabled) {
		return nil, false
	}
	return o.ManualOverrideEnabled, true
}

// HasManualOverrideEnabled returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasManualOverrideEnabled() bool {
	if o != nil && !IsNil(o.ManualOverrideEnabled) {
		return true
	}

	return false
}

// SetManualOverrideEnabled gets a reference to the given bool and assigns it to the ManualOverrideEnabled field.
func (o *GetServerServices200ResponseDataInner) SetManualOverrideEnabled(v bool) {
	o.ManualOverrideEnabled = &v
}

// GetAddresses returns the Addresses field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetAddresses() []string {
	if o == nil || IsNil(o.Addresses) {
		var ret []string
		return ret
	}
	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetAddressesOk() ([]string, bool) {
	if o == nil || IsNil(o.Addresses) {
		return nil, false
	}
	return o.Addresses, true
}

// HasAddresses returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasAddresses() bool {
	if o != nil && !IsNil(o.Addresses) {
		return true
	}

	return false
}

// SetAddresses gets a reference to the given []string and assigns it to the Addresses field.
func (o *GetServerServices200ResponseDataInner) SetAddresses(v []string) {
	o.Addresses = v
}

// GetRouting returns the Routing field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetRouting() RoutingProtocolBean {
	if o == nil || IsNil(o.Routing) {
		var ret RoutingProtocolBean
		return ret
	}
	return *o.Routing
}

// GetRoutingOk returns a tuple with the Routing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetRoutingOk() (*RoutingProtocolBean, bool) {
	if o == nil || IsNil(o.Routing) {
		return nil, false
	}
	return o.Routing, true
}

// HasRouting returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasRouting() bool {
	if o != nil && !IsNil(o.Routing) {
		return true
	}

	return false
}

// SetRouting gets a reference to the given RoutingProtocolBean and assigns it to the Routing field.
func (o *GetServerServices200ResponseDataInner) SetRouting(v RoutingProtocolBean) {
	o.Routing = &v
}

// GetMaximumBufferedEvents returns the MaximumBufferedEvents field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetMaximumBufferedEvents() int64 {
	if o == nil || IsNil(o.MaximumBufferedEvents) {
		var ret int64
		return ret
	}
	return *o.MaximumBufferedEvents
}

// GetMaximumBufferedEventsOk returns a tuple with the MaximumBufferedEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetMaximumBufferedEventsOk() (*int64, bool) {
	if o == nil || IsNil(o.MaximumBufferedEvents) {
		return nil, false
	}
	return o.MaximumBufferedEvents, true
}

// HasMaximumBufferedEvents returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasMaximumBufferedEvents() bool {
	if o != nil && !IsNil(o.MaximumBufferedEvents) {
		return true
	}

	return false
}

// SetMaximumBufferedEvents gets a reference to the given int64 and assigns it to the MaximumBufferedEvents field.
func (o *GetServerServices200ResponseDataInner) SetMaximumBufferedEvents(v int64) {
	o.MaximumBufferedEvents = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetDestination() SinkBean {
	if o == nil || IsNil(o.Destination) {
		var ret SinkBean
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetDestinationOk() (*SinkBean, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given SinkBean and assigns it to the Destination field.
func (o *GetServerServices200ResponseDataInner) SetDestination(v SinkBean) {
	o.Destination = &v
}

// GetDhcpv4Enabled returns the Dhcpv4Enabled field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetDhcpv4Enabled() bool {
	if o == nil || IsNil(o.Dhcpv4Enabled) {
		var ret bool
		return ret
	}
	return *o.Dhcpv4Enabled
}

// GetDhcpv4EnabledOk returns a tuple with the Dhcpv4Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetDhcpv4EnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Dhcpv4Enabled) {
		return nil, false
	}
	return o.Dhcpv4Enabled, true
}

// HasDhcpv4Enabled returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasDhcpv4Enabled() bool {
	if o != nil && !IsNil(o.Dhcpv4Enabled) {
		return true
	}

	return false
}

// SetDhcpv4Enabled gets a reference to the given bool and assigns it to the Dhcpv4Enabled field.
func (o *GetServerServices200ResponseDataInner) SetDhcpv4Enabled(v bool) {
	o.Dhcpv4Enabled = &v
}

// GetDhcpv6Enabled returns the Dhcpv6Enabled field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetDhcpv6Enabled() bool {
	if o == nil || IsNil(o.Dhcpv6Enabled) {
		var ret bool
		return ret
	}
	return *o.Dhcpv6Enabled
}

// GetDhcpv6EnabledOk returns a tuple with the Dhcpv6Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetDhcpv6EnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Dhcpv6Enabled) {
		return nil, false
	}
	return o.Dhcpv6Enabled, true
}

// HasDhcpv6Enabled returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasDhcpv6Enabled() bool {
	if o != nil && !IsNil(o.Dhcpv6Enabled) {
		return true
	}

	return false
}

// SetDhcpv6Enabled gets a reference to the given bool and assigns it to the Dhcpv6Enabled field.
func (o *GetServerServices200ResponseDataInner) SetDhcpv6Enabled(v bool) {
	o.Dhcpv6Enabled = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetFilters() []DnsActivityFilterBean {
	if o == nil || IsNil(o.Filters) {
		var ret []DnsActivityFilterBean
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetFiltersOk() ([]DnsActivityFilterBean, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []DnsActivityFilterBean and assigns it to the Filters field.
func (o *GetServerServices200ResponseDataInner) SetFilters(v []DnsActivityFilterBean) {
	o.Filters = v
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetServers() []SyslogRedirectionServerBean {
	if o == nil || IsNil(o.Servers) {
		var ret []SyslogRedirectionServerBean
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetServersOk() ([]SyslogRedirectionServerBean, bool) {
	if o == nil || IsNil(o.Servers) {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasServers() bool {
	if o != nil && !IsNil(o.Servers) {
		return true
	}

	return false
}

// SetServers gets a reference to the given []SyslogRedirectionServerBean and assigns it to the Servers field.
func (o *GetServerServices200ResponseDataInner) SetServers(v []SyslogRedirectionServerBean) {
	o.Servers = v
}

// GetPollingInterval returns the PollingInterval field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetPollingInterval() string {
	if o == nil || IsNil(o.PollingInterval) {
		var ret string
		return ret
	}
	return *o.PollingInterval
}

// GetPollingIntervalOk returns a tuple with the PollingInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetPollingIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.PollingInterval) {
		return nil, false
	}
	return o.PollingInterval, true
}

// HasPollingInterval returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasPollingInterval() bool {
	if o != nil && !IsNil(o.PollingInterval) {
		return true
	}

	return false
}

// SetPollingInterval gets a reference to the given string and assigns it to the PollingInterval field.
func (o *GetServerServices200ResponseDataInner) SetPollingInterval(v string) {
	o.PollingInterval = &v
}

// GetPingAllowed returns the PingAllowed field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetPingAllowed() bool {
	if o == nil || IsNil(o.PingAllowed) {
		var ret bool
		return ret
	}
	return *o.PingAllowed
}

// GetPingAllowedOk returns a tuple with the PingAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetPingAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.PingAllowed) {
		return nil, false
	}
	return o.PingAllowed, true
}

// HasPingAllowed returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasPingAllowed() bool {
	if o != nil && !IsNil(o.PingAllowed) {
		return true
	}

	return false
}

// SetPingAllowed gets a reference to the given bool and assigns it to the PingAllowed field.
func (o *GetServerServices200ResponseDataInner) SetPingAllowed(v bool) {
	o.PingAllowed = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GetServerServices200ResponseDataInner) SetState(v string) {
	o.State = &v
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetContainer() GatewayContainerBean {
	if o == nil || IsNil(o.Container) {
		var ret GatewayContainerBean
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetContainerOk() (*GatewayContainerBean, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given GatewayContainerBean and assigns it to the Container field.
func (o *GetServerServices200ResponseDataInner) SetContainer(v GatewayContainerBean) {
	o.Container = &v
}

// GetRepositoryUsername returns the RepositoryUsername field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetRepositoryUsername() string {
	if o == nil || IsNil(o.RepositoryUsername) {
		var ret string
		return ret
	}
	return *o.RepositoryUsername
}

// GetRepositoryUsernameOk returns a tuple with the RepositoryUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetRepositoryUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.RepositoryUsername) {
		return nil, false
	}
	return o.RepositoryUsername, true
}

// HasRepositoryUsername returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasRepositoryUsername() bool {
	if o != nil && !IsNil(o.RepositoryUsername) {
		return true
	}

	return false
}

// SetRepositoryUsername gets a reference to the given string and assigns it to the RepositoryUsername field.
func (o *GetServerServices200ResponseDataInner) SetRepositoryUsername(v string) {
	o.RepositoryUsername = &v
}

// GetRepositoryPassword returns the RepositoryPassword field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetRepositoryPassword() string {
	if o == nil || IsNil(o.RepositoryPassword) {
		var ret string
		return ret
	}
	return *o.RepositoryPassword
}

// GetRepositoryPasswordOk returns a tuple with the RepositoryPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetRepositoryPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.RepositoryPassword) {
		return nil, false
	}
	return o.RepositoryPassword, true
}

// HasRepositoryPassword returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasRepositoryPassword() bool {
	if o != nil && !IsNil(o.RepositoryPassword) {
		return true
	}

	return false
}

// SetRepositoryPassword gets a reference to the given string and assigns it to the RepositoryPassword field.
func (o *GetServerServices200ResponseDataInner) SetRepositoryPassword(v string) {
	o.RepositoryPassword = &v
}

// GetDeleteImageOnDisable returns the DeleteImageOnDisable field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetDeleteImageOnDisable() bool {
	if o == nil || IsNil(o.DeleteImageOnDisable) {
		var ret bool
		return ret
	}
	return *o.DeleteImageOnDisable
}

// GetDeleteImageOnDisableOk returns a tuple with the DeleteImageOnDisable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetDeleteImageOnDisableOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteImageOnDisable) {
		return nil, false
	}
	return o.DeleteImageOnDisable, true
}

// HasDeleteImageOnDisable returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasDeleteImageOnDisable() bool {
	if o != nil && !IsNil(o.DeleteImageOnDisable) {
		return true
	}

	return false
}

// SetDeleteImageOnDisable gets a reference to the given bool and assigns it to the DeleteImageOnDisable field.
func (o *GetServerServices200ResponseDataInner) SetDeleteImageOnDisable(v bool) {
	o.DeleteImageOnDisable = &v
}

// GetDeleteMountPointsOnDisable returns the DeleteMountPointsOnDisable field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetDeleteMountPointsOnDisable() bool {
	if o == nil || IsNil(o.DeleteMountPointsOnDisable) {
		var ret bool
		return ret
	}
	return *o.DeleteMountPointsOnDisable
}

// GetDeleteMountPointsOnDisableOk returns a tuple with the DeleteMountPointsOnDisable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetDeleteMountPointsOnDisableOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteMountPointsOnDisable) {
		return nil, false
	}
	return o.DeleteMountPointsOnDisable, true
}

// HasDeleteMountPointsOnDisable returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasDeleteMountPointsOnDisable() bool {
	if o != nil && !IsNil(o.DeleteMountPointsOnDisable) {
		return true
	}

	return false
}

// SetDeleteMountPointsOnDisable gets a reference to the given bool and assigns it to the DeleteMountPointsOnDisable field.
func (o *GetServerServices200ResponseDataInner) SetDeleteMountPointsOnDisable(v bool) {
	o.DeleteMountPointsOnDisable = &v
}

// GetDedicatedManagementEnabled returns the DedicatedManagementEnabled field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetDedicatedManagementEnabled() bool {
	if o == nil || IsNil(o.DedicatedManagementEnabled) {
		var ret bool
		return ret
	}
	return *o.DedicatedManagementEnabled
}

// GetDedicatedManagementEnabledOk returns a tuple with the DedicatedManagementEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetDedicatedManagementEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DedicatedManagementEnabled) {
		return nil, false
	}
	return o.DedicatedManagementEnabled, true
}

// HasDedicatedManagementEnabled returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasDedicatedManagementEnabled() bool {
	if o != nil && !IsNil(o.DedicatedManagementEnabled) {
		return true
	}

	return false
}

// SetDedicatedManagementEnabled gets a reference to the given bool and assigns it to the DedicatedManagementEnabled field.
func (o *GetServerServices200ResponseDataInner) SetDedicatedManagementEnabled(v bool) {
	o.DedicatedManagementEnabled = &v
}

// GetInterfaces returns the Interfaces field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetInterfaces() []InterfaceBean {
	if o == nil || IsNil(o.Interfaces) {
		var ret []InterfaceBean
		return ret
	}
	return o.Interfaces
}

// GetInterfacesOk returns a tuple with the Interfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetInterfacesOk() ([]InterfaceBean, bool) {
	if o == nil || IsNil(o.Interfaces) {
		return nil, false
	}
	return o.Interfaces, true
}

// HasInterfaces returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasInterfaces() bool {
	if o != nil && !IsNil(o.Interfaces) {
		return true
	}

	return false
}

// SetInterfaces gets a reference to the given []InterfaceBean and assigns it to the Interfaces field.
func (o *GetServerServices200ResponseDataInner) SetInterfaces(v []InterfaceBean) {
	o.Interfaces = v
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetRoutes() []RouteBean {
	if o == nil || IsNil(o.Routes) {
		var ret []RouteBean
		return ret
	}
	return o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetRoutesOk() ([]RouteBean, bool) {
	if o == nil || IsNil(o.Routes) {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasRoutes() bool {
	if o != nil && !IsNil(o.Routes) {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []RouteBean and assigns it to the Routes field.
func (o *GetServerServices200ResponseDataInner) SetRoutes(v []RouteBean) {
	o.Routes = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *GetServerServices200ResponseDataInner) SetClientId(v string) {
	o.ClientId = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *GetServerServices200ResponseDataInner) SetKey(v string) {
	o.Key = &v
}

// GetContactName returns the ContactName field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetContactName() string {
	if o == nil || IsNil(o.ContactName) {
		var ret string
		return ret
	}
	return *o.ContactName
}

// GetContactNameOk returns a tuple with the ContactName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetContactNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContactName) {
		return nil, false
	}
	return o.ContactName, true
}

// HasContactName returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasContactName() bool {
	if o != nil && !IsNil(o.ContactName) {
		return true
	}

	return false
}

// SetContactName gets a reference to the given string and assigns it to the ContactName field.
func (o *GetServerServices200ResponseDataInner) SetContactName(v string) {
	o.ContactName = &v
}

// GetContactEmail returns the ContactEmail field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetContactEmail() string {
	if o == nil || IsNil(o.ContactEmail) {
		var ret string
		return ret
	}
	return *o.ContactEmail
}

// GetContactEmailOk returns a tuple with the ContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetContactEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ContactEmail) {
		return nil, false
	}
	return o.ContactEmail, true
}

// HasContactEmail returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasContactEmail() bool {
	if o != nil && !IsNil(o.ContactEmail) {
		return true
	}

	return false
}

// SetContactEmail gets a reference to the given string and assigns it to the ContactEmail field.
func (o *GetServerServices200ResponseDataInner) SetContactEmail(v string) {
	o.ContactEmail = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetLocation() string {
	if o == nil || IsNil(o.Location) {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetLocationOk() (*string, bool) {
	if o == nil || IsNil(o.Location) {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasLocation() bool {
	if o != nil && !IsNil(o.Location) {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *GetServerServices200ResponseDataInner) SetLocation(v string) {
	o.Location = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GetServerServices200ResponseDataInner) SetDescription(v string) {
	o.Description = &v
}

// GetLogLevel returns the LogLevel field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetLogLevel() string {
	if o == nil || IsNil(o.LogLevel) {
		var ret string
		return ret
	}
	return *o.LogLevel
}

// GetLogLevelOk returns a tuple with the LogLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetLogLevelOk() (*string, bool) {
	if o == nil || IsNil(o.LogLevel) {
		return nil, false
	}
	return o.LogLevel, true
}

// HasLogLevel returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasLogLevel() bool {
	if o != nil && !IsNil(o.LogLevel) {
		return true
	}

	return false
}

// SetLogLevel gets a reference to the given string and assigns it to the LogLevel field.
func (o *GetServerServices200ResponseDataInner) SetLogLevel(v string) {
	o.LogLevel = &v
}

// GetSnmpv1 returns the Snmpv1 field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetSnmpv1() Snmpv1Bean {
	if o == nil || IsNil(o.Snmpv1) {
		var ret Snmpv1Bean
		return ret
	}
	return *o.Snmpv1
}

// GetSnmpv1Ok returns a tuple with the Snmpv1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetSnmpv1Ok() (*Snmpv1Bean, bool) {
	if o == nil || IsNil(o.Snmpv1) {
		return nil, false
	}
	return o.Snmpv1, true
}

// HasSnmpv1 returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasSnmpv1() bool {
	if o != nil && !IsNil(o.Snmpv1) {
		return true
	}

	return false
}

// SetSnmpv1 gets a reference to the given Snmpv1Bean and assigns it to the Snmpv1 field.
func (o *GetServerServices200ResponseDataInner) SetSnmpv1(v Snmpv1Bean) {
	o.Snmpv1 = &v
}

// GetSnmpv2c returns the Snmpv2c field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetSnmpv2c() Snmpv2cBean {
	if o == nil || IsNil(o.Snmpv2c) {
		var ret Snmpv2cBean
		return ret
	}
	return *o.Snmpv2c
}

// GetSnmpv2cOk returns a tuple with the Snmpv2c field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetSnmpv2cOk() (*Snmpv2cBean, bool) {
	if o == nil || IsNil(o.Snmpv2c) {
		return nil, false
	}
	return o.Snmpv2c, true
}

// HasSnmpv2c returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasSnmpv2c() bool {
	if o != nil && !IsNil(o.Snmpv2c) {
		return true
	}

	return false
}

// SetSnmpv2c gets a reference to the given Snmpv2cBean and assigns it to the Snmpv2c field.
func (o *GetServerServices200ResponseDataInner) SetSnmpv2c(v Snmpv2cBean) {
	o.Snmpv2c = &v
}

// GetSnmpv3 returns the Snmpv3 field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetSnmpv3() Snmpv3Bean {
	if o == nil || IsNil(o.Snmpv3) {
		var ret Snmpv3Bean
		return ret
	}
	return *o.Snmpv3
}

// GetSnmpv3Ok returns a tuple with the Snmpv3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetSnmpv3Ok() (*Snmpv3Bean, bool) {
	if o == nil || IsNil(o.Snmpv3) {
		return nil, false
	}
	return o.Snmpv3, true
}

// HasSnmpv3 returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasSnmpv3() bool {
	if o != nil && !IsNil(o.Snmpv3) {
		return true
	}

	return false
}

// SetSnmpv3 gets a reference to the given Snmpv3Bean and assigns it to the Snmpv3 field.
func (o *GetServerServices200ResponseDataInner) SetSnmpv3(v Snmpv3Bean) {
	o.Snmpv3 = &v
}

// GetTrapServers returns the TrapServers field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetTrapServers() []SnmpTrapServerBean {
	if o == nil || IsNil(o.TrapServers) {
		var ret []SnmpTrapServerBean
		return ret
	}
	return o.TrapServers
}

// GetTrapServersOk returns a tuple with the TrapServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetTrapServersOk() ([]SnmpTrapServerBean, bool) {
	if o == nil || IsNil(o.TrapServers) {
		return nil, false
	}
	return o.TrapServers, true
}

// HasTrapServers returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasTrapServers() bool {
	if o != nil && !IsNil(o.TrapServers) {
		return true
	}

	return false
}

// SetTrapServers gets a reference to the given []SnmpTrapServerBean and assigns it to the TrapServers field.
func (o *GetServerServices200ResponseDataInner) SetTrapServers(v []SnmpTrapServerBean) {
	o.TrapServers = v
}

// GetTacacsPlusAuthentication returns the TacacsPlusAuthentication field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetTacacsPlusAuthentication() TacacsPlusAuthenticationBean {
	if o == nil || IsNil(o.TacacsPlusAuthentication) {
		var ret TacacsPlusAuthenticationBean
		return ret
	}
	return *o.TacacsPlusAuthentication
}

// GetTacacsPlusAuthenticationOk returns a tuple with the TacacsPlusAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetTacacsPlusAuthenticationOk() (*TacacsPlusAuthenticationBean, bool) {
	if o == nil || IsNil(o.TacacsPlusAuthentication) {
		return nil, false
	}
	return o.TacacsPlusAuthentication, true
}

// HasTacacsPlusAuthentication returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasTacacsPlusAuthentication() bool {
	if o != nil && !IsNil(o.TacacsPlusAuthentication) {
		return true
	}

	return false
}

// SetTacacsPlusAuthentication gets a reference to the given TacacsPlusAuthenticationBean and assigns it to the TacacsPlusAuthentication field.
func (o *GetServerServices200ResponseDataInner) SetTacacsPlusAuthentication(v TacacsPlusAuthenticationBean) {
	o.TacacsPlusAuthentication = &v
}

// GetIso8601TimestampsEnabled returns the Iso8601TimestampsEnabled field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetIso8601TimestampsEnabled() bool {
	if o == nil || IsNil(o.Iso8601TimestampsEnabled) {
		var ret bool
		return ret
	}
	return *o.Iso8601TimestampsEnabled
}

// GetIso8601TimestampsEnabledOk returns a tuple with the Iso8601TimestampsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetIso8601TimestampsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Iso8601TimestampsEnabled) {
		return nil, false
	}
	return o.Iso8601TimestampsEnabled, true
}

// HasIso8601TimestampsEnabled returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasIso8601TimestampsEnabled() bool {
	if o != nil && !IsNil(o.Iso8601TimestampsEnabled) {
		return true
	}

	return false
}

// SetIso8601TimestampsEnabled gets a reference to the given bool and assigns it to the Iso8601TimestampsEnabled field.
func (o *GetServerServices200ResponseDataInner) SetIso8601TimestampsEnabled(v bool) {
	o.Iso8601TimestampsEnabled = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetServerServices200ResponseDataInner) GetLinks() ResourceLinks {
	if o == nil || IsNil(o.Links) {
		var ret ResourceLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetServerServices200ResponseDataInner) GetLinksOk() (*ResourceLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetServerServices200ResponseDataInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ResourceLinks and assigns it to the Links field.
func (o *GetServerServices200ResponseDataInner) SetLinks(v ResourceLinks) {
	o.Links = &v
}

func (o GetServerServices200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetServerServices200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ServerVersion) {
		toSerialize["serverVersion"] = o.ServerVersion
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.ManualOverrideEnabled) {
		toSerialize["manualOverrideEnabled"] = o.ManualOverrideEnabled
	}
	if !IsNil(o.Addresses) {
		toSerialize["addresses"] = o.Addresses
	}
	if !IsNil(o.Routing) {
		toSerialize["routing"] = o.Routing
	}
	if !IsNil(o.MaximumBufferedEvents) {
		toSerialize["maximumBufferedEvents"] = o.MaximumBufferedEvents
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.Dhcpv4Enabled) {
		toSerialize["dhcpv4Enabled"] = o.Dhcpv4Enabled
	}
	if !IsNil(o.Dhcpv6Enabled) {
		toSerialize["dhcpv6Enabled"] = o.Dhcpv6Enabled
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.Servers) {
		toSerialize["servers"] = o.Servers
	}
	if !IsNil(o.PollingInterval) {
		toSerialize["pollingInterval"] = o.PollingInterval
	}
	if !IsNil(o.PingAllowed) {
		toSerialize["pingAllowed"] = o.PingAllowed
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Container) {
		toSerialize["container"] = o.Container
	}
	if !IsNil(o.RepositoryUsername) {
		toSerialize["repositoryUsername"] = o.RepositoryUsername
	}
	if !IsNil(o.RepositoryPassword) {
		toSerialize["repositoryPassword"] = o.RepositoryPassword
	}
	if !IsNil(o.DeleteImageOnDisable) {
		toSerialize["deleteImageOnDisable"] = o.DeleteImageOnDisable
	}
	if !IsNil(o.DeleteMountPointsOnDisable) {
		toSerialize["deleteMountPointsOnDisable"] = o.DeleteMountPointsOnDisable
	}
	if !IsNil(o.DedicatedManagementEnabled) {
		toSerialize["dedicatedManagementEnabled"] = o.DedicatedManagementEnabled
	}
	if !IsNil(o.Interfaces) {
		toSerialize["interfaces"] = o.Interfaces
	}
	if !IsNil(o.Routes) {
		toSerialize["routes"] = o.Routes
	}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.ContactName) {
		toSerialize["contactName"] = o.ContactName
	}
	if !IsNil(o.ContactEmail) {
		toSerialize["contactEmail"] = o.ContactEmail
	}
	if !IsNil(o.Location) {
		toSerialize["location"] = o.Location
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.LogLevel) {
		toSerialize["logLevel"] = o.LogLevel
	}
	if !IsNil(o.Snmpv1) {
		toSerialize["snmpv1"] = o.Snmpv1
	}
	if !IsNil(o.Snmpv2c) {
		toSerialize["snmpv2c"] = o.Snmpv2c
	}
	if !IsNil(o.Snmpv3) {
		toSerialize["snmpv3"] = o.Snmpv3
	}
	if !IsNil(o.TrapServers) {
		toSerialize["trapServers"] = o.TrapServers
	}
	if !IsNil(o.TacacsPlusAuthentication) {
		toSerialize["tacacsPlusAuthentication"] = o.TacacsPlusAuthentication
	}
	if !IsNil(o.Iso8601TimestampsEnabled) {
		toSerialize["iso8601TimestampsEnabled"] = o.Iso8601TimestampsEnabled
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetServerServices200ResponseDataInner struct {
	value *GetServerServices200ResponseDataInner
	isSet bool
}

func (v NullableGetServerServices200ResponseDataInner) Get() *GetServerServices200ResponseDataInner {
	return v.value
}

func (v *NullableGetServerServices200ResponseDataInner) Set(val *GetServerServices200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetServerServices200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetServerServices200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetServerServices200ResponseDataInner(val *GetServerServices200ResponseDataInner) *NullableGetServerServices200ResponseDataInner {
	return &NullableGetServerServices200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetServerServices200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetServerServices200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


