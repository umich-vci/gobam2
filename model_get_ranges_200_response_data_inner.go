/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the GetRanges200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRanges200ResponseDataInner{}

// GetRanges200ResponseDataInner struct for GetRanges200ResponseDataInner
type GetRanges200ResponseDataInner struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The resource type.
	Type *string `json:"type,omitempty"`
	// The name of the resource.
	Name *string `json:"name,omitempty"`
	// User-defined fields set for the resource.
	UserDefinedFields *map[string]string `json:"userDefinedFields,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`
	// The address range for the DHCP range.
	Range *string `json:"range,omitempty"`
	// Values indicating the current amount of DHCP allocated, DHCP abandoned, DHCP reserved, and unassigned IP addresses within the range.
	Usage *map[string]int64 `json:"usage,omitempty"`
	InheritedFields []string `json:"_inheritedFields,omitempty"`
	Template *InlinedIPv4Template `json:"template,omitempty"`
	// Indicates whether the DHCP range will automatically be split around any static, reserved, and gateway addresses in the network that are within the DHCP range.
	SplitAroundStaticAddresses *bool `json:"splitAroundStaticAddresses,omitempty"`
	// The exclusion ranges for the DHCP range. Addresses in each exclusion range will not be dynamically assigned.
	ExclusionRanges []string `json:"exclusionRanges,omitempty"`
	// A DHCP alert is triggered when usage falls below this percentage (when too few addresses are in use).
	LowWaterMark *int32 `json:"lowWaterMark,omitempty"`
	// A DHCP alert is triggered when usage exceeds this percentage (when too many addresses are in use).
	HighWaterMark *int32 `json:"highWaterMark,omitempty"`
	Links *ResourceLinks `json:"_links,omitempty"`
}

// NewGetRanges200ResponseDataInner instantiates a new GetRanges200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRanges200ResponseDataInner() *GetRanges200ResponseDataInner {
	this := GetRanges200ResponseDataInner{}
	return &this
}

// NewGetRanges200ResponseDataInnerWithDefaults instantiates a new GetRanges200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRanges200ResponseDataInnerWithDefaults() *GetRanges200ResponseDataInner {
	this := GetRanges200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetRanges200ResponseDataInner) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetRanges200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetRanges200ResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetUserDefinedFields() map[string]string {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret map[string]string
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetUserDefinedFieldsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given map[string]string and assigns it to the UserDefinedFields field.
func (o *GetRanges200ResponseDataInner) SetUserDefinedFields(v map[string]string) {
	o.UserDefinedFields = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetConfiguration() InlinedConfiguration {
	if o == nil || IsNil(o.Configuration) {
		var ret InlinedConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetConfigurationOk() (*InlinedConfiguration, bool) {
	if o == nil || IsNil(o.Configuration) {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given InlinedConfiguration and assigns it to the Configuration field.
func (o *GetRanges200ResponseDataInner) SetConfiguration(v InlinedConfiguration) {
	o.Configuration = &v
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetRange() string {
	if o == nil || IsNil(o.Range) {
		var ret string
		return ret
	}
	return *o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetRangeOk() (*string, bool) {
	if o == nil || IsNil(o.Range) {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasRange() bool {
	if o != nil && !IsNil(o.Range) {
		return true
	}

	return false
}

// SetRange gets a reference to the given string and assigns it to the Range field.
func (o *GetRanges200ResponseDataInner) SetRange(v string) {
	o.Range = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetUsage() map[string]int64 {
	if o == nil || IsNil(o.Usage) {
		var ret map[string]int64
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetUsageOk() (*map[string]int64, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given map[string]int64 and assigns it to the Usage field.
func (o *GetRanges200ResponseDataInner) SetUsage(v map[string]int64) {
	o.Usage = &v
}

// GetInheritedFields returns the InheritedFields field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetInheritedFields() []string {
	if o == nil || IsNil(o.InheritedFields) {
		var ret []string
		return ret
	}
	return o.InheritedFields
}

// GetInheritedFieldsOk returns a tuple with the InheritedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetInheritedFieldsOk() ([]string, bool) {
	if o == nil || IsNil(o.InheritedFields) {
		return nil, false
	}
	return o.InheritedFields, true
}

// HasInheritedFields returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasInheritedFields() bool {
	if o != nil && !IsNil(o.InheritedFields) {
		return true
	}

	return false
}

// SetInheritedFields gets a reference to the given []string and assigns it to the InheritedFields field.
func (o *GetRanges200ResponseDataInner) SetInheritedFields(v []string) {
	o.InheritedFields = v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetTemplate() InlinedIPv4Template {
	if o == nil || IsNil(o.Template) {
		var ret InlinedIPv4Template
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetTemplateOk() (*InlinedIPv4Template, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given InlinedIPv4Template and assigns it to the Template field.
func (o *GetRanges200ResponseDataInner) SetTemplate(v InlinedIPv4Template) {
	o.Template = &v
}

// GetSplitAroundStaticAddresses returns the SplitAroundStaticAddresses field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetSplitAroundStaticAddresses() bool {
	if o == nil || IsNil(o.SplitAroundStaticAddresses) {
		var ret bool
		return ret
	}
	return *o.SplitAroundStaticAddresses
}

// GetSplitAroundStaticAddressesOk returns a tuple with the SplitAroundStaticAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetSplitAroundStaticAddressesOk() (*bool, bool) {
	if o == nil || IsNil(o.SplitAroundStaticAddresses) {
		return nil, false
	}
	return o.SplitAroundStaticAddresses, true
}

// HasSplitAroundStaticAddresses returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasSplitAroundStaticAddresses() bool {
	if o != nil && !IsNil(o.SplitAroundStaticAddresses) {
		return true
	}

	return false
}

// SetSplitAroundStaticAddresses gets a reference to the given bool and assigns it to the SplitAroundStaticAddresses field.
func (o *GetRanges200ResponseDataInner) SetSplitAroundStaticAddresses(v bool) {
	o.SplitAroundStaticAddresses = &v
}

// GetExclusionRanges returns the ExclusionRanges field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetExclusionRanges() []string {
	if o == nil || IsNil(o.ExclusionRanges) {
		var ret []string
		return ret
	}
	return o.ExclusionRanges
}

// GetExclusionRangesOk returns a tuple with the ExclusionRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetExclusionRangesOk() ([]string, bool) {
	if o == nil || IsNil(o.ExclusionRanges) {
		return nil, false
	}
	return o.ExclusionRanges, true
}

// HasExclusionRanges returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasExclusionRanges() bool {
	if o != nil && !IsNil(o.ExclusionRanges) {
		return true
	}

	return false
}

// SetExclusionRanges gets a reference to the given []string and assigns it to the ExclusionRanges field.
func (o *GetRanges200ResponseDataInner) SetExclusionRanges(v []string) {
	o.ExclusionRanges = v
}

// GetLowWaterMark returns the LowWaterMark field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetLowWaterMark() int32 {
	if o == nil || IsNil(o.LowWaterMark) {
		var ret int32
		return ret
	}
	return *o.LowWaterMark
}

// GetLowWaterMarkOk returns a tuple with the LowWaterMark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetLowWaterMarkOk() (*int32, bool) {
	if o == nil || IsNil(o.LowWaterMark) {
		return nil, false
	}
	return o.LowWaterMark, true
}

// HasLowWaterMark returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasLowWaterMark() bool {
	if o != nil && !IsNil(o.LowWaterMark) {
		return true
	}

	return false
}

// SetLowWaterMark gets a reference to the given int32 and assigns it to the LowWaterMark field.
func (o *GetRanges200ResponseDataInner) SetLowWaterMark(v int32) {
	o.LowWaterMark = &v
}

// GetHighWaterMark returns the HighWaterMark field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetHighWaterMark() int32 {
	if o == nil || IsNil(o.HighWaterMark) {
		var ret int32
		return ret
	}
	return *o.HighWaterMark
}

// GetHighWaterMarkOk returns a tuple with the HighWaterMark field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetHighWaterMarkOk() (*int32, bool) {
	if o == nil || IsNil(o.HighWaterMark) {
		return nil, false
	}
	return o.HighWaterMark, true
}

// HasHighWaterMark returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasHighWaterMark() bool {
	if o != nil && !IsNil(o.HighWaterMark) {
		return true
	}

	return false
}

// SetHighWaterMark gets a reference to the given int32 and assigns it to the HighWaterMark field.
func (o *GetRanges200ResponseDataInner) SetHighWaterMark(v int32) {
	o.HighWaterMark = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetRanges200ResponseDataInner) GetLinks() ResourceLinks {
	if o == nil || IsNil(o.Links) {
		var ret ResourceLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRanges200ResponseDataInner) GetLinksOk() (*ResourceLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetRanges200ResponseDataInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ResourceLinks and assigns it to the Links field.
func (o *GetRanges200ResponseDataInner) SetLinks(v ResourceLinks) {
	o.Links = &v
}

func (o GetRanges200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRanges200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !IsNil(o.Range) {
		toSerialize["range"] = o.Range
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	if !IsNil(o.InheritedFields) {
		toSerialize["_inheritedFields"] = o.InheritedFields
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	if !IsNil(o.SplitAroundStaticAddresses) {
		toSerialize["splitAroundStaticAddresses"] = o.SplitAroundStaticAddresses
	}
	if !IsNil(o.ExclusionRanges) {
		toSerialize["exclusionRanges"] = o.ExclusionRanges
	}
	if !IsNil(o.LowWaterMark) {
		toSerialize["lowWaterMark"] = o.LowWaterMark
	}
	if !IsNil(o.HighWaterMark) {
		toSerialize["highWaterMark"] = o.HighWaterMark
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetRanges200ResponseDataInner struct {
	value *GetRanges200ResponseDataInner
	isSet bool
}

func (v NullableGetRanges200ResponseDataInner) Get() *GetRanges200ResponseDataInner {
	return v.value
}

func (v *NullableGetRanges200ResponseDataInner) Set(val *GetRanges200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRanges200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRanges200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRanges200ResponseDataInner(val *GetRanges200ResponseDataInner) *NullableGetRanges200ResponseDataInner {
	return &NullableGetRanges200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetRanges200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRanges200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


