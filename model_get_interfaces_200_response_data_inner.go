/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the GetInterfaces200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInterfaces200ResponseDataInner{}

// GetInterfaces200ResponseDataInner struct for GetInterfaces200ResponseDataInner
type GetInterfaces200ResponseDataInner struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The resource type.
	Type *string `json:"type,omitempty"`
	// The name of the resource.
	Name *string `json:"name,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// User-defined fields set for the resource.
	UserDefinedFields *map[string]string `json:"userDefinedFields,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`
	Server *AbstractServer `json:"server,omitempty"`
	// The secondary IP address of the interface.
	SecondaryAddress *string `json:"secondaryAddress,omitempty"`
	// The IP address configured on the eth0 interface in the DNS/DHCP Administration Console. If dedicated management is enabled, The IP address for the dedicated management interface (eth2). On a multi-interface DNS/DHCP Server, the interface is used for all management traffic such as CS, PSM, SNMP, and SSH.
	ManagementAddress *string `json:"managementAddress,omitempty"`
	// The IPv4 address for the services interface. On a multi-interface DNS/DHCP Server, the interface is used for all service traffic such as DNS, DHCP, and TFTP services.
	ServicesIpv4Address *string `json:"servicesIpv4Address,omitempty"`
	// The IPv4 prefix length for the services interface.
	ServicesIpv4PrefixLength *int32 `json:"servicesIpv4PrefixLength,omitempty"`
	// The IPv6 address for the services interface.
	ServicesIpv6Address *string `json:"servicesIpv6Address,omitempty"`
	// The IPv6 prefix length for the services interface.
	ServicesIpv6PrefixLength *int32 `json:"servicesIpv6PrefixLength,omitempty"`
	// The IP address of the backbone connection if configured as a member of a high availability pair.
	HaBackboneAddress *string `json:"haBackboneAddress,omitempty"`
	// The subnet prefix length of the high availability backbone.
	HaBackbonePrefixLength *int32 `json:"haBackbonePrefixLength,omitempty"`
	// Indicates whether redundancy is enabled through port bonding.
	RedundancyEnabled *bool `json:"redundancyEnabled,omitempty"`
	// The type of redundancy scenario configured.
	RedundancyScenario *string `json:"redundancyScenario,omitempty"`
	// The primary IP address of the published interface.
	PrimaryAddress *string `json:"primaryAddress,omitempty"`
	Links *ResourceLinks `json:"_links,omitempty"`
}

// NewGetInterfaces200ResponseDataInner instantiates a new GetInterfaces200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInterfaces200ResponseDataInner() *GetInterfaces200ResponseDataInner {
	this := GetInterfaces200ResponseDataInner{}
	return &this
}

// NewGetInterfaces200ResponseDataInnerWithDefaults instantiates a new GetInterfaces200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInterfaces200ResponseDataInnerWithDefaults() *GetInterfaces200ResponseDataInner {
	this := GetInterfaces200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetInterfaces200ResponseDataInner) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetInterfaces200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetInterfaces200ResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetUserDefinedFields() map[string]string {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret map[string]string
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetUserDefinedFieldsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given map[string]string and assigns it to the UserDefinedFields field.
func (o *GetInterfaces200ResponseDataInner) SetUserDefinedFields(v map[string]string) {
	o.UserDefinedFields = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetConfiguration() InlinedConfiguration {
	if o == nil || IsNil(o.Configuration) {
		var ret InlinedConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetConfigurationOk() (*InlinedConfiguration, bool) {
	if o == nil || IsNil(o.Configuration) {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given InlinedConfiguration and assigns it to the Configuration field.
func (o *GetInterfaces200ResponseDataInner) SetConfiguration(v InlinedConfiguration) {
	o.Configuration = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetServer() AbstractServer {
	if o == nil || IsNil(o.Server) {
		var ret AbstractServer
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetServerOk() (*AbstractServer, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given AbstractServer and assigns it to the Server field.
func (o *GetInterfaces200ResponseDataInner) SetServer(v AbstractServer) {
	o.Server = &v
}

// GetSecondaryAddress returns the SecondaryAddress field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetSecondaryAddress() string {
	if o == nil || IsNil(o.SecondaryAddress) {
		var ret string
		return ret
	}
	return *o.SecondaryAddress
}

// GetSecondaryAddressOk returns a tuple with the SecondaryAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetSecondaryAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryAddress) {
		return nil, false
	}
	return o.SecondaryAddress, true
}

// HasSecondaryAddress returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasSecondaryAddress() bool {
	if o != nil && !IsNil(o.SecondaryAddress) {
		return true
	}

	return false
}

// SetSecondaryAddress gets a reference to the given string and assigns it to the SecondaryAddress field.
func (o *GetInterfaces200ResponseDataInner) SetSecondaryAddress(v string) {
	o.SecondaryAddress = &v
}

// GetManagementAddress returns the ManagementAddress field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetManagementAddress() string {
	if o == nil || IsNil(o.ManagementAddress) {
		var ret string
		return ret
	}
	return *o.ManagementAddress
}

// GetManagementAddressOk returns a tuple with the ManagementAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetManagementAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementAddress) {
		return nil, false
	}
	return o.ManagementAddress, true
}

// HasManagementAddress returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasManagementAddress() bool {
	if o != nil && !IsNil(o.ManagementAddress) {
		return true
	}

	return false
}

// SetManagementAddress gets a reference to the given string and assigns it to the ManagementAddress field.
func (o *GetInterfaces200ResponseDataInner) SetManagementAddress(v string) {
	o.ManagementAddress = &v
}

// GetServicesIpv4Address returns the ServicesIpv4Address field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetServicesIpv4Address() string {
	if o == nil || IsNil(o.ServicesIpv4Address) {
		var ret string
		return ret
	}
	return *o.ServicesIpv4Address
}

// GetServicesIpv4AddressOk returns a tuple with the ServicesIpv4Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetServicesIpv4AddressOk() (*string, bool) {
	if o == nil || IsNil(o.ServicesIpv4Address) {
		return nil, false
	}
	return o.ServicesIpv4Address, true
}

// HasServicesIpv4Address returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasServicesIpv4Address() bool {
	if o != nil && !IsNil(o.ServicesIpv4Address) {
		return true
	}

	return false
}

// SetServicesIpv4Address gets a reference to the given string and assigns it to the ServicesIpv4Address field.
func (o *GetInterfaces200ResponseDataInner) SetServicesIpv4Address(v string) {
	o.ServicesIpv4Address = &v
}

// GetServicesIpv4PrefixLength returns the ServicesIpv4PrefixLength field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetServicesIpv4PrefixLength() int32 {
	if o == nil || IsNil(o.ServicesIpv4PrefixLength) {
		var ret int32
		return ret
	}
	return *o.ServicesIpv4PrefixLength
}

// GetServicesIpv4PrefixLengthOk returns a tuple with the ServicesIpv4PrefixLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetServicesIpv4PrefixLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.ServicesIpv4PrefixLength) {
		return nil, false
	}
	return o.ServicesIpv4PrefixLength, true
}

// HasServicesIpv4PrefixLength returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasServicesIpv4PrefixLength() bool {
	if o != nil && !IsNil(o.ServicesIpv4PrefixLength) {
		return true
	}

	return false
}

// SetServicesIpv4PrefixLength gets a reference to the given int32 and assigns it to the ServicesIpv4PrefixLength field.
func (o *GetInterfaces200ResponseDataInner) SetServicesIpv4PrefixLength(v int32) {
	o.ServicesIpv4PrefixLength = &v
}

// GetServicesIpv6Address returns the ServicesIpv6Address field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetServicesIpv6Address() string {
	if o == nil || IsNil(o.ServicesIpv6Address) {
		var ret string
		return ret
	}
	return *o.ServicesIpv6Address
}

// GetServicesIpv6AddressOk returns a tuple with the ServicesIpv6Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetServicesIpv6AddressOk() (*string, bool) {
	if o == nil || IsNil(o.ServicesIpv6Address) {
		return nil, false
	}
	return o.ServicesIpv6Address, true
}

// HasServicesIpv6Address returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasServicesIpv6Address() bool {
	if o != nil && !IsNil(o.ServicesIpv6Address) {
		return true
	}

	return false
}

// SetServicesIpv6Address gets a reference to the given string and assigns it to the ServicesIpv6Address field.
func (o *GetInterfaces200ResponseDataInner) SetServicesIpv6Address(v string) {
	o.ServicesIpv6Address = &v
}

// GetServicesIpv6PrefixLength returns the ServicesIpv6PrefixLength field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetServicesIpv6PrefixLength() int32 {
	if o == nil || IsNil(o.ServicesIpv6PrefixLength) {
		var ret int32
		return ret
	}
	return *o.ServicesIpv6PrefixLength
}

// GetServicesIpv6PrefixLengthOk returns a tuple with the ServicesIpv6PrefixLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetServicesIpv6PrefixLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.ServicesIpv6PrefixLength) {
		return nil, false
	}
	return o.ServicesIpv6PrefixLength, true
}

// HasServicesIpv6PrefixLength returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasServicesIpv6PrefixLength() bool {
	if o != nil && !IsNil(o.ServicesIpv6PrefixLength) {
		return true
	}

	return false
}

// SetServicesIpv6PrefixLength gets a reference to the given int32 and assigns it to the ServicesIpv6PrefixLength field.
func (o *GetInterfaces200ResponseDataInner) SetServicesIpv6PrefixLength(v int32) {
	o.ServicesIpv6PrefixLength = &v
}

// GetHaBackboneAddress returns the HaBackboneAddress field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetHaBackboneAddress() string {
	if o == nil || IsNil(o.HaBackboneAddress) {
		var ret string
		return ret
	}
	return *o.HaBackboneAddress
}

// GetHaBackboneAddressOk returns a tuple with the HaBackboneAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetHaBackboneAddressOk() (*string, bool) {
	if o == nil || IsNil(o.HaBackboneAddress) {
		return nil, false
	}
	return o.HaBackboneAddress, true
}

// HasHaBackboneAddress returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasHaBackboneAddress() bool {
	if o != nil && !IsNil(o.HaBackboneAddress) {
		return true
	}

	return false
}

// SetHaBackboneAddress gets a reference to the given string and assigns it to the HaBackboneAddress field.
func (o *GetInterfaces200ResponseDataInner) SetHaBackboneAddress(v string) {
	o.HaBackboneAddress = &v
}

// GetHaBackbonePrefixLength returns the HaBackbonePrefixLength field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetHaBackbonePrefixLength() int32 {
	if o == nil || IsNil(o.HaBackbonePrefixLength) {
		var ret int32
		return ret
	}
	return *o.HaBackbonePrefixLength
}

// GetHaBackbonePrefixLengthOk returns a tuple with the HaBackbonePrefixLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetHaBackbonePrefixLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.HaBackbonePrefixLength) {
		return nil, false
	}
	return o.HaBackbonePrefixLength, true
}

// HasHaBackbonePrefixLength returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasHaBackbonePrefixLength() bool {
	if o != nil && !IsNil(o.HaBackbonePrefixLength) {
		return true
	}

	return false
}

// SetHaBackbonePrefixLength gets a reference to the given int32 and assigns it to the HaBackbonePrefixLength field.
func (o *GetInterfaces200ResponseDataInner) SetHaBackbonePrefixLength(v int32) {
	o.HaBackbonePrefixLength = &v
}

// GetRedundancyEnabled returns the RedundancyEnabled field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetRedundancyEnabled() bool {
	if o == nil || IsNil(o.RedundancyEnabled) {
		var ret bool
		return ret
	}
	return *o.RedundancyEnabled
}

// GetRedundancyEnabledOk returns a tuple with the RedundancyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetRedundancyEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RedundancyEnabled) {
		return nil, false
	}
	return o.RedundancyEnabled, true
}

// HasRedundancyEnabled returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasRedundancyEnabled() bool {
	if o != nil && !IsNil(o.RedundancyEnabled) {
		return true
	}

	return false
}

// SetRedundancyEnabled gets a reference to the given bool and assigns it to the RedundancyEnabled field.
func (o *GetInterfaces200ResponseDataInner) SetRedundancyEnabled(v bool) {
	o.RedundancyEnabled = &v
}

// GetRedundancyScenario returns the RedundancyScenario field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetRedundancyScenario() string {
	if o == nil || IsNil(o.RedundancyScenario) {
		var ret string
		return ret
	}
	return *o.RedundancyScenario
}

// GetRedundancyScenarioOk returns a tuple with the RedundancyScenario field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetRedundancyScenarioOk() (*string, bool) {
	if o == nil || IsNil(o.RedundancyScenario) {
		return nil, false
	}
	return o.RedundancyScenario, true
}

// HasRedundancyScenario returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasRedundancyScenario() bool {
	if o != nil && !IsNil(o.RedundancyScenario) {
		return true
	}

	return false
}

// SetRedundancyScenario gets a reference to the given string and assigns it to the RedundancyScenario field.
func (o *GetInterfaces200ResponseDataInner) SetRedundancyScenario(v string) {
	o.RedundancyScenario = &v
}

// GetPrimaryAddress returns the PrimaryAddress field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetPrimaryAddress() string {
	if o == nil || IsNil(o.PrimaryAddress) {
		var ret string
		return ret
	}
	return *o.PrimaryAddress
}

// GetPrimaryAddressOk returns a tuple with the PrimaryAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetPrimaryAddressOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryAddress) {
		return nil, false
	}
	return o.PrimaryAddress, true
}

// HasPrimaryAddress returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasPrimaryAddress() bool {
	if o != nil && !IsNil(o.PrimaryAddress) {
		return true
	}

	return false
}

// SetPrimaryAddress gets a reference to the given string and assigns it to the PrimaryAddress field.
func (o *GetInterfaces200ResponseDataInner) SetPrimaryAddress(v string) {
	o.PrimaryAddress = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetInterfaces200ResponseDataInner) GetLinks() ResourceLinks {
	if o == nil || IsNil(o.Links) {
		var ret ResourceLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInterfaces200ResponseDataInner) GetLinksOk() (*ResourceLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetInterfaces200ResponseDataInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ResourceLinks and assigns it to the Links field.
func (o *GetInterfaces200ResponseDataInner) SetLinks(v ResourceLinks) {
	o.Links = &v
}

func (o GetInterfaces200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInterfaces200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !IsNil(o.SecondaryAddress) {
		toSerialize["secondaryAddress"] = o.SecondaryAddress
	}
	if !IsNil(o.ManagementAddress) {
		toSerialize["managementAddress"] = o.ManagementAddress
	}
	if !IsNil(o.ServicesIpv4Address) {
		toSerialize["servicesIpv4Address"] = o.ServicesIpv4Address
	}
	if !IsNil(o.ServicesIpv4PrefixLength) {
		toSerialize["servicesIpv4PrefixLength"] = o.ServicesIpv4PrefixLength
	}
	if !IsNil(o.ServicesIpv6Address) {
		toSerialize["servicesIpv6Address"] = o.ServicesIpv6Address
	}
	if !IsNil(o.ServicesIpv6PrefixLength) {
		toSerialize["servicesIpv6PrefixLength"] = o.ServicesIpv6PrefixLength
	}
	if !IsNil(o.HaBackboneAddress) {
		toSerialize["haBackboneAddress"] = o.HaBackboneAddress
	}
	if !IsNil(o.HaBackbonePrefixLength) {
		toSerialize["haBackbonePrefixLength"] = o.HaBackbonePrefixLength
	}
	if !IsNil(o.RedundancyEnabled) {
		toSerialize["redundancyEnabled"] = o.RedundancyEnabled
	}
	if !IsNil(o.RedundancyScenario) {
		toSerialize["redundancyScenario"] = o.RedundancyScenario
	}
	if !IsNil(o.PrimaryAddress) {
		toSerialize["primaryAddress"] = o.PrimaryAddress
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetInterfaces200ResponseDataInner struct {
	value *GetInterfaces200ResponseDataInner
	isSet bool
}

func (v NullableGetInterfaces200ResponseDataInner) Get() *GetInterfaces200ResponseDataInner {
	return v.value
}

func (v *NullableGetInterfaces200ResponseDataInner) Set(val *GetInterfaces200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInterfaces200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInterfaces200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInterfaces200ResponseDataInner(val *GetInterfaces200ResponseDataInner) *NullableGetInterfaces200ResponseDataInner {
	return &NullableGetInterfaces200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetInterfaces200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInterfaces200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


