/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the IPv4TemplateApplication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IPv4TemplateApplication{}

// IPv4TemplateApplication struct for IPv4TemplateApplication
type IPv4TemplateApplication struct {
	TemplateApplication
	// The resource type.
	Type *string `json:"type,omitempty"`
	// Indicates whether deployment options set in the template are applied.
	DeploymentOptionsApplied *bool `json:"deploymentOptionsApplied,omitempty"`
	// Indicates whether the template settings for the gateway address are applied.
	GatewayItemApplied *bool `json:"gatewayItemApplied,omitempty"`
	// Indicates whether the reserved address ranges set in the template are applied.
	ReservedRangeItemsApplied *bool `json:"reservedRangeItemsApplied,omitempty"`
	// Indicates whether the DHCP reserved address ranges set in the template are applied.
	DhcpRangeItemsApplied *bool `json:"dhcpRangeItemsApplied,omitempty"`
	// Indicates whether the IP groups set in the template are applied.
	IpGroupItemsApplied *bool `json:"ipGroupItemsApplied,omitempty"`
	// Determines whether orphaned DHCP allocated IPv4 addresses are converted into another assignment type and the type of host record assigned to the orphaned record.
	OrphanedAddressConversionStrategy *string `json:"orphanedAddressConversionStrategy,omitempty"`
}

// NewIPv4TemplateApplication instantiates a new IPv4TemplateApplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPv4TemplateApplication() *IPv4TemplateApplication {
	this := IPv4TemplateApplication{}
	return &this
}

// NewIPv4TemplateApplicationWithDefaults instantiates a new IPv4TemplateApplication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPv4TemplateApplicationWithDefaults() *IPv4TemplateApplication {
	this := IPv4TemplateApplication{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IPv4TemplateApplication) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPv4TemplateApplication) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IPv4TemplateApplication) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IPv4TemplateApplication) SetType(v string) {
	o.Type = &v
}

// GetDeploymentOptionsApplied returns the DeploymentOptionsApplied field value if set, zero value otherwise.
func (o *IPv4TemplateApplication) GetDeploymentOptionsApplied() bool {
	if o == nil || IsNil(o.DeploymentOptionsApplied) {
		var ret bool
		return ret
	}
	return *o.DeploymentOptionsApplied
}

// GetDeploymentOptionsAppliedOk returns a tuple with the DeploymentOptionsApplied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPv4TemplateApplication) GetDeploymentOptionsAppliedOk() (*bool, bool) {
	if o == nil || IsNil(o.DeploymentOptionsApplied) {
		return nil, false
	}
	return o.DeploymentOptionsApplied, true
}

// HasDeploymentOptionsApplied returns a boolean if a field has been set.
func (o *IPv4TemplateApplication) HasDeploymentOptionsApplied() bool {
	if o != nil && !IsNil(o.DeploymentOptionsApplied) {
		return true
	}

	return false
}

// SetDeploymentOptionsApplied gets a reference to the given bool and assigns it to the DeploymentOptionsApplied field.
func (o *IPv4TemplateApplication) SetDeploymentOptionsApplied(v bool) {
	o.DeploymentOptionsApplied = &v
}

// GetGatewayItemApplied returns the GatewayItemApplied field value if set, zero value otherwise.
func (o *IPv4TemplateApplication) GetGatewayItemApplied() bool {
	if o == nil || IsNil(o.GatewayItemApplied) {
		var ret bool
		return ret
	}
	return *o.GatewayItemApplied
}

// GetGatewayItemAppliedOk returns a tuple with the GatewayItemApplied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPv4TemplateApplication) GetGatewayItemAppliedOk() (*bool, bool) {
	if o == nil || IsNil(o.GatewayItemApplied) {
		return nil, false
	}
	return o.GatewayItemApplied, true
}

// HasGatewayItemApplied returns a boolean if a field has been set.
func (o *IPv4TemplateApplication) HasGatewayItemApplied() bool {
	if o != nil && !IsNil(o.GatewayItemApplied) {
		return true
	}

	return false
}

// SetGatewayItemApplied gets a reference to the given bool and assigns it to the GatewayItemApplied field.
func (o *IPv4TemplateApplication) SetGatewayItemApplied(v bool) {
	o.GatewayItemApplied = &v
}

// GetReservedRangeItemsApplied returns the ReservedRangeItemsApplied field value if set, zero value otherwise.
func (o *IPv4TemplateApplication) GetReservedRangeItemsApplied() bool {
	if o == nil || IsNil(o.ReservedRangeItemsApplied) {
		var ret bool
		return ret
	}
	return *o.ReservedRangeItemsApplied
}

// GetReservedRangeItemsAppliedOk returns a tuple with the ReservedRangeItemsApplied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPv4TemplateApplication) GetReservedRangeItemsAppliedOk() (*bool, bool) {
	if o == nil || IsNil(o.ReservedRangeItemsApplied) {
		return nil, false
	}
	return o.ReservedRangeItemsApplied, true
}

// HasReservedRangeItemsApplied returns a boolean if a field has been set.
func (o *IPv4TemplateApplication) HasReservedRangeItemsApplied() bool {
	if o != nil && !IsNil(o.ReservedRangeItemsApplied) {
		return true
	}

	return false
}

// SetReservedRangeItemsApplied gets a reference to the given bool and assigns it to the ReservedRangeItemsApplied field.
func (o *IPv4TemplateApplication) SetReservedRangeItemsApplied(v bool) {
	o.ReservedRangeItemsApplied = &v
}

// GetDhcpRangeItemsApplied returns the DhcpRangeItemsApplied field value if set, zero value otherwise.
func (o *IPv4TemplateApplication) GetDhcpRangeItemsApplied() bool {
	if o == nil || IsNil(o.DhcpRangeItemsApplied) {
		var ret bool
		return ret
	}
	return *o.DhcpRangeItemsApplied
}

// GetDhcpRangeItemsAppliedOk returns a tuple with the DhcpRangeItemsApplied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPv4TemplateApplication) GetDhcpRangeItemsAppliedOk() (*bool, bool) {
	if o == nil || IsNil(o.DhcpRangeItemsApplied) {
		return nil, false
	}
	return o.DhcpRangeItemsApplied, true
}

// HasDhcpRangeItemsApplied returns a boolean if a field has been set.
func (o *IPv4TemplateApplication) HasDhcpRangeItemsApplied() bool {
	if o != nil && !IsNil(o.DhcpRangeItemsApplied) {
		return true
	}

	return false
}

// SetDhcpRangeItemsApplied gets a reference to the given bool and assigns it to the DhcpRangeItemsApplied field.
func (o *IPv4TemplateApplication) SetDhcpRangeItemsApplied(v bool) {
	o.DhcpRangeItemsApplied = &v
}

// GetIpGroupItemsApplied returns the IpGroupItemsApplied field value if set, zero value otherwise.
func (o *IPv4TemplateApplication) GetIpGroupItemsApplied() bool {
	if o == nil || IsNil(o.IpGroupItemsApplied) {
		var ret bool
		return ret
	}
	return *o.IpGroupItemsApplied
}

// GetIpGroupItemsAppliedOk returns a tuple with the IpGroupItemsApplied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPv4TemplateApplication) GetIpGroupItemsAppliedOk() (*bool, bool) {
	if o == nil || IsNil(o.IpGroupItemsApplied) {
		return nil, false
	}
	return o.IpGroupItemsApplied, true
}

// HasIpGroupItemsApplied returns a boolean if a field has been set.
func (o *IPv4TemplateApplication) HasIpGroupItemsApplied() bool {
	if o != nil && !IsNil(o.IpGroupItemsApplied) {
		return true
	}

	return false
}

// SetIpGroupItemsApplied gets a reference to the given bool and assigns it to the IpGroupItemsApplied field.
func (o *IPv4TemplateApplication) SetIpGroupItemsApplied(v bool) {
	o.IpGroupItemsApplied = &v
}

// GetOrphanedAddressConversionStrategy returns the OrphanedAddressConversionStrategy field value if set, zero value otherwise.
func (o *IPv4TemplateApplication) GetOrphanedAddressConversionStrategy() string {
	if o == nil || IsNil(o.OrphanedAddressConversionStrategy) {
		var ret string
		return ret
	}
	return *o.OrphanedAddressConversionStrategy
}

// GetOrphanedAddressConversionStrategyOk returns a tuple with the OrphanedAddressConversionStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPv4TemplateApplication) GetOrphanedAddressConversionStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.OrphanedAddressConversionStrategy) {
		return nil, false
	}
	return o.OrphanedAddressConversionStrategy, true
}

// HasOrphanedAddressConversionStrategy returns a boolean if a field has been set.
func (o *IPv4TemplateApplication) HasOrphanedAddressConversionStrategy() bool {
	if o != nil && !IsNil(o.OrphanedAddressConversionStrategy) {
		return true
	}

	return false
}

// SetOrphanedAddressConversionStrategy gets a reference to the given string and assigns it to the OrphanedAddressConversionStrategy field.
func (o *IPv4TemplateApplication) SetOrphanedAddressConversionStrategy(v string) {
	o.OrphanedAddressConversionStrategy = &v
}

func (o IPv4TemplateApplication) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IPv4TemplateApplication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.DeploymentOptionsApplied) {
		toSerialize["deploymentOptionsApplied"] = o.DeploymentOptionsApplied
	}
	if !IsNil(o.GatewayItemApplied) {
		toSerialize["gatewayItemApplied"] = o.GatewayItemApplied
	}
	if !IsNil(o.ReservedRangeItemsApplied) {
		toSerialize["reservedRangeItemsApplied"] = o.ReservedRangeItemsApplied
	}
	if !IsNil(o.DhcpRangeItemsApplied) {
		toSerialize["dhcpRangeItemsApplied"] = o.DhcpRangeItemsApplied
	}
	if !IsNil(o.IpGroupItemsApplied) {
		toSerialize["ipGroupItemsApplied"] = o.IpGroupItemsApplied
	}
	if !IsNil(o.OrphanedAddressConversionStrategy) {
		toSerialize["orphanedAddressConversionStrategy"] = o.OrphanedAddressConversionStrategy
	}
	return toSerialize, nil
}

type NullableIPv4TemplateApplication struct {
	value *IPv4TemplateApplication
	isSet bool
}

func (v NullableIPv4TemplateApplication) Get() *IPv4TemplateApplication {
	return v.value
}

func (v *NullableIPv4TemplateApplication) Set(val *IPv4TemplateApplication) {
	v.value = val
	v.isSet = true
}

func (v NullableIPv4TemplateApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableIPv4TemplateApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPv4TemplateApplication(val *IPv4TemplateApplication) *NullableIPv4TemplateApplication {
	return &NullableIPv4TemplateApplication{value: val, isSet: true}
}

func (v NullableIPv4TemplateApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPv4TemplateApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


