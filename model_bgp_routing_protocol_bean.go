/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the BgpRoutingProtocolBean type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpRoutingProtocolBean{}

// BgpRoutingProtocolBean struct for BgpRoutingProtocolBean
type BgpRoutingProtocolBean struct {
	RoutingProtocolBean
	AutonomousSystemNumber *int64 `json:"autonomousSystemNumber,omitempty"`
	RouterId *string `json:"routerId,omitempty"`
	CommandLineInterfaceEnabled *bool `json:"commandLineInterfaceEnabled,omitempty"`
	CommandLineInterfacePassword *string `json:"commandLineInterfacePassword,omitempty"`
	KeepAliveInterval *string `json:"keepAliveInterval,omitempty"`
	HoldTimeInterval *string `json:"holdTimeInterval,omitempty"`
	Neighbors []BgpNeighborBean `json:"neighbors,omitempty"`
	PrefixFilters []BgpPrefixFilterBean `json:"prefixFilters,omitempty"`
}

// NewBgpRoutingProtocolBean instantiates a new BgpRoutingProtocolBean object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpRoutingProtocolBean() *BgpRoutingProtocolBean {
	this := BgpRoutingProtocolBean{}
	return &this
}

// NewBgpRoutingProtocolBeanWithDefaults instantiates a new BgpRoutingProtocolBean object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpRoutingProtocolBeanWithDefaults() *BgpRoutingProtocolBean {
	this := BgpRoutingProtocolBean{}
	return &this
}

// GetAutonomousSystemNumber returns the AutonomousSystemNumber field value if set, zero value otherwise.
func (o *BgpRoutingProtocolBean) GetAutonomousSystemNumber() int64 {
	if o == nil || IsNil(o.AutonomousSystemNumber) {
		var ret int64
		return ret
	}
	return *o.AutonomousSystemNumber
}

// GetAutonomousSystemNumberOk returns a tuple with the AutonomousSystemNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRoutingProtocolBean) GetAutonomousSystemNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.AutonomousSystemNumber) {
		return nil, false
	}
	return o.AutonomousSystemNumber, true
}

// HasAutonomousSystemNumber returns a boolean if a field has been set.
func (o *BgpRoutingProtocolBean) HasAutonomousSystemNumber() bool {
	if o != nil && !IsNil(o.AutonomousSystemNumber) {
		return true
	}

	return false
}

// SetAutonomousSystemNumber gets a reference to the given int64 and assigns it to the AutonomousSystemNumber field.
func (o *BgpRoutingProtocolBean) SetAutonomousSystemNumber(v int64) {
	o.AutonomousSystemNumber = &v
}

// GetRouterId returns the RouterId field value if set, zero value otherwise.
func (o *BgpRoutingProtocolBean) GetRouterId() string {
	if o == nil || IsNil(o.RouterId) {
		var ret string
		return ret
	}
	return *o.RouterId
}

// GetRouterIdOk returns a tuple with the RouterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRoutingProtocolBean) GetRouterIdOk() (*string, bool) {
	if o == nil || IsNil(o.RouterId) {
		return nil, false
	}
	return o.RouterId, true
}

// HasRouterId returns a boolean if a field has been set.
func (o *BgpRoutingProtocolBean) HasRouterId() bool {
	if o != nil && !IsNil(o.RouterId) {
		return true
	}

	return false
}

// SetRouterId gets a reference to the given string and assigns it to the RouterId field.
func (o *BgpRoutingProtocolBean) SetRouterId(v string) {
	o.RouterId = &v
}

// GetCommandLineInterfaceEnabled returns the CommandLineInterfaceEnabled field value if set, zero value otherwise.
func (o *BgpRoutingProtocolBean) GetCommandLineInterfaceEnabled() bool {
	if o == nil || IsNil(o.CommandLineInterfaceEnabled) {
		var ret bool
		return ret
	}
	return *o.CommandLineInterfaceEnabled
}

// GetCommandLineInterfaceEnabledOk returns a tuple with the CommandLineInterfaceEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRoutingProtocolBean) GetCommandLineInterfaceEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CommandLineInterfaceEnabled) {
		return nil, false
	}
	return o.CommandLineInterfaceEnabled, true
}

// HasCommandLineInterfaceEnabled returns a boolean if a field has been set.
func (o *BgpRoutingProtocolBean) HasCommandLineInterfaceEnabled() bool {
	if o != nil && !IsNil(o.CommandLineInterfaceEnabled) {
		return true
	}

	return false
}

// SetCommandLineInterfaceEnabled gets a reference to the given bool and assigns it to the CommandLineInterfaceEnabled field.
func (o *BgpRoutingProtocolBean) SetCommandLineInterfaceEnabled(v bool) {
	o.CommandLineInterfaceEnabled = &v
}

// GetCommandLineInterfacePassword returns the CommandLineInterfacePassword field value if set, zero value otherwise.
func (o *BgpRoutingProtocolBean) GetCommandLineInterfacePassword() string {
	if o == nil || IsNil(o.CommandLineInterfacePassword) {
		var ret string
		return ret
	}
	return *o.CommandLineInterfacePassword
}

// GetCommandLineInterfacePasswordOk returns a tuple with the CommandLineInterfacePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRoutingProtocolBean) GetCommandLineInterfacePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.CommandLineInterfacePassword) {
		return nil, false
	}
	return o.CommandLineInterfacePassword, true
}

// HasCommandLineInterfacePassword returns a boolean if a field has been set.
func (o *BgpRoutingProtocolBean) HasCommandLineInterfacePassword() bool {
	if o != nil && !IsNil(o.CommandLineInterfacePassword) {
		return true
	}

	return false
}

// SetCommandLineInterfacePassword gets a reference to the given string and assigns it to the CommandLineInterfacePassword field.
func (o *BgpRoutingProtocolBean) SetCommandLineInterfacePassword(v string) {
	o.CommandLineInterfacePassword = &v
}

// GetKeepAliveInterval returns the KeepAliveInterval field value if set, zero value otherwise.
func (o *BgpRoutingProtocolBean) GetKeepAliveInterval() string {
	if o == nil || IsNil(o.KeepAliveInterval) {
		var ret string
		return ret
	}
	return *o.KeepAliveInterval
}

// GetKeepAliveIntervalOk returns a tuple with the KeepAliveInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRoutingProtocolBean) GetKeepAliveIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.KeepAliveInterval) {
		return nil, false
	}
	return o.KeepAliveInterval, true
}

// HasKeepAliveInterval returns a boolean if a field has been set.
func (o *BgpRoutingProtocolBean) HasKeepAliveInterval() bool {
	if o != nil && !IsNil(o.KeepAliveInterval) {
		return true
	}

	return false
}

// SetKeepAliveInterval gets a reference to the given string and assigns it to the KeepAliveInterval field.
func (o *BgpRoutingProtocolBean) SetKeepAliveInterval(v string) {
	o.KeepAliveInterval = &v
}

// GetHoldTimeInterval returns the HoldTimeInterval field value if set, zero value otherwise.
func (o *BgpRoutingProtocolBean) GetHoldTimeInterval() string {
	if o == nil || IsNil(o.HoldTimeInterval) {
		var ret string
		return ret
	}
	return *o.HoldTimeInterval
}

// GetHoldTimeIntervalOk returns a tuple with the HoldTimeInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRoutingProtocolBean) GetHoldTimeIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.HoldTimeInterval) {
		return nil, false
	}
	return o.HoldTimeInterval, true
}

// HasHoldTimeInterval returns a boolean if a field has been set.
func (o *BgpRoutingProtocolBean) HasHoldTimeInterval() bool {
	if o != nil && !IsNil(o.HoldTimeInterval) {
		return true
	}

	return false
}

// SetHoldTimeInterval gets a reference to the given string and assigns it to the HoldTimeInterval field.
func (o *BgpRoutingProtocolBean) SetHoldTimeInterval(v string) {
	o.HoldTimeInterval = &v
}

// GetNeighbors returns the Neighbors field value if set, zero value otherwise.
func (o *BgpRoutingProtocolBean) GetNeighbors() []BgpNeighborBean {
	if o == nil || IsNil(o.Neighbors) {
		var ret []BgpNeighborBean
		return ret
	}
	return o.Neighbors
}

// GetNeighborsOk returns a tuple with the Neighbors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRoutingProtocolBean) GetNeighborsOk() ([]BgpNeighborBean, bool) {
	if o == nil || IsNil(o.Neighbors) {
		return nil, false
	}
	return o.Neighbors, true
}

// HasNeighbors returns a boolean if a field has been set.
func (o *BgpRoutingProtocolBean) HasNeighbors() bool {
	if o != nil && !IsNil(o.Neighbors) {
		return true
	}

	return false
}

// SetNeighbors gets a reference to the given []BgpNeighborBean and assigns it to the Neighbors field.
func (o *BgpRoutingProtocolBean) SetNeighbors(v []BgpNeighborBean) {
	o.Neighbors = v
}

// GetPrefixFilters returns the PrefixFilters field value if set, zero value otherwise.
func (o *BgpRoutingProtocolBean) GetPrefixFilters() []BgpPrefixFilterBean {
	if o == nil || IsNil(o.PrefixFilters) {
		var ret []BgpPrefixFilterBean
		return ret
	}
	return o.PrefixFilters
}

// GetPrefixFiltersOk returns a tuple with the PrefixFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpRoutingProtocolBean) GetPrefixFiltersOk() ([]BgpPrefixFilterBean, bool) {
	if o == nil || IsNil(o.PrefixFilters) {
		return nil, false
	}
	return o.PrefixFilters, true
}

// HasPrefixFilters returns a boolean if a field has been set.
func (o *BgpRoutingProtocolBean) HasPrefixFilters() bool {
	if o != nil && !IsNil(o.PrefixFilters) {
		return true
	}

	return false
}

// SetPrefixFilters gets a reference to the given []BgpPrefixFilterBean and assigns it to the PrefixFilters field.
func (o *BgpRoutingProtocolBean) SetPrefixFilters(v []BgpPrefixFilterBean) {
	o.PrefixFilters = v
}

func (o BgpRoutingProtocolBean) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpRoutingProtocolBean) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutonomousSystemNumber) {
		toSerialize["autonomousSystemNumber"] = o.AutonomousSystemNumber
	}
	if !IsNil(o.RouterId) {
		toSerialize["routerId"] = o.RouterId
	}
	if !IsNil(o.CommandLineInterfaceEnabled) {
		toSerialize["commandLineInterfaceEnabled"] = o.CommandLineInterfaceEnabled
	}
	if !IsNil(o.CommandLineInterfacePassword) {
		toSerialize["commandLineInterfacePassword"] = o.CommandLineInterfacePassword
	}
	if !IsNil(o.KeepAliveInterval) {
		toSerialize["keepAliveInterval"] = o.KeepAliveInterval
	}
	if !IsNil(o.HoldTimeInterval) {
		toSerialize["holdTimeInterval"] = o.HoldTimeInterval
	}
	if !IsNil(o.Neighbors) {
		toSerialize["neighbors"] = o.Neighbors
	}
	if !IsNil(o.PrefixFilters) {
		toSerialize["prefixFilters"] = o.PrefixFilters
	}
	return toSerialize, nil
}

type NullableBgpRoutingProtocolBean struct {
	value *BgpRoutingProtocolBean
	isSet bool
}

func (v NullableBgpRoutingProtocolBean) Get() *BgpRoutingProtocolBean {
	return v.value
}

func (v *NullableBgpRoutingProtocolBean) Set(val *BgpRoutingProtocolBean) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpRoutingProtocolBean) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpRoutingProtocolBean) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpRoutingProtocolBean(val *BgpRoutingProtocolBean) *NullableBgpRoutingProtocolBean {
	return &NullableBgpRoutingProtocolBean{value: val, isSet: true}
}

func (v NullableBgpRoutingProtocolBean) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpRoutingProtocolBean) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


