openapi: 3.0.1
info:
  contact:
    name: BlueCat Customer Care
    url: https://care.bluecatnetworks.com/
  description: |-
    The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.

    The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.

    To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:

    ```{"username":"apiuser", "password":"apipass"}```

    The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:

    ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```

    For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.
  license:
    name: BlueCat License Agreements
    url: https://bluecatnetworks.com/license-agreements/
  termsOfService: https://docs.bluecatnetworks.com/r/Terms-and-Conditions/Terms-and-Conditions
  title: BlueCat Address Manager 9.5 RESTful v2 API
  version: 9.5.0
servers:
- url: /
security:
- basicAuthentication: []
- bearerToken: []
tags:
- description: Operations for access control lists and match elements.
  name: ACL Resources
- description: "Operations for access rights, authenticators, databases, events, groups,\
    \ operations, password policies, sessions, settings, signing policies, transactions,\
    \ trust relationships, user-defined field definitions, user-defined links, users,\
    \ and workflow requests."
  name: Admin Resources
- description: Operations for configurations.
  name: Configuration Resources
- description: Operations for deployment options and deployment option definitions.
  name: Deployment Option Resources
- description: Operations for deployment roles.
  name: Deployment Role Resources
- description: "Operations for devices, device subtypes, and device types."
  name: Device Resources
- description: Operations for DHCP client classes and subclasses.
  name: DHCP Client Class Resources
- description: Operations for DHCP zone groups and zone declarations.
  name: DHCP Zone Resources
- description: Operations for DNSSEC policies and signing key management.
  name: DNSSEC Resources
- description: Operations for favorites.
  name: Favorite Resources
- description: "Operations for addresses, applied resources, blocks, conflicting resources,\
    \ discovered devices, IP groups, leases, merges, moves, networks, ranges, reconciliation\
    \ policies, templates, and template items."
  name: IPv4 and IPv6 Resources
- description: Operations for Kerberos realms and service principals.
  name: Kerberos Resources
- description: Operations for annotated resources and locations
  name: Location Resources
- description: Operations for MAC addresses and pools.
  name: MAC Address and Client Identifier Resources
- description: Operations for resource record and deployment option naming policies.
  name: Naming Policy Resources
- description: Operations for resource records.
  name: Resource Record Resources
- description: "Operations for deployments, interfaces, moves, servers, server groups,\
    \ and template applications."
  name: Server Resources
- description: "Operations for tags, tag groups, and tagged resources."
  name: Tag Resources
- description: Operations for user tasks.
  name: Task Resources
- description: Operations for TFTP groups and files.
  name: TFTP Resources
- description: Operations for TSIG signing keys.
  name: TSIG Key Resources
- description: Operations for deployment option definitions and vendor profiles.
  name: Vendor Profile Resources
- description: "Operations for applied resources, default zones, moves, policy items,\
    \ response policies, restricted zones, templates, views, and zones."
  name: View and Zone Resources
paths:
  /api/v2/accessControlLists:
    get:
      description: Retrieve a collection of all DNS access control lists.
      operationId: getAccessControlLists
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAccessControlLists_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getAccessControlLists_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of access control lists
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of access control lists
      tags:
      - ACL Resources
  /api/v2/accessControlLists/{id}:
    delete:
      description: Delete an existing DNS access control list.
      operationId: deleteAccessControlList
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete an access control list
      tags:
      - ACL Resources
    get:
      description: Retrieve information about a DNS access control list.
      operationId: getAccessControlList
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAccessControlLists_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ACL'
            text/html:
              schema:
                type: string
          description: An access control list
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single access control list
      tags:
      - ACL Resources
    put:
      description: Update an existing DNS access control list.
      operationId: putAccessControlList
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ACLPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/ACLPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAccessControlLists_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ACL'
          description: The updated access control list
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update an access control list
      tags:
      - ACL Resources
  /api/v2/configurations/{collectionId}/accessControlLists:
    get:
      description: Retrieve a collection of all DNS access control lists within a
        configuration.
      operationId: getConfigurationAccessControlLists
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAccessControlLists_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getAccessControlLists_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of access control lists
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of access control lists
      tags:
      - ACL Resources
    post:
      description: "Create a new DNS access control list. Access control lists (ACLs)\
        \ provide granular control over which hosts may perform certain operations\
        \ on the name server. In particular, they're used for restricting zone transfers,\
        \ notifications, and DDNS updates. Address Manager provides DNS ACL support\
        \ by allowing you to create and manage ACLs in Address Manager. You can repurpose\
        \ ACLs across multiple DNS Views."
      operationId: postConfigurationAccessControlList
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              accessControlListExampleAllMatchElements:
                $ref: '#/components/examples/accessControlListExampleAllMatchElements'
            schema:
              $ref: '#/components/schemas/ACLPostRequestBody'
          application/json:
            examples:
              accessControlListExampleAllMatchElements:
                $ref: '#/components/examples/accessControlListExampleAllMatchElements'
            schema:
              $ref: '#/components/schemas/ACLPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAccessControlLists_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ACL'
          description: The newly created access control list
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new access control list
      tags:
      - ACL Resources
  /api/v2/accessRights:
    get:
      description: Retrieve the access rights of objects that are part of a collection.
      operationId: getAccessRights
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAccessRights_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getAccessRights_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of access rights
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of access rights
      tags:
      - Admin Resources
    post:
      description: Add an access rights to a specific object.
      operationId: postAccessRight
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              accessRightExampleDefault:
                $ref: '#/components/examples/accessRightExampleDefault'
              accessRightExampleWithOwner:
                $ref: '#/components/examples/accessRightExampleWithOwner'
            schema:
              $ref: '#/components/schemas/AccessRightPostRequestBody'
          application/json:
            examples:
              accessRightExampleDefault:
                $ref: '#/components/examples/accessRightExampleDefault'
              accessRightExampleWithOwner:
                $ref: '#/components/examples/accessRightExampleWithOwner'
            schema:
              $ref: '#/components/schemas/AccessRightPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAccessRights_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRight'
          description: The newly created access right.
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new access right
      tags:
      - Admin Resources
  /api/v2/accessRights/{id}:
    delete:
      description: Delete access rights for a specified object.
      operationId: deleteAccessRight
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete an access right
      tags:
      - Admin Resources
    get:
      description: Retrieve an access right for a specific object.
      operationId: getAccessRight
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAccessRights_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRight'
            text/html:
              schema:
                type: string
          description: An access right
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single access right
      tags:
      - Admin Resources
    put:
      description: Update access rights for a specified object.
      operationId: putAccessRight
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AccessRightPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRightPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAccessRights_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/AccessRight'
          description: The updated access right
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update an access right
      tags:
      - Admin Resources
  /api/v2/{collection}/{collectionId}/accessRights:
    get:
      description: Retrieve access rights applied to a resource.
      operationId: getCollectionAccessRights
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - accessControlLists
          - addresses
          - authenticators
          - blocks
          - clientClasses
          - clientIdentifiers
          - configurations
          - deploymentOptionDefinitions
          - deploymentOptions
          - deploymentRoles
          - deviceSubtypes
          - deviceTypes
          - devices
          - dns64
          - files
          - groups
          - hsmConfigurations
          - hsmServers
          - interfaces
          - ipGroups
          - keyDistributionCenters
          - locations
          - macAddresses
          - macPools
          - networks
          - notificationGroups
          - ranges
          - realms
          - reconciliationPolicies
          - reports
          - resourceRecords
          - responsePolicies
          - schedules
          - serverGroups
          - servers
          - servicePrincipals
          - signingKeys
          - signingPolicies
          - subclasses
          - tagGroups
          - tags
          - templates
          - tftpGroups
          - users
          - vendorProfiles
          - views
          - zoneDeclarations
          - zoneGroups
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAccessRights_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getAccessRights_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of access rights
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of access rights
      tags:
      - Admin Resources
  /api/v2/deployments/{collectionId}/addedRecords:
    get:
      description: Retrieve a list of all resource records added by a specified selective
        deployment.
      operationId: getDeploymentAddedRecords
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentAddedRecords_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentAddedRecords_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of resource records
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of resource records
      tags:
      - Resource Record Resources
  /api/v2/deployments/{collectionId}/addedRecords/{id}:
    get:
      description: Retrieve a specific resource record added by a deployment.
      operationId: getDeploymentAddedRecord
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentAddedRecords_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRecord'
            text/html:
              schema:
                type: string
          description: A resource record
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single resource record
      tags:
      - Resource Record Resources
  /api/v2/addresses:
    get:
      description: Retrieve a collection of all assigned IPv4/IPv6 addresses for all
        networks and configurations.
      operationId: getAddresses
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of addresses
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of addresses
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/addresses/{id}:
    delete:
      description: Delete an IPv4/IPv6 address.
      operationId: deleteAddress
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete an address
      tags:
      - IPv4 and IPv6 Resources
    get:
      description: Retrieve a single IPv4/IPv6 address.
      operationId: getAddress
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: An address
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single address
      tags:
      - IPv4 and IPv6 Resources
    put:
      description: Update an IPv4/IPv6 address.
      operationId: putAddress
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putAddress_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putAddress_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_1_data_inner'
          description: The updated address
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update an address
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/{collection}/{collectionId}/addresses:
    get:
      description: Retrieve a collection of all IPv4 and/or IPv6 addresses linked
        to a resource.
      operationId: getCollectionAddresses
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - clientIdentifiers
          - devices
          - macAddresses
          - networks
          - resourceRecords
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of linked addresss
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of linked addresss
      tags:
      - IPv4 and IPv6 Resources
    post:
      description: Link an IPv4/IPv6 address to a resource.
      operationId: postCollectionAddress
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - clientIdentifiers
          - devices
          - macAddresses
          - networks
          - resourceRecords
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/postCollectionAddress_request'
          application/json:
            schema:
              $ref: '#/components/schemas/postCollectionAddress_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_1_data_inner'
          description: The linked address
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Link an address to a resource
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/networks/{collectionId}/addresses:
    get:
      description: Retrieve a collection of all addresses (assigned and unassigned)
        for a network.
      operationId: getNetworkAddresses
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of addresses
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of addresses
      tags:
      - IPv4 and IPv6 Resources
    post:
      description: Assign an IPv4/IPv6 address in a network.
      operationId: postNetworkAddress
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              addressExampleStaticIpv4:
                $ref: '#/components/examples/addressExampleStaticIpv4'
              addressExampleNextStaticIpv4:
                $ref: '#/components/examples/addressExampleNextStaticIpv4'
              addressExampleDhcpReservedIpv4:
                $ref: '#/components/examples/addressExampleDhcpReservedIpv4'
              addressExampleDhcpReservedIpv4WithMacPool:
                $ref: '#/components/examples/addressExampleDhcpReservedIpv4WithMacPool'
              addressExampleStaticIpv6:
                $ref: '#/components/examples/addressExampleStaticIpv6'
              addressExampleStaticIpv6FromMac:
                $ref: '#/components/examples/addressExampleStaticIpv6FromMac'
              addressExampleMacDhcpReservedIpv6:
                $ref: '#/components/examples/addressExampleMacDhcpReservedIpv6'
              addressExampleDuidDhcpReservedIpv6:
                $ref: '#/components/examples/addressExampleDuidDhcpReservedIpv6'
            schema:
              $ref: '#/components/schemas/postNetworkAddress_request'
          application/json:
            examples:
              addressExampleStaticIpv4:
                $ref: '#/components/examples/addressExampleStaticIpv4'
              addressExampleNextStaticIpv4:
                $ref: '#/components/examples/addressExampleNextStaticIpv4'
              addressExampleDhcpReservedIpv4:
                $ref: '#/components/examples/addressExampleDhcpReservedIpv4'
              addressExampleDhcpReservedIpv4WithMacPool:
                $ref: '#/components/examples/addressExampleDhcpReservedIpv4WithMacPool'
              addressExampleStaticIpv6:
                $ref: '#/components/examples/addressExampleStaticIpv6'
              addressExampleStaticIpv6FromMac:
                $ref: '#/components/examples/addressExampleStaticIpv6FromMac'
              addressExampleMacDhcpReservedIpv6:
                $ref: '#/components/examples/addressExampleMacDhcpReservedIpv6'
              addressExampleDuidDhcpReservedIpv6:
                $ref: '#/components/examples/addressExampleDuidDhcpReservedIpv6'
            schema:
              $ref: '#/components/schemas/postNetworkAddress_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_1_data_inner'
          description: The newly created address
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new address
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/{collection}/{collectionId}/addresses/{id}:
    delete:
      description: Unlink an IPv4/IPv6 address from a resource.
      operationId: deleteCollectionAddress
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - clientIdentifiers
          - devices
          - macAddresses
          - networks
          - resourceRecords
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Unlink an address from a resource
      tags:
      - IPv4 and IPv6 Resources
    get:
      description: Retrieve a single IPv4/IPv6 address linked to a resource.
      operationId: getCollectionAddress
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - clientIdentifiers
          - devices
          - macAddresses
          - networks
          - resourceRecords
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getAddresses_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A linked address
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single linked address
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/locations/{collectionId}/annotatedResources:
    get:
      description: Retrieve a collection of all resources that have been annotated
        with a location.
      operationId: getLocationAnnotatedResources
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of location annotated resources
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of location annotated resources
      tags:
      - Location Resources
    post:
      description: "Annotate a resource with a location. IP blocks, networks, addresses,\
        \ and server resources can be annotated with locations. You can annotate multiple\
        \ objects with the same location. "
      operationId: postLocationAnnotatedResource
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LinkedResourcePostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedResourcePostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResource'
          description: The newly annotated resources
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Annotate a resource with a location
      tags:
      - Location Resources
  /api/v2/locations/{collectionId}/annotatedResources/{id}:
    delete:
      description: Remove a location annotation from a resource.
      operationId: deleteLocationAnnotatedResource
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Remove a location annotation from a resource
      tags:
      - Location Resources
    get:
      description: Retrieve information about a resource that has been annotated with
        a location.
      operationId: getLocationAnnotatedResource
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResource'
            text/html:
              schema:
                type: string
          description: An annotated resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a location annotated resource
      tags:
      - Location Resources
  /api/v2/{collection}/{collectionId}/appliedResources:
    get:
      description: Retrieve a list of all resources that have a DNSSEC signing policy
        or DNS zone template applied.
      operationId: getCollectionAppliedResources
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - namingPolicies
          - signingPolicies
          - templates
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of applied resources
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of applied resources
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
    post:
      description: Apply a specific DNSSEC signing policy or DNS zone template to
        a resource.
      operationId: postCollectionAppliedResource
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - namingPolicies
          - signingPolicies
          - templates
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LinkedResourcePostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedResourcePostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResource'
          description: The newly applied resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Apply a template or policy to a resource
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
  /api/v2/{collection}/{collectionId}/appliedResources/{id}:
    delete:
      description: Remove a specific DNSSEC signing policy or DNS zone template from
        a resource.
      operationId: deleteCollectionAppliedResource
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - namingPolicies
          - signingPolicies
          - templates
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Remove a template or policy application from a resource
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
    get:
      description: Retrieve information about a resource that has a specific DNSSEC
        signing policy or DNS zone template applied.
      operationId: getCollectionAppliedResource
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - namingPolicies
          - signingPolicies
          - templates
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResource'
            text/html:
              schema:
                type: string
          description: An applied resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve an applied resource
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
  /api/v2/authenticators:
    get:
      description: Retrieve a list of authenticators configured with Address Manager.
      operationId: getAuthenticators
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAuthenticators_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getAuthenticators_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of authenticators
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of authenticators
      tags:
      - Admin Resources
    post:
      description: "Configure an authenticator to authenticate sessions with Address\
        \ Manager. Address Manager supports authentication through RADIUS, TACACS+,\
        \ LDAP, Microsoft Active Directory, and Kerberos."
      operationId: postAuthenticator
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              authenticatorExampleKerberos:
                $ref: '#/components/examples/authenticatorExampleKerberos'
              authenticatorExampleLdap:
                $ref: '#/components/examples/authenticatorExampleLdap'
              authenticatorExampleOauth:
                $ref: '#/components/examples/authenticatorExampleOauth'
              authenticatorExampleRadius:
                $ref: '#/components/examples/authenticatorExampleRadius'
              authenticatorExampleSamlIdentityProvider:
                $ref: '#/components/examples/authenticatorExampleSamlIdentityProvider'
              authenticatorExampleTacacsPlus:
                $ref: '#/components/examples/authenticatorExampleTacacsPlus'
            schema:
              $ref: '#/components/schemas/postAuthenticator_request'
          application/json:
            examples:
              authenticatorExampleKerberos:
                $ref: '#/components/examples/authenticatorExampleKerberos'
              authenticatorExampleLdap:
                $ref: '#/components/examples/authenticatorExampleLdap'
              authenticatorExampleOauth:
                $ref: '#/components/examples/authenticatorExampleOauth'
              authenticatorExampleRadius:
                $ref: '#/components/examples/authenticatorExampleRadius'
              authenticatorExampleSamlIdentityProvider:
                $ref: '#/components/examples/authenticatorExampleSamlIdentityProvider'
              authenticatorExampleTacacsPlus:
                $ref: '#/components/examples/authenticatorExampleTacacsPlus'
            schema:
              $ref: '#/components/schemas/postAuthenticator_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/postAuthenticator_201_response'
            application/json:
              schema:
                $ref: '#/components/schemas/postAuthenticator_201_response_1'
          description: The newly created authenticator
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Configure a new authenticator
      tags:
      - Admin Resources
  /api/v2/authenticators/{id}:
    delete:
      description: Delete an authenticator configured with Address Manager.
      operationId: deleteAuthenticator
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete an authenticator
      tags:
      - Admin Resources
    get:
      description: Retrieve information about a single authenticator configured with
        Address Manager.
      operationId: getAuthenticator
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getAuthenticators_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getAuthenticators_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: An authenticator
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single authenticator
      tags:
      - Admin Resources
    put:
      description: Update an authenticator configured with Address Manager.
      operationId: putAuthenticator
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putAuthenticator_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putAuthenticator_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/postAuthenticator_201_response'
            application/json:
              schema:
                $ref: '#/components/schemas/postAuthenticator_201_response_1'
          description: The updated authenticator
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update an authenticator
      tags:
      - Admin Resources
  /api/v2/blocks:
    get:
      description: Retrieve a collection of all IPv4/IPv6 blocks and sub blocks for
        all configurations.
      operationId: getBlocks
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of blocks
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of blocks
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/blocks/{id}:
    delete:
      description: Delete an IPv4/IPv6 block.
      operationId: deleteBlock
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a block
      tags:
      - IPv4 and IPv6 Resources
    get:
      description: Retrieve a single IPv4/IPv6 block.
      operationId: getBlock
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A block
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single block
      tags:
      - IPv4 and IPv6 Resources
    put:
      description: Update an IPv4/IPv6 block.
      operationId: putBlock
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putBlock_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putBlock_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_1_data_inner'
          description: The updated block
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a block
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/blocks/{collectionId}/blocks:
    get:
      description: "Retrieve a collection of all sub blocks for an IPv4/IPv6 block.\
        \ Only immediate sub blocks are returned, sub blocks of sub blocks are not\
        \ included in the response."
      operationId: getBlockBlocks
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of blocks
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of blocks
      tags:
      - IPv4 and IPv6 Resources
    post:
      description: Create a new IPv4/IPv6 sub block within a parent block.
      operationId: postBlockBlock
      parameters:
      - description: |-
          The algorithm used to determine the starting address of the block when only a size was provided for the `range` value. If no header value is supplied, `NO_TRAVERSAL` will be used by default.
          - `NO_TRAVERSAL`: Attempt to find the available space directly under the specified parent block.
          - `DEPTH_FIRST`: Attempt to find the available space by recursively searching the parent block's children.
          - `BREADTH_FIRST`: Attempt to find the available space by iteratively searching each level of the block's children
        explode: false
        in: header
        name: x-bcn-traversal-method
        required: false
        schema:
          enum:
          - NO_TRAVERSAL
          - DEPTH_FIRST
          - BREADTH_FIRST
          type: string
        style: simple
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              blockExampleIpv4Cidr:
                $ref: '#/components/examples/blockExampleIpv4Cidr'
              blockExampleIpv4StartAddressAndNetmask:
                $ref: '#/components/examples/blockExampleIpv4StartAddressAndNetmask'
              blockExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/blockExampleIpv4StartAndEndAddress'
              blockExampleIpv4NextAvailable:
                $ref: '#/components/examples/blockExampleIpv4NextAvailable'
            schema:
              $ref: '#/components/schemas/postBlockBlock_request'
          application/json:
            examples:
              blockExampleIpv4Cidr:
                $ref: '#/components/examples/blockExampleIpv4Cidr'
              blockExampleIpv4StartAddressAndNetmask:
                $ref: '#/components/examples/blockExampleIpv4StartAddressAndNetmask'
              blockExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/blockExampleIpv4StartAndEndAddress'
              blockExampleIpv4NextAvailable:
                $ref: '#/components/examples/blockExampleIpv4NextAvailable'
            schema:
              $ref: '#/components/schemas/postBlockBlock_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_1_data_inner'
          description: The newly created block
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new block
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/configurations/{collectionId}/blocks:
    get:
      description: Retrieve a collection of all top-level IPv4/IPv6 blocks for a configuration.
        Sub blocks are not included in the response.
      operationId: getConfigurationBlocks
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of blocks
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of blocks
      tags:
      - IPv4 and IPv6 Resources
    post:
      description: Create a new top-level IPv4 block for a configuration.
      operationId: postConfigurationBlock
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              blockExampleIpv4Cidr:
                $ref: '#/components/examples/blockExampleIpv4Cidr'
              blockExampleIpv4StartAddressAndNetmask:
                $ref: '#/components/examples/blockExampleIpv4StartAddressAndNetmask'
              blockExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/blockExampleIpv4StartAndEndAddress'
            schema:
              $ref: '#/components/schemas/IPv4BlockPostRequestBody'
          application/json:
            examples:
              blockExampleIpv4Cidr:
                $ref: '#/components/examples/blockExampleIpv4Cidr'
              blockExampleIpv4StartAddressAndNetmask:
                $ref: '#/components/examples/blockExampleIpv4StartAddressAndNetmask'
              blockExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/blockExampleIpv4StartAndEndAddress'
            schema:
              $ref: '#/components/schemas/IPv4BlockPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/postConfigurationBlock_201_response'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4Block'
          description: The newly created block
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new block
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/merges/{collectionId}/blocks:
    get:
      description: Retrieve a collection of merged IPv4 blocks.
      operationId: getMergeBlocks
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of merged blocks
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of merged block
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/splits/{collectionId}/blocks:
    get:
      description: Retrieve a collection of IPv4 or IPv6 block partitions.
      operationId: getSplitBlocks
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of block partitions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of block partitions
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/merges/{collectionId}/blocks/{id}:
    get:
      description: Retrieve a merged IPv4 block.
      operationId: getMergeBlock
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A merged block
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single merged block
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/splits/{collectionId}/blocks/{id}:
    get:
      description: Retrieve an IPv4 or IPv6 block split.
      operationId: getSplitBlock
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getBlocks_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A block partition
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single block partition
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/clientClasses:
    get:
      description: Retrieve a collection of all DHCP client classes for all configurations.
      operationId: getClientClasses
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getClientClasses_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getClientClasses_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of client classes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of client classes
      tags:
      - DHCP Client Class Resources
  /api/v2/clientClasses/{id}:
    delete:
      description: Delete a DHCP client class.
      operationId: deleteClientClass
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a client class
      tags:
      - DHCP Client Class Resources
    get:
      description: Retrieve a single DHCP client class.
      operationId: getClientClass
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getClientClasses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4ClientClass'
            text/html:
              schema:
                type: string
          description: A client class
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single client class
      tags:
      - DHCP Client Class Resources
    put:
      description: Update a DHCP client class.
      operationId: putClientClass
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPv4ClientClassPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPv4ClientClassPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getClientClasses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4ClientClass'
          description: The updated client class
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a client class
      tags:
      - DHCP Client Class Resources
  /api/v2/configurations/{collectionId}/clientClasses:
    get:
      description: Retrieve a collection of all DHCP client classes for a configuration.
      operationId: getConfigurationClientClasses
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getClientClasses_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getClientClasses_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of client classes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of client classes
      tags:
      - DHCP Client Class Resources
    post:
      description: Create a new DHCP client class for a configuration.
      operationId: postConfigurationClientClass
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              clientClassExampleHardware:
                $ref: '#/components/examples/clientClassExampleHardware'
              clientClassExampleClientIdentifier:
                $ref: '#/components/examples/clientClassExampleClientIdentifier'
              clientClassExampleVendorClassIdentifier:
                $ref: '#/components/examples/clientClassExampleVendorClassIdentifier'
              clientClassExampleRemoteId:
                $ref: '#/components/examples/clientClassExampleRemoteId'
              clientClassExampleCustomMatch:
                $ref: '#/components/examples/clientClassExampleCustomMatch'
              clientClassExampleCustomMatchIf:
                $ref: '#/components/examples/clientClassExampleCustomMatchIf'
            schema:
              $ref: '#/components/schemas/DHCPv4ClientClassPostRequestBody'
          application/json:
            examples:
              clientClassExampleHardware:
                $ref: '#/components/examples/clientClassExampleHardware'
              clientClassExampleClientIdentifier:
                $ref: '#/components/examples/clientClassExampleClientIdentifier'
              clientClassExampleVendorClassIdentifier:
                $ref: '#/components/examples/clientClassExampleVendorClassIdentifier'
              clientClassExampleRemoteId:
                $ref: '#/components/examples/clientClassExampleRemoteId'
              clientClassExampleCustomMatch:
                $ref: '#/components/examples/clientClassExampleCustomMatch'
              clientClassExampleCustomMatchIf:
                $ref: '#/components/examples/clientClassExampleCustomMatchIf'
            schema:
              $ref: '#/components/schemas/DHCPv4ClientClassPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getClientClasses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4ClientClass'
          description: The newly created client class
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new client class
      tags:
      - DHCP Client Class Resources
  /api/v2/clientIdentifiers:
    get:
      description: Retrieve a collection of all DHCP client and unique identifiers.
      operationId: getClientIdentifiers
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getClientIdentifiers_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getClientIdentifiers_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of client identifiers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of client identifiers
      tags:
      - MAC Address and Client Identifier Resources
  /api/v2/clientIdentifiers/{id}:
    get:
      description: Retrieve information about a DHCP client or unique identifier.
      operationId: getClientIdentifier
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getClientIdentifiers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getClientIdentifiers_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A client identifier
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single client identifier
      tags:
      - MAC Address and Client Identifier Resources
  /api/v2/configurations/{collectionId}/clientIdentifiers:
    get:
      description: Retrieve a list of DHCP client and unique identifiers within a
        configuration.
      operationId: getConfigurationClientIdentifiers
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getClientIdentifiers_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getClientIdentifiers_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of client identifiers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of client identifiers
      tags:
      - MAC Address and Client Identifier Resources
  /api/v2/configurations:
    get:
      description: Retrieve information about a collection of configurations.
      operationId: getConfigurations
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getConfigurations_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getConfigurations_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of configurations
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of configurations
      tags:
      - Configuration Resources
    post:
      description: Create a new Address Manager configuration.
      operationId: postConfiguration
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              configurationExampleRequiredFields:
                $ref: '#/components/examples/configurationExampleRequiredFields'
              configurationExampleOptionalFields:
                $ref: '#/components/examples/configurationExampleOptionalFields'
            schema:
              $ref: '#/components/schemas/ConfigurationPostRequestBody'
          application/json:
            examples:
              configurationExampleRequiredFields:
                $ref: '#/components/examples/configurationExampleRequiredFields'
              configurationExampleOptionalFields:
                $ref: '#/components/examples/configurationExampleOptionalFields'
            schema:
              $ref: '#/components/schemas/ConfigurationPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getConfigurations_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
          description: The newly created configuration
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new configuration
      tags:
      - Configuration Resources
  /api/v2/configurations/{id}:
    delete:
      description: Delete an existing configuration.
      operationId: deleteConfiguration
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a configuration
      tags:
      - Configuration Resources
    get:
      description: Retrieve information about a configuration.
      operationId: getConfiguration
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getConfigurations_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
            text/html:
              schema:
                type: string
          description: A configuration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single configuration
      tags:
      - Configuration Resources
    put:
      description: "Update information of an existing configuration including the\
        \ name, description, configuration group, and associated shared network tag\
        \ group."
      operationId: putConfiguration
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ConfigurationPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getConfigurations_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
          description: The updated configuration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a configuration
      tags:
      - Configuration Resources
  /api/v2/templates/{collectionId}/conflictingResources:
    get:
      description: Retrieve a collection of all resources that conflict with the template.
      operationId: getTemplateConflictingResources
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of conflicting resources
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of conflicting resources
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/templates/{collectionId}/conflictingResources/{id}:
    get:
      description: Retrieve information about the resource that conflicts with the
        template.
      operationId: getTemplateConflictingResource
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResource'
            text/html:
              schema:
                type: string
          description: An conflicting resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a conflicting resource
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/databases:
    get:
      description: Retrieve information about the Address Manager database.
      operationId: getDatabases
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDatabases_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDatabases_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of database resources
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of database resources
      tags:
      - Admin Resources
  /api/v2/databases/{id}:
    get:
      description: Retrieve information about the Address Manager database.
      operationId: getDatabase
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDatabases_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManagerDatabase'
            text/html:
              schema:
                type: string
          description: A database resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single database resource
      tags:
      - Admin Resources
    patch:
      description: Update the configuration of an Address Manager database.
      operationId: patchDatabase
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            examples:
              databaseExampleBreakReplicationCluster:
                $ref: '#/components/examples/databaseExampleBreakReplicationCluster'
            schema:
              $ref: '#/components/schemas/patchDatabase_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDatabases_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManagerDatabase'
          description: The updated database
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Partially update an Address Manager database
      tags:
      - Admin Resources
    put:
      description: "Update the Address Manager database, including configuring database\
        \ replication."
      operationId: putDatabase
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              databaseExampleCreateReplicationCluster:
                $ref: '#/components/examples/databaseExampleCreateReplicationCluster'
            schema:
              $ref: '#/components/schemas/AddressManagerDatabasePutRequestBody'
          application/json:
            examples:
              databaseExampleCreateReplicationCluster:
                $ref: '#/components/examples/databaseExampleCreateReplicationCluster'
            schema:
              $ref: '#/components/schemas/AddressManagerDatabasePutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDatabases_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManagerDatabase'
          description: The updated database resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Updates a database resource
      tags:
      - Admin Resources
  /api/v2/{collection}/{collectionId}/defaultZones:
    get:
      description: Retrieve a list of default DNS zones that are set on an IPv4 block
        or network.
      operationId: getCollectionDefaultZones
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - networks
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionDefaultZones_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionDefaultZones_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of default zones
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of default zones
      tags:
      - View and Zone Resources
    post:
      description: Set a default DNS zone on an IPv4 block or network. Default DNS
        zones are used when assigning IP addresses to reduce the change of error when
        entering a fully qualified domain namefor a host.
      operationId: postCollectionDefaultZone
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - networks
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LinkedZonePostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedZonePostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionDefaultZones_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
          description: The newly created default zone
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new default zone
      tags:
      - View and Zone Resources
  /api/v2/{collection}/{collectionId}/defaultZones/{id}:
    delete:
      description: Delete a default DNS zone from an IPv4 block or network.
      operationId: deleteCollectionDefaultZone
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - networks
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a default zone
      tags:
      - View and Zone Resources
    get:
      description: Retrieve a specific default DNS zone that is set on an IPv4 block
        or network.
      operationId: getCollectionDefaultZone
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - networks
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionDefaultZones_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Zone'
            text/html:
              schema:
                type: string
          description: A default zone
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single default zone
      tags:
      - View and Zone Resources
  /api/v2/deployments/{collectionId}/deletedRecords:
    get:
      description: Retrieve a list of all deleted resource records for a specified
        selective deployment.
      operationId: getDeploymentDeletedRecords
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentAddedRecords_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentAddedRecords_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of resource records
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of resource records
      tags:
      - Resource Record Resources
  /api/v2/deployments/{collectionId}/deletedRecords/{id}:
    get:
      description: Retrieve a deleted resource record for a specified selective deployment.
      operationId: getDeploymentDeletedRecord
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentAddedRecords_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRecord'
            text/html:
              schema:
                type: string
          description: A resource record
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single resource record
      tags:
      - Resource Record Resources
  /api/v2/resourceRecords/{collectionId}/dependentRecords:
    get:
      description: Retrieve all resource records dependent on another resource record
        or IP address.
      operationId: getResourceRecordDependentRecords
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResourceRecordDependentRecords_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getResourceRecordDependentRecords_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of dependent records
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of dependent records
      tags:
      - Resource Record Resources
  /api/v2/resourceRecords/{collectionId}/dependentRecords/{id}:
    get:
      description: Retrieve a specific resource record that is dependent on another
        resource record.
      operationId: getResourceRecordDependentRecord
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResourceRecordDependentRecords_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getResourceRecordDependentRecords_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A dependent record
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single dependent resource record
      tags:
      - Resource Record Resources
  /api/v2/deploymentOptionDefinitions:
    get:
      description: "Retrieve a collection of all configurable deployment option definitions\
        \ including custom option definitions, DHCPv4 client option definitions DHCPv4\
        \ service option definitions, DHCPv6 client option definitions DHCPv6 service\
        \ option definitions, DNS option definitions, Start of Authority definitions,\
        \ and vendor option definitions."
      operationId: getDeploymentOptionDefinitions
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentOptionDefinitions_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentOptionDefinitions_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of deployment option definitions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of deployment option definitions
      tags:
      - Deployment Option Resources
      - Vendor Profile Resources
  /api/v2/deploymentOptionDefinitions/{id}:
    delete:
      description: Delete a specific deployment option definition.
      operationId: deleteDeploymentOptionDefinition
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a deployment option definition
      tags:
      - Deployment Option Resources
      - Vendor Profile Resources
    get:
      description: Retrieve information about a single deployment option definitions.
      operationId: getDeploymentOptionDefinition
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentOptionDefinitions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentOptionDefinitions_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A deployment option definition
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single deployment option definition
      tags:
      - Deployment Option Resources
      - Vendor Profile Resources
    put:
      description: Update a specific deployment option definition.
      operationId: putDeploymentOptionDefinition
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putDeploymentOptionDefinition_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putDeploymentOptionDefinition_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/putDeploymentOptionDefinition_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/putDeploymentOptionDefinition_200_response_1'
          description: The updated deployment option definition
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a deployment option definition
      tags:
      - Deployment Option Resources
      - Vendor Profile Resources
  /api/v2/{collection}/{collectionId}/deploymentOptionDefinitions:
    get:
      description: Retrieve information about a specific deployment option definition.
      operationId: getCollectionDeploymentOptionDefinitions
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - configurations
          - vendorProfiles
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionDeploymentOptionDefinitions_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionDeploymentOptionDefinitions_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of deployment option definitions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of deployment option definitions
      tags:
      - Deployment Option Resources
      - Vendor Profile Resources
    post:
      description: Create a new custom option definition.
      operationId: postCollectionDeploymentOptionDefinition
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - configurations
          - vendorProfiles
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/postCollectionDeploymentOptionDefinition_request'
          application/json:
            schema:
              $ref: '#/components/schemas/postCollectionDeploymentOptionDefinition_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/putDeploymentOptionDefinition_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/putDeploymentOptionDefinition_200_response_1'
          description: The newly created deployment option definition
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new deployment option definition
      tags:
      - Deployment Option Resources
      - Vendor Profile Resources
  /api/v2/deploymentOptions:
    get:
      description: Retrieve deployment options for Address Manager DNS and DHCP services.
      operationId: getDeploymentOptions
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentOptions_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentOptions_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of deployment options
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of deployment options
      tags:
      - Deployment Option Resources
  /api/v2/deploymentOptions/{id}:
    delete:
      description: Delete an existing DNS or DHCP deployment option.
      operationId: deleteDeploymentOption
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a deployment option
      tags:
      - Deployment Option Resources
    get:
      description: Retrieve a single DNS or DHCP deployment option.
      operationId: getDeploymentOption
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentOptions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentOptions_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A deployment option
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single deployment option
      tags:
      - Deployment Option Resources
    put:
      description: Update an existing DNS or DHCP deployment option.
      operationId: putDeploymentOption
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putDeploymentOption_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putDeploymentOption_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentOptions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentOptions_200_response_1_data_inner'
          description: The updated deployment option
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a deployment option
      tags:
      - Deployment Option Resources
  /api/v2/{collection}/{collectionId}/deploymentOptions:
    get:
      description: Retrieve a collection of all deployment options configured for
        a resource.
      operationId: getCollectionDeploymentOptions
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - addresses
          - blocks
          - clientClasses
          - configurations
          - macAddresses
          - macPools
          - networks
          - ranges
          - serverGroups
          - servers
          - templates
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionDeploymentOptions_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionDeploymentOptions_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of deployment options
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of deployment options
      tags:
      - Deployment Option Resources
    post:
      description: Create a new DNS or DHCP deployment option.
      operationId: postCollectionDeploymentOption
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - addresses
          - blocks
          - clientClasses
          - configurations
          - macAddresses
          - macPools
          - networks
          - ranges
          - serverGroups
          - servers
          - templates
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            schema:
              $ref: '#/components/schemas/postCollectionDeploymentOption_request'
          application/json:
            examples:
              deploymentOptionExampleDhcpv4ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingName'
              deploymentOptionExampleDhcpv4ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ClientOptionUsingCode'
              deploymentOptionExampleDhcpv4ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv4ServiceOption'
              deploymentOptionExampleDhcpv6ClientOptionUsingName:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingName'
              deploymentOptionExampleDhcpv6ClientOptionUsingCode:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ClientOptionUsingCode'
              deploymentOptionExampleDhcpv6ServiceOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpv6ServiceOption'
              deploymentOptionExampleDhcpVendorOption:
                $ref: '#/components/examples/deploymentOptionExampleDhcpVendorOption'
              deploymentOptionExampleDnsOption:
                $ref: '#/components/examples/deploymentOptionExampleDnsOption'
              deploymentOptionExampleStartOfAuthority:
                $ref: '#/components/examples/deploymentOptionExampleStartOfAuthority'
            schema:
              $ref: '#/components/schemas/postCollectionDeploymentOption_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentOptions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentOptions_200_response_1_data_inner'
          description: The newly created deployment option
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new deployment option
      tags:
      - Deployment Option Resources
  /api/v2/deploymentRoles:
    get:
      description: Retrieve a collection of all DNS and DHCP deployment roles for
        all configurations.
      operationId: getDeploymentRoles
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentRoles_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentRoles_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of deployment roles
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of deployment roles
      tags:
      - Deployment Role Resources
  /api/v2/deploymentRoles/{id}:
    delete:
      description: Delete a deployment role.
      operationId: deleteDeploymentRole
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a deployment role
      tags:
      - Deployment Role Resources
    get:
      description: Retrieve a single DNS or DHCP deployment role.
      operationId: getDeploymentRole
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentRoles_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentRoles_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A deployment role
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single deployment role
      tags:
      - Deployment Role Resources
    put:
      description: Update a deployment role.
      operationId: putDeploymentRole
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putDeploymentRole_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putDeploymentRole_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentRoles_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentRoles_200_response_1_data_inner'
          description: The updated deployment role
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a deployment role
      tags:
      - Deployment Role Resources
  /api/v2/{collection}/{collectionId}/deploymentRoles:
    get:
      description: Retrieve a collection of all DNS and DHCP deployment roles configured
        for a resource.
      operationId: getCollectionDeploymentRoles
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - clientClasses
          - macPools
          - networks
          - servers
          - tftpGroups
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentRoles_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentRoles_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of deployment roles
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of deployment roles
      tags:
      - Deployment Role Resources
    post:
      description: Assign a new deployment role to a resource.
      operationId: postCollectionDeploymentRole
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - clientClasses
          - macPools
          - networks
          - servers
          - tftpGroups
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            schema:
              $ref: '#/components/schemas/postCollectionDeploymentRole_request'
          application/json:
            examples:
              deploymentRoleExamplePrimaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExamplePrimaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRole'
              deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
                $ref: '#/components/examples/deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer'
              deploymentRoleExampleDhcpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRole'
              deploymentRoleExampleDhcpDeploymentRoleInFailover:
                $ref: '#/components/examples/deploymentRoleExampleDhcpDeploymentRoleInFailover'
              deploymentRoleExampleTftpDeploymentRole:
                $ref: '#/components/examples/deploymentRoleExampleTftpDeploymentRole'
            schema:
              $ref: '#/components/schemas/postCollectionDeploymentRole_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentRoles_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentRoles_200_response_1_data_inner'
          description: The newly created deployment role
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new deployment role
      tags:
      - Deployment Role Resources
  /api/v2/servers/{collectionId}/deploymentRoles:
    get:
      description: Retrieve a collection of all DNS and DHCP deployment roles linked
        to a server.
      operationId: getServerDeploymentRoles
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of linked deployment roles
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of linked deployment roles
      tags:
      - Deployment Role Resources
  /api/v2/servers/{collectionId}/deploymentRoles/{id}:
    get:
      description: Retrieve a single DNS or DHCP deployment role assigned to a server.
      operationId: getServerDeploymentRole
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResource'
            text/html:
              schema:
                type: string
          description: A linked deployment role
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single linked deployment role
      tags:
      - Deployment Role Resources
  /api/v2/deployments:
    get:
      description: Retrieve information about all deployments.
      operationId: getDeployments
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeployments_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeployments_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of deployments
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of deployments
      tags:
      - Server Resources
    post:
      description: "Perform a new selective deployment of specific DNS entities. Selective\
        \ deployments create a differential deployment task to deploy changes made\
        \ to specific DNS entities, such as resource records to a managed DNS/DHCP\
        \ Server."
      operationId: postDeployment
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              deploymentExampleSelectiveDeployment:
                $ref: '#/components/examples/deploymentExampleSelectiveDeployment'
            schema:
              $ref: '#/components/schemas/SelectiveDeploymentPostRequestBody'
          application/json:
            examples:
              deploymentExampleSelectiveDeployment:
                $ref: '#/components/examples/deploymentExampleSelectiveDeployment'
            schema:
              $ref: '#/components/schemas/SelectiveDeploymentPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/postDeployment_201_response'
            application/json:
              schema:
                $ref: '#/components/schemas/SelectiveDeployment'
          description: The newly created deployment
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new deployment
      tags:
      - Server Resources
  /api/v2/deployments/{id}:
    get:
      description: Retrieve information about a specific deployment.
      operationId: getDeployment
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeployments_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeployments_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A deployment
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single deployment
      tags:
      - Server Resources
  /api/v2/{collection}/{collectionId}/deployments:
    get:
      description: Retrieve a list of deployments that have been performed to a specific
        server or DNS zone.
      operationId: getCollectionDeployments
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - servers
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeployments_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeployments_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of deployments
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of deployments
      tags:
      - Server Resources
    post:
      description: "Perform a full, differential, or quick deployment to a specific\
        \ server or DNS zone, or perform a pre-deployment validation."
      operationId: postCollectionDeployment
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - servers
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              deploymentExampleFullDnsDeployment:
                $ref: '#/components/examples/deploymentExampleFullDnsDeployment'
              deploymentExampleDifferentialDnsDeployment:
                $ref: '#/components/examples/deploymentExampleDifferentialDnsDeployment'
              deploymentExampleFullDhcpv4Deployment:
                $ref: '#/components/examples/deploymentExampleFullDhcpv4Deployment'
              deploymentExampleQuickDeployment:
                $ref: '#/components/examples/deploymentExampleQuickDeployment'
            schema:
              $ref: '#/components/schemas/postCollectionDeployment_request'
          application/json:
            examples:
              deploymentExampleFullDnsDeployment:
                $ref: '#/components/examples/deploymentExampleFullDnsDeployment'
              deploymentExampleDifferentialDnsDeployment:
                $ref: '#/components/examples/deploymentExampleDifferentialDnsDeployment'
              deploymentExampleFullDhcpv4Deployment:
                $ref: '#/components/examples/deploymentExampleFullDhcpv4Deployment'
              deploymentExampleQuickDeployment:
                $ref: '#/components/examples/deploymentExampleQuickDeployment'
            schema:
              $ref: '#/components/schemas/postCollectionDeployment_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/postCollectionDeployment_201_response'
            application/json:
              schema:
                $ref: '#/components/schemas/postCollectionDeployment_201_response_1'
          description: The newly created deployment
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new deployment
      tags:
      - Server Resources
  /api/v2/deviceSubtypes:
    get:
      description: Retrieve a collection of all device subtypes.
      operationId: getDeviceSubtypes
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeviceSubtypes_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceSubtypes_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of device subtypes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of device subtypes
      tags:
      - Device Resources
  /api/v2/deviceSubtypes/{id}:
    delete:
      description: Delete an existing device subtype.
      operationId: deleteDeviceSubtype
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a device subtype
      tags:
      - Device Resources
    get:
      description: Retrieve information about a device subtype.
      operationId: getDeviceSubtype
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeviceSubtypes_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSubtype'
            text/html:
              schema:
                type: string
          description: A device subtype
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single device subtype
      tags:
      - Device Resources
    put:
      description: Update an existing device subtype.
      operationId: putDeviceSubtype
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceSubtypePutRequestBody'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeviceSubtypePutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeviceSubtypes_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSubtype'
          description: The updated device subtype
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a device subtype
      tags:
      - Device Resources
  /api/v2/deviceTypes/{collectionId}/deviceSubtypes:
    get:
      description: Retrieve a collection of device subtypes within a device type.
      operationId: getDeviceTypeDeviceSubtypes
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeviceSubtypes_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceSubtypes_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of device subtypes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of device subtypes
      tags:
      - Device Resources
    post:
      description: "Create a new device subtype. Device subtypes are specialized tags\
        \ that identify hardware components in your network. Use Address Manager to\
        \ help you organize and track network devices in your network environment,\
        \ in particular multi-homed devices such as routers, or systems that use multiple\
        \ virtual IP addresses. A device subtype is a more specific device, such as\
        \ a particular model of router."
      operationId: postDeviceTypeDeviceSubtype
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              deviceSubtypeExampleRequiredFields:
                $ref: '#/components/examples/deviceSubtypeExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/DeviceSubtypePostRequestBody'
          application/hal+json:
            examples:
              deviceSubtypeExampleRequiredFields:
                $ref: '#/components/examples/deviceSubtypeExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/DeviceSubtypePostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeviceSubtypes_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSubtype'
          description: The newly created device subtype
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new device subtype
      tags:
      - Device Resources
  /api/v2/deviceTypes:
    get:
      description: Retrieve a collection of all device types.
      operationId: getDeviceTypes
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeviceTypes_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeviceTypes_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of device types
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of device types
      tags:
      - Device Resources
    post:
      description: "Create a new device type. Device types are specialized tags that\
        \ identify hardware components in your network. Use Address Manager to help\
        \ you organize and track network devices in your network environment, in particular\
        \ multi-homed devices such as routers, or systems that use multiple virtual\
        \ IP addresses. A device type is a general category of device, such as a router\
        \ or switch."
      operationId: postDeviceType
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              deviceTypeExampleRequiredFields:
                $ref: '#/components/examples/deviceTypeExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/DeviceTypePostRequestBody'
          application/hal+json:
            examples:
              deviceTypeExampleRequiredFields:
                $ref: '#/components/examples/deviceTypeExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/DeviceTypePostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeviceTypes_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
          description: The newly created device type
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new device type
      tags:
      - Device Resources
  /api/v2/deviceTypes/{id}:
    delete:
      description: Delete an existing device type.
      operationId: deleteDeviceType
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a device type
      tags:
      - Device Resources
    get:
      description: Retrieve information about a device type.
      operationId: getDeviceType
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeviceTypes_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
            text/html:
              schema:
                type: string
          description: A device type
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single device type
      tags:
      - Device Resources
    put:
      description: Update an existing device type.
      operationId: putDeviceType
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceTypePutRequestBody'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DeviceTypePutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeviceTypes_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceType'
          description: The updated device type
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a device type
      tags:
      - Device Resources
  /api/v2/devices:
    get:
      description: Retrieve a collection of devices.
      operationId: getDevices
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDevices_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDevices_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of devices
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of devices
      tags:
      - Device Resources
  /api/v2/devices/{id}:
    delete:
      description: Delete an existing device.
      operationId: deleteDevice
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a device
      tags:
      - Device Resources
    get:
      description: Retrieve information about a device.
      operationId: getDevice
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDevices_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
            text/html:
              schema:
                type: string
          description: A device
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single device
      tags:
      - Device Resources
    put:
      description: Update an existing device.
      operationId: putDevice
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DevicePutRequestBody'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DevicePutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDevices_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: The updated device
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a device
      tags:
      - Device Resources
  /api/v2/configurations/{collectionId}/devices:
    get:
      description: Retrieve a collection of devices within a configuration.
      operationId: getConfigurationDevices
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDevices_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDevices_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of devices
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of devices
      tags:
      - Device Resources
    post:
      description: "Create a new device. Devices can be assigned to one or more IP\
        \ addresses. Using a specitic type of tag similar to object tags, you can\
        \ then group the devices into categories and subcategories, and track them\
        \ in Address Manager."
      operationId: postConfigurationDevice
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              deviceExampleWithoutTypeOrSubtype:
                $ref: '#/components/examples/deviceExampleWithoutTypeOrSubtype'
              deviceExampleWithType:
                $ref: '#/components/examples/deviceExampleWithType'
              deviceExampleWithSubtype:
                $ref: '#/components/examples/deviceExampleWithSubtype'
            schema:
              $ref: '#/components/schemas/DevicePostRequestBody'
          application/hal+json:
            examples:
              deviceExampleWithoutTypeOrSubtype:
                $ref: '#/components/examples/deviceExampleWithoutTypeOrSubtype'
              deviceExampleWithType:
                $ref: '#/components/examples/deviceExampleWithType'
              deviceExampleWithSubtype:
                $ref: '#/components/examples/deviceExampleWithSubtype'
            schema:
              $ref: '#/components/schemas/DevicePostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDevices_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: The newly created device
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new device
      tags:
      - Device Resources
  /api/v2/reconciliationPolicies/{collectionId}/discoveredDevices:
    get:
      description: Retrieve a collection of resources representing devices discovered
        by a reconciliation policy.
      operationId: getReconciliationPolicyDiscoveredDevices
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicyDiscoveredDevices_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicyDiscoveredDevices_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of discovered devices
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of discovered devices
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/reconciliationPolicies/{collectionId}/discoveredDevices/{id}:
    get:
      description: Retrieve a resource representing a device discovered by a reconciliation
        policy.
      operationId: getReconciliationPolicyDiscoveredDevice
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicyDiscoveredDevices_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicyDiscoveredDevices_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A discovered device
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single discovered device
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/events:
    get:
      description: Retrieve information about all system events.
      operationId: getEvents
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getEvents_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getEvents_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of events
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of events
      tags:
      - Admin Resources
  /api/v2/events/{id}:
    get:
      description: Retrieve information about a single system event.
      operationId: getEvent
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getEvents_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
            text/html:
              schema:
                type: string
          description: An event
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single event
      tags:
      - Admin Resources
  /api/v2/users/{collectionId}/favorites:
    get:
      description: Retrieve a collection of all favorites for a user.
      operationId: getUserFavorites
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of favorites
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of favorites
      tags:
      - Favorite Resources
    post:
      description: Add a resource to the list of favorites for a user.
      operationId: postUserFavorite
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LinkedResourcePostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedResourcePostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResource'
          description: The newly created favorite
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new favorite
      tags:
      - Favorite Resources
  /api/v2/users/{collectionId}/favorites/{id}:
    delete:
      description: Delete a favorite for a user.
      operationId: deleteUserFavorite
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a favorite
      tags:
      - Favorite Resources
  /api/v2/files:
    get:
      description: Retrieve a list of all TFTP files and folders.
      operationId: getFiles
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getFiles_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getFiles_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of files
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of files
      tags:
      - TFTP Resources
  /api/v2/files/{id}:
    delete:
      description: Delete an existing TFTP file or folder.
      operationId: deleteFile
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a file
      tags:
      - TFTP Resources
    get:
      description: Retrieve information about a specific TFTP file or folder.
      operationId: getFile
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getFiles_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getFiles_200_response_1_data_inner'
            text/html:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
          description: A file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single file
      tags:
      - TFTP Resources
    put:
      description: Update an existing TFTP file or folder.
      operationId: putFile
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/putFile_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getFiles_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getFiles_200_response_1_data_inner'
          description: The updated file
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a file
      tags:
      - TFTP Resources
  /api/v2/{collection}/{collectionId}/files:
    get:
      description: Retrieve a list of all TFTP files or folders within a TFTP group.
      operationId: getCollectionFiles
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - files
          - tftpGroups
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getFiles_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getFiles_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of files
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of files
      tags:
      - TFTP Resources
    post:
      description: Create a new TFTP file or folder within a specific TFTP group.
        The TFTP service is designed so that an entire file structure can be created
        and deployed into a server as a service. Add a TFTP role to a TFTP group which
        contains a folder or directory structure and the files for the service. Indivitual
        TFTP files must be smaller than 100MB in size.
      operationId: postCollectionFile
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - files
          - tftpGroups
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/postCollectionFile_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getFiles_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getFiles_200_response_1_data_inner'
          description: The newly created file
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new file
      tags:
      - TFTP Resources
  /api/v2/groups:
    get:
      description: "Retrieve information about all configured user, LDAP, TACACS+,\
        \ and SSO groups."
      operationId: getGroups
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getGroups_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getGroups_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of groups
      tags:
      - Admin Resources
    post:
      description: "Create a new user, LDAP, TACACS+, or SSO group. If you are creating\
        \ an LDAP group, you must first configure LDAP authenticators before you can\
        \ create the LDAP group. If you are creating a TACACS+ group, you must first\
        \ configure TACACS+ authenticators before you can create the TACACS+ group."
      operationId: postGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              groupExampleNonAdmin:
                $ref: '#/components/examples/groupExampleNonAdmin'
            schema:
              $ref: '#/components/schemas/UserGroupPostRequestBody'
          application/json:
            examples:
              groupExampleNonAdmin:
                $ref: '#/components/examples/groupExampleNonAdmin'
            schema:
              $ref: '#/components/schemas/UserGroupPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: The newly created group
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new group
      tags:
      - Admin Resources
  /api/v2/groups/{id}:
    delete:
      description: "Delete a specific user, LDAP, TACACS+, or SSO group by passing\
        \ in the collection ID of the group that you would like to delete."
      operationId: deleteGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a group
      tags:
      - Admin Resources
    get:
      description: "Retrieve information about a specific User, LDAP, TACACS+, or\
        \ SSO group based on the ID of the group. You can retrieve the ID of the group\
        \ using the GET /v2/groups API."
      operationId: getGroup
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
            text/html:
              schema:
                type: string
          description: A group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single group
      tags:
      - Admin Resources
    put:
      description: "Update an existing user, LDAP, TACACS+, or SSO group by passing\
        \ in the collection ID of the group that you would like to update."
      operationId: putGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserGroupPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: The updated group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a group
      tags:
      - Admin Resources
  /api/v2/users/{collectionId}/groups:
    get:
      description: "Retrieve information about a user, LDAP, TACACS+, or SSO group\
        \ that a specific user is assigned to based on the collection ID of the user."
      operationId: getUserGroups
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getGroups_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getGroups_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of linked groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of linked groups
      tags:
      - Admin Resources
    post:
      description: "Add a user to a user, LDAP, TACACS+, or SSO group by passing in\
        \ the collection ID of the user that you would like to add to the group."
      operationId: postUserGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LinkedUserGroupPostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedUserGroupPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
          description: The linked group
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Link a group to a user
      tags:
      - Admin Resources
  /api/v2/users/{collectionId}/groups/{id}:
    delete:
      description: "Remove a user from a user, LDAP, TACACS+, or SSO group by passing\
        \ in the collection ID of the user and the collection ID of the group."
      operationId: deleteUserGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Unlink a group from a user
      tags:
      - Admin Resources
    get:
      description: "Retrieve information about a specific user, LDAP, TACACS+, or\
        \ SSO group by passing in the ID of a user and the ID of the group to which\
        \ the user belongs."
      operationId: getUserGroup
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroup'
            text/html:
              schema:
                type: string
          description: A linked group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single linked group
      tags:
      - Admin Resources
  /api/v2/imports:
    get:
      description: Retrieve all resources representing a resource import.
      operationId: getImports
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getImports_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getImports_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of resource imports
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of resource imports
      tags:
      - Admin Resources
    post:
      description: Upload data into Address Manager to import resources.
      operationId: postImport
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceImportPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getImports_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceImport'
          description: The newly created resource import
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new resource import
      tags:
      - Admin Resources
  /api/v2/imports/{id}:
    delete:
      description: Delete a migration resource.
      operationId: deleteImport
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete an import resource
      tags:
      - Admin Resources
    get:
      description: Retrieve a resource representing a resource import.
      operationId: getImport
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getImports_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceImport'
            text/html:
              schema:
                type: string
          description: A resource import
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single resource import
      tags:
      - Admin Resources
    patch:
      description: Import resources into Address Manager.
      operationId: patchImport
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/patchImport_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getImports_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceImport'
          description: The updated resource import
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Partially update a import resource
      tags:
      - Admin Resources
  /api/v2/responsePolicies/{collectionId}/imports:
    get:
      description: Retrieve all response policy items representing a resource import.
      operationId: getResponsePolicyImports
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResponsePolicyImports_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getResponsePolicyImports_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The collection of response policy item imports
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of response policy item imports
      tags:
      - Admin Resources
    post:
      description: Create a resource representing a response policy item import.
      operationId: postResponsePolicyImport
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResponsePolicyItemImportPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResponsePolicyImports_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyItemImport'
          description: The newly created response policy item import
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new response policy item import
      tags:
      - Admin Resources
  /api/v2/responsePolicies/{collectionId}/imports/{id}:
    delete:
      description: Delete a resource representing a response policy item import.
      operationId: deleteResponsePolicyImport
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a response policy item import resource
      tags:
      - Admin Resources
    get:
      description: Retrieve a response policy item representing a resource import.
      operationId: getResponsePolicyImport
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResponsePolicyImports_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyItemImport'
            text/html:
              schema:
                type: string
          description: A response policy item import
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single response policy item import
      tags:
      - Admin Resources
  /api/v2/interfaces:
    get:
      description: Retrieve a collection of all configured server interfaces.
      operationId: getInterfaces
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getInterfaces_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getInterfaces_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of interfaces
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of interfaces
      tags:
      - Server Resources
  /api/v2/interfaces/{id}:
    delete:
      description: Delete an existing server interface.
      operationId: deleteInterface
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete an interface
      tags:
      - Server Resources
    get:
      description: Retrieve information about a configured server interface.
      operationId: getInterface
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getInterfaces_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getInterfaces_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: An interface
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single interface
      tags:
      - Server Resources
    put:
      description: Update an existing server interface.
      operationId: putInterface
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/PublishedInterfacePutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/PublishedInterfacePutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/putInterface_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/PublishedInterface'
          description: The updated interface
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update an interface
      tags:
      - Server Resources
  /api/v2/deploymentRoles/{collectionId}/interfaces:
    get:
      description: Retrieve a collection of all server interfaces assigned to a deployment
        role.
      operationId: getDeploymentRoleInterfaces
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getInterfaces_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getInterfaces_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of interfaces
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of interfaces
      tags:
      - Server Resources
  /api/v2/servers/{collectionId}/interfaces:
    get:
      description: Retrieve a collection of all configured server interfaces of a
        server.
      operationId: getServerInterfaces
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getInterfaces_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getInterfaces_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of interfaces
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of interfaces
      tags:
      - Server Resources
    post:
      description: Add a new published server interface to a server.
      operationId: postServerInterface
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              interfaceExamplePublishedInterface:
                $ref: '#/components/examples/interfaceExamplePublishedInterface'
            schema:
              $ref: '#/components/schemas/PublishedInterfacePostRequestBody'
          application/json:
            examples:
              interfaceExamplePublishedInterface:
                $ref: '#/components/examples/interfaceExamplePublishedInterface'
            schema:
              $ref: '#/components/schemas/PublishedInterfacePostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/putInterface_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/PublishedInterface'
          description: The newly created interface
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new interface
      tags:
      - Server Resources
  /api/v2/ipGroups:
    get:
      description: Retrieve a collection of all IP groups for all networks and configurations.
      operationId: getIpGroups
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getIpGroups_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getIpGroups_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of IP groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of IP groups
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/ipGroups/{id}:
    delete:
      description: Delete an IP group.
      operationId: deleteIpGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete an IP group
      tags:
      - IPv4 and IPv6 Resources
    get:
      description: Retrieve a single IP group.
      operationId: getIpGroup
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getIpGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4Group'
            text/html:
              schema:
                type: string
          description: An IP group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single IP group
      tags:
      - IPv4 and IPv6 Resources
    put:
      description: Update an IP group.
      operationId: putIpGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/IPv4GroupPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/IPv4GroupPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getIpGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4Group'
          description: The updated IP group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update an IP group
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/networks/{collectionId}/ipGroups:
    get:
      description: Retrieve a collection of all IP groups for a network.
      operationId: getNetworkIpGroups
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getIpGroups_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getIpGroups_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of IP groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of IP groups
      tags:
      - IPv4 and IPv6 Resources
    post:
      description: Create a new IP group for a network.
      operationId: postNetworkIpGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              ipGroupExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/ipGroupExampleIpv4StartAndEndAddress'
              ipGroupExampleIpv4OffsetAndSize:
                $ref: '#/components/examples/ipGroupExampleIpv4OffsetAndSize'
              ipGroupExampleIpv4OffsetAndPercentage:
                $ref: '#/components/examples/ipGroupExampleIpv4OffsetAndPercentage'
              ipGroupExampleIpv4NegativeOffsetAndSize:
                $ref: '#/components/examples/ipGroupExampleIpv4NegativeOffsetAndSize'
            schema:
              $ref: '#/components/schemas/IPv4GroupPostRequestBody'
          application/json:
            examples:
              ipGroupExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/ipGroupExampleIpv4StartAndEndAddress'
              ipGroupExampleIpv4OffsetAndSize:
                $ref: '#/components/examples/ipGroupExampleIpv4OffsetAndSize'
              ipGroupExampleIpv4OffsetAndPercentage:
                $ref: '#/components/examples/ipGroupExampleIpv4OffsetAndPercentage'
              ipGroupExampleIpv4NegativeOffsetAndSize:
                $ref: '#/components/examples/ipGroupExampleIpv4NegativeOffsetAndSize'
            schema:
              $ref: '#/components/schemas/IPv4GroupPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getIpGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/IPv4Group'
          description: The newly created IP group
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new IP group
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/keyDistributionCenters:
    get:
      description: Retrieve a collection of all key distribution centers. Key distribution
        centers (KDCs) are a network service that supplies Kerberos tickets and temporary
        session keys to users and computers within an Active Directory domain.
      operationId: getKeyDistributionCenters
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getKeyDistributionCenters_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getKeyDistributionCenters_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of key distribution centers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of key distribution centers
      tags:
      - Kerberos Resources
  /api/v2/keyDistributionCenters/{id}:
    delete:
      description: Delete an existing key distribution center.
      operationId: deleteKeyDistributionCenter
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a key distribution center
      tags:
      - Kerberos Resources
    get:
      description: Retrieve information about a key distribution center. Key distribution
        centers (KDCs) are a network service that supplies Kerberos tickets and temporary
        session keys to users and computers within an Active Directory domain.
      operationId: getKeyDistributionCenter
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getKeyDistributionCenters_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/KeyDistributionCenter'
            text/html:
              schema:
                type: string
          description: A key distribution center
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single key distribution center
      tags:
      - Kerberos Resources
    put:
      description: Update an existing key distribution center.
      operationId: putKeyDistributionCenter
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/KeyDistributionCenterPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/KeyDistributionCenterPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getKeyDistributionCenters_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/KeyDistributionCenter'
          description: The updated key distribution center
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a key distribution center
      tags:
      - Kerberos Resources
  /api/v2/realms/{collectionId}/keyDistributionCenters:
    get:
      description: Retrieve a collection of all key distribution centers within a
        Kerberos realm.
      operationId: getRealmKeyDistributionCenters
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getKeyDistributionCenters_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getKeyDistributionCenters_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of key distribution centers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of key distribution centers
      tags:
      - Kerberos Resources
    post:
      description: Create a new key distribution center within a Kerberos realm.
      operationId: postRealmKeyDistributionCenter
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              keyDistributionCenterExampleRequiredFields:
                $ref: '#/components/examples/keyDistributionCenterExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/KeyDistributionCenterPostRequestBody'
          application/json:
            examples:
              keyDistributionCenterExampleRequiredFields:
                $ref: '#/components/examples/keyDistributionCenterExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/KeyDistributionCenterPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getKeyDistributionCenters_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/KeyDistributionCenter'
          description: The newly created key distribution center
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new key distribution center
      tags:
      - Kerberos Resources
  /api/v2/leases:
    get:
      description: Retrieve all DHCPv4 or DHCPv6 leases for all addresses. Type of
        lease (DHCPv4Lease or DHCPv6Lease) is specified in the filter query parameter
        (i.e. v2/leases?filter=type:"DHCPv4Lease")
      operationId: getLeases
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLeases_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLeases_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of leases
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of leases
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/leases/{id}:
    get:
      description: Retrieve a single DHCPv4 or DHCPv6 lease. Type of lease (DHCPv4Lease
        or DHCPv6Lease) is specified in the filter query parameter (i.e. v2/leases?filter=type:"DHCPv4Lease")
      operationId: getLease
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLeases_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getLeases_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A lease
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single lease
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/{collection}/{collectionId}/leases:
    get:
      description: "Retrieve a collection of all leases for an address, network or\
        \ block."
      operationId: getCollectionLeases
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - addresses
          - blocks
          - networks
          - ranges
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLeases_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLeases_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of leases
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of leases
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/locations:
    get:
      description: Retrieve a collection of all UN/LOCODE and custom locations.
      operationId: getLocations
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocations_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLocations_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of locations
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of locations
      tags:
      - Location Resources
  /api/v2/locations/{id}:
    delete:
      description: Delete an existing custom location. You cannot delete the default
        locations created in Address Manager.
      operationId: deleteLocation
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a location
      tags:
      - Location Resources
    get:
      description: Retrieve information about a UN/LOCODE or custom location.
      operationId: getLocation
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocations_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
            text/html:
              schema:
                type: string
          description: A location
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single location
      tags:
      - Location Resources
    put:
      description: Update an existing custom location. You cannot update the default
        locations created in Address Manager.
      operationId: putLocation
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationPutRequestBody'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LocationPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocations_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: The updated location
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a location
      tags:
      - Location Resources
  /api/v2/locations/{collectionId}/locations:
    get:
      description: Retrieve a collection of all locations within a location.
      operationId: getLocationLocations
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocations_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLocations_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of locations
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of locations
      tags:
      - Location Resources
    post:
      description: Create a new custom location under a location resource. You can
        create childlocations under the city location resource to customize your organization
        location structure. You cannot create a location resource at the primary location
        list level.
      operationId: postLocationLocation
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              locationExampleLocation:
                $ref: '#/components/examples/locationExampleLocation'
            schema:
              $ref: '#/components/schemas/LocationPostRequestBody'
          application/hal+json:
            examples:
              locationExampleLocation:
                $ref: '#/components/examples/locationExampleLocation'
            schema:
              $ref: '#/components/schemas/LocationPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocations_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: The newly created location
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new location
      tags:
      - Location Resources
  /api/v2/imports/{collectionId}/logs:
    get:
      description: Retrieve a collection of all logs for an import.
      operationId: getImportLogs
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getImportLogs_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getImportLogs_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of log resources
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of log resources
      tags:
      - Admin Resources
  /api/v2/imports/{collectionId}/logs/{id}:
    get:
      description: Retrieve a log for an import.
      operationId: getImportLog
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getImportLogs_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ImportLog'
            text/html:
              schema:
                type: string
          description: A log resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a log resource
      tags:
      - Admin Resources
  /api/v2/macAddresses:
    get:
      description: Retrieve a collection of all MAC addresses.
      operationId: getMacAddresses
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMacAddresses_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getMacAddresses_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of MAC addresses
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of MAC addresses
      tags:
      - MAC Address and Client Identifier Resources
  /api/v2/macAddresses/{id}:
    delete:
      description: Delete an existing MAC address.
      operationId: deleteMacAddress
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a MAC address
      tags:
      - MAC Address and Client Identifier Resources
    get:
      description: Retrieve information about a MAC address.
      operationId: getMacAddress
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMacAddresses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/MACAddress'
            text/html:
              schema:
                type: string
          description: A MAC address
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single MAC address
      tags:
      - MAC Address and Client Identifier Resources
    put:
      description: Update an existing MAC address.
      operationId: putMacAddress
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MACAddressPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/MACAddressPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMacAddresses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/MACAddress'
          description: The updated MAC address
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a MAC address
      tags:
      - MAC Address and Client Identifier Resources
  /api/v2/configurations/{collectionId}/macAddresses:
    get:
      description: Retrieve a list of MAC addresses within a configuration.
      operationId: getConfigurationMacAddresses
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMacAddresses_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getMacAddresses_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of MAC addresses
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of MAC addresses
      tags:
      - MAC Address and Client Identifier Resources
    post:
      description: Create a new MAC address within a configuration.
      operationId: postConfigurationMacAddress
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              macAddressExampleMacAddress:
                $ref: '#/components/examples/macAddressExampleMacAddress'
              macAddressExampleDeniedMacAddress:
                $ref: '#/components/examples/macAddressExampleDeniedMacAddress'
            schema:
              $ref: '#/components/schemas/MACAddressPostRequestBody'
          application/json:
            examples:
              macAddressExampleMacAddress:
                $ref: '#/components/examples/macAddressExampleMacAddress'
              macAddressExampleDeniedMacAddress:
                $ref: '#/components/examples/macAddressExampleDeniedMacAddress'
            schema:
              $ref: '#/components/schemas/MACAddressPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMacAddresses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/MACAddress'
          description: The newly created MAC address
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new MAC address
      tags:
      - MAC Address and Client Identifier Resources
  /api/v2/macPools/{collectionId}/macAddresses:
    get:
      description: Retrieve all MAC addresses that are associated with a MAC pool.
      operationId: getMacPoolMacAddresses
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMacAddresses_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getMacAddresses_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of linked MAC addresses
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of linked MAC addresses
      tags:
      - MAC Address and Client Identifier Resources
    post:
      description: Link a MAC address to a MAC pool.
      operationId: postMacPoolMacAddress
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LinkedMACAddressPostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedMACAddressPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMacAddresses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/MACAddress'
          description: The linked MAC address
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Link a MAC address to a MAC pool
      tags:
      - MAC Address and Client Identifier Resources
  /api/v2/macPools/{collectionId}/macAddresses/{id}:
    delete:
      description: Remove a MAC address from a MAC pool.
      operationId: deleteMacPoolMacAddress
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Unlink a MAC address from a MAC pool
      tags:
      - MAC Address and Client Identifier Resources
    get:
      description: Retrieve a MAC address that has been associated with a MAC pool.
      operationId: getMacPoolMacAddress
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMacAddresses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/MACAddress'
            text/html:
              schema:
                type: string
          description: A linked MAC address
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single linked MAC address
      tags:
      - MAC Address and Client Identifier Resources
  /api/v2/macPools:
    get:
      description: Retrieve a collection of all MAC pools.
      operationId: getMacPools
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMacPools_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getMacPools_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of MAC pools
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of MAC pools
      tags:
      - MAC Address and Client Identifier Resources
  /api/v2/macPools/{id}:
    delete:
      description: Delete an existing MAC pool.
      operationId: deleteMacPool
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a MAC pool
      tags:
      - MAC Address and Client Identifier Resources
    get:
      description: Retrieve information about a MAC pool.
      operationId: getMacPool
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMacPools_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getMacPools_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A MAC pool
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single MAC pool
      tags:
      - MAC Address and Client Identifier Resources
    put:
      description: Update an existing MAC pool.
      operationId: putMacPool
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/MACPoolPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/MACPoolPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/putMacPool_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/MACPool'
          description: The updated MAC pool
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a MAC pool
      tags:
      - MAC Address and Client Identifier Resources
  /api/v2/configurations/{collectionId}/macPools:
    get:
      description: Retrieve a collection of all MAC pools within a configuration.
      operationId: getConfigurationMacPools
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMacPools_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getMacPools_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of MAC pools
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of MAC pools
      tags:
      - MAC Address and Client Identifier Resources
    post:
      description: "Create a new MAC Pool. MAC pools control IP address allocation\
        \ based on a client's MAC Address. A MAC pool is a group containing one or\
        \ more MAC addresses. After creating a MAC pool and adding MAC addresses to\
        \ it, you can set deployment options to control which clients are allowed\
        \ to receive IP addresses from specific DHCP pools."
      operationId: postConfigurationMacPool
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              macPoolExampleRequiredFields:
                $ref: '#/components/examples/macPoolExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/MACPoolPostRequestBody'
          application/json:
            examples:
              macPoolExampleRequiredFields:
                $ref: '#/components/examples/macPoolExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/MACPoolPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/putMacPool_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/MACPool'
          description: The newly created MAC pool
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new MAC pool
      tags:
      - MAC Address and Client Identifier Resources
  /api/v2/merges:
    get:
      description: "Retrieve a collection of all merges for all blocks, networks,\
        \ and configurations. Merge resources are created when contiguous blocks,\
        \ networks, or IPv4 DHCP ranges are merged into a single block/network/range.\
        \ Merge resources are also created when a block is merged with a parent block\
        \ or configuration."
      operationId: getMerges
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMerges_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getMerges_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of merges
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of merges
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/merges/{id}:
    get:
      description: "Retrieve a single merge. Merge resources are created when contiguous\
        \ blocks, networks, or IPv4 DHCP ranges are merged into a single block/network/range.\
        \ Merge resources are also created when a block is merged with a parent block\
        \ or configuration."
      operationId: getMerge
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMerges_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getMerges_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A merge
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single merge
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/{collection}/{collectionId}/merges:
    get:
      description: "Retrieve a collection of all merges associated with a parent resource.\
        \ Merge resources are created when contiguous blocks, networks, or IPv4 DHCP\
        \ ranges are merged into a single block/network/range. Merge resources are\
        \ also created when a block is merged with a parent block or configuration."
      operationId: getCollectionMerges
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - configurations
          - networks
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMerges_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getMerges_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of merges
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of merges
      tags:
      - IPv4 and IPv6 Resources
    post:
      description: "Merge blocks, networks, or IPv4 DHCP ranges within a parent resource."
      operationId: postCollectionMerge
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - configurations
          - networks
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              mergeExampleIpv4Blocks:
                $ref: '#/components/examples/mergeExampleIpv4Blocks'
              mergeExampleIpv4Networks:
                $ref: '#/components/examples/mergeExampleIpv4Networks'
              mergeExampleIpv4DhcpRanges:
                $ref: '#/components/examples/mergeExampleIpv4DhcpRanges'
            schema:
              $ref: '#/components/schemas/postCollectionMerge_request'
          application/json:
            examples:
              mergeExampleIpv4Blocks:
                $ref: '#/components/examples/mergeExampleIpv4Blocks'
              mergeExampleIpv4Networks:
                $ref: '#/components/examples/mergeExampleIpv4Networks'
              mergeExampleIpv4DhcpRanges:
                $ref: '#/components/examples/mergeExampleIpv4DhcpRanges'
            schema:
              $ref: '#/components/schemas/postCollectionMerge_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMerges_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getMerges_200_response_1_data_inner'
          description: The newly created merge
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new merge
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/moves:
    get:
      description: "Retrieve a collection of all moves for all blocks, networks, and\
        \ configurations. Move resources are created when a block/network is moved\
        \ to a different parent block/network, an address is moved to another network,\
        \ a zone or resource record is moved to another parent zone, or a deployment\
        \ role is moved to another server."
      operationId: getMoves
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMoves_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getMoves_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of moves
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of moves
      tags:
      - IPv4 and IPv6 Resources
      - Server Resources
      - View and Zone Resources
  /api/v2/moves/{id}:
    get:
      description: "Retrieve a single move. Move resources are created when a block/network\
        \ is moved to a different parent block/network, an address is moved to another\
        \ network, a zone or resource record is moved to another parent zone, or a\
        \ deployment role is moved to another server."
      operationId: getMove
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMoves_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getMoves_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A move
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single move
      tags:
      - IPv4 and IPv6 Resources
      - Server Resources
      - View and Zone Resources
  /api/v2/{collection}/{collectionId}/moves:
    get:
      description: "Retrieve a collection of all moves associated with a resource.\
        \ Move resources are created when a block/network is moved to a different\
        \ parent block/network, an address is moved to another network, a zone or\
        \ resource record is moved to another parent zone, or a deployment role is\
        \ moved to another server."
      operationId: getCollectionMoves
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - addresses
          - blocks
          - networks
          - resourceRecords
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMoves_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getMoves_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of moves
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of moves
      tags:
      - IPv4 and IPv6 Resources
      - Server Resources
      - View and Zone Resources
    post:
      description: Move a resource to a new location and create a new move resource.
      operationId: postCollectionMove
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - addresses
          - blocks
          - networks
          - resourceRecords
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              moveExampleIp:
                $ref: '#/components/examples/moveExampleIp'
              moveExampleDns:
                $ref: '#/components/examples/moveExampleDns'
              moveExampleDeploymentRoles:
                $ref: '#/components/examples/moveExampleDeploymentRoles'
            schema:
              $ref: '#/components/schemas/postCollectionMove_request'
          application/json:
            examples:
              moveExampleIp:
                $ref: '#/components/examples/moveExampleIp'
              moveExampleDns:
                $ref: '#/components/examples/moveExampleDns'
              moveExampleDeploymentRoles:
                $ref: '#/components/examples/moveExampleDeploymentRoles'
            schema:
              $ref: '#/components/schemas/postCollectionMove_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getMoves_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getMoves_200_response_1_data_inner'
          description: The newly created move
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new move
      tags:
      - IPv4 and IPv6 Resources
      - Server Resources
      - View and Zone Resources
  /api/v2/namingPolicies:
    get:
      description: Retrieve all configured naming policies.
      operationId: getNamingPolicies
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicies_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getNamingPolicies_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of naming policies
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of naming policies
      tags:
      - Naming Policy Resources
    post:
      description: Create a new naming policy.
      operationId: postNamingPolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              namingPolicyExampleRequiredFields:
                $ref: '#/components/examples/namingPolicyExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/NamingPolicyPostRequestBody'
          application/json:
            examples:
              namingPolicyExampleRequiredFields:
                $ref: '#/components/examples/namingPolicyExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/NamingPolicyPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicy'
          description: The newly created naming policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new naming policy
      tags:
      - Naming Policy Resources
  /api/v2/namingPolicies/{id}:
    delete:
      description: Delete an existing naming policy.
      operationId: deleteNamingPolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a naming policy
      tags:
      - Naming Policy Resources
    get:
      description: Retrieve a specific naming policy.
      operationId: getNamingPolicy
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicy'
            text/html:
              schema:
                type: string
          description: A naming policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single naming policy
      tags:
      - Naming Policy Resources
    put:
      description: Update an existing naming policy.
      operationId: putNamingPolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/NamingPolicyPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/NamingPolicyPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicy'
          description: The updated naming policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a naming policy
      tags:
      - Naming Policy Resources
  /api/v2/{collection}/{collectionId}/namingPolicies:
    get:
      description: Retrieve all naming policies applied to a view or zone.
      operationId: getCollectionNamingPolicies
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicies_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getNamingPolicies_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of naming policies
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of applied naming policies
      tags:
      - Naming Policy Resources
    post:
      description: Apply a naming policy to a view or zone.
      operationId: postCollectionNamingPolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LinkedNamingPolicyPostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedNamingPolicyPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicy'
          description: The newly applied naming policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Apply a naming policy
      tags:
      - Naming Policy Resources
  /api/v2/{collection}/{collectionId}/namingPolicies/{id}:
    delete:
      description: Removes a naming policy from a view or zone.
      operationId: deleteCollectionNamingPolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Unapply naming policy
      tags:
      - Naming Policy Resources
    get:
      description: Retrieve a naming policy applied to a view or zone.
      operationId: getCollectionNamingPolicy
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicy'
            text/html:
              schema:
                type: string
          description: A naming policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve an applied naming policy
      tags:
      - Naming Policy Resources
  /api/v2/namingPolicyRestrictions:
    get:
      description: Retrieve a collection of all configured naming restrictions.
      operationId: getNamingPolicyRestrictions
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyRestrictions_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyRestrictions_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of naming restrictions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of naming restrictions
      tags:
      - Naming Policy Resources
    post:
      description: Create a new naming restriction. Naming restrictions are a list
        of words that can't be used as part of a resource record name. You can use
        naming restrictions to prevent reserved or undesirable words from being used
        in resource record names.
      operationId: postNamingPolicyRestriction
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              namingPolicyRestrictionExampleIpv4Blocks:
                $ref: '#/components/examples/namingPolicyRestrictionExampleIpv4Blocks'
            schema:
              $ref: '#/components/schemas/NamingPolicyRestrictionPostRequestBody'
          application/json:
            examples:
              namingPolicyRestrictionExampleIpv4Blocks:
                $ref: '#/components/examples/namingPolicyRestrictionExampleIpv4Blocks'
            schema:
              $ref: '#/components/schemas/NamingPolicyRestrictionPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyRestrictions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicyRestriction'
          description: The newly created naming restriction
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new naming restriction
      tags:
      - Naming Policy Resources
  /api/v2/namingPolicyRestrictions/{id}:
    delete:
      description: Delete an existing naming restriction.
      operationId: deleteNamingPolicyRestriction
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a naming restriction
      tags:
      - Naming Policy Resources
    get:
      description: Retrieve information about a naming restriction.
      operationId: getNamingPolicyRestriction
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyRestrictions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicyRestriction'
            text/html:
              schema:
                type: string
          description: A naming restriction
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single naming restriction
      tags:
      - Naming Policy Resources
    put:
      description: Update an existing naming restriction.
      operationId: putNamingPolicyRestriction
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/NamingPolicyRestrictionPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/NamingPolicyRestrictionPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyRestrictions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/NamingPolicyRestriction'
          description: The updated naming restriction
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a naming restriction
      tags:
      - Naming Policy Resources
  /api/v2/namingPolicyValues:
    get:
      description: Retrieve a collection of all naming policy values.
      operationId: getNamingPolicyValues
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyValues_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyValues_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of naming policy values
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of naming policy values
      tags:
      - Naming Policy Resources
    post:
      description: "Create a new naming policy value. A naming policy value is an\
        \ individual part of a resource record name, such as a specific character,\
        \ an incremental number, a number or text entered by the user, or a value\
        \ selected from the predefined list."
      operationId: postNamingPolicyValue
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              namingPolicyValueExampleConnector:
                $ref: '#/components/examples/namingPolicyValueExampleConnector'
              namingPolicyValueExampleIncremental:
                $ref: '#/components/examples/namingPolicyValueExampleIncremental'
              namingPolicyValueExampleInteger:
                $ref: '#/components/examples/namingPolicyValueExampleInteger'
              namingPolicyValueExampleRequired:
                $ref: '#/components/examples/namingPolicyValueExampleRequired'
              namingPolicyValueExampleText:
                $ref: '#/components/examples/namingPolicyValueExampleText'
            schema:
              $ref: '#/components/schemas/postNamingPolicyValue_request'
          application/json:
            examples:
              namingPolicyValueExampleConnector:
                $ref: '#/components/examples/namingPolicyValueExampleConnector'
              namingPolicyValueExampleIncremental:
                $ref: '#/components/examples/namingPolicyValueExampleIncremental'
              namingPolicyValueExampleInteger:
                $ref: '#/components/examples/namingPolicyValueExampleInteger'
              namingPolicyValueExampleRequired:
                $ref: '#/components/examples/namingPolicyValueExampleRequired'
              namingPolicyValueExampleText:
                $ref: '#/components/examples/namingPolicyValueExampleText'
            schema:
              $ref: '#/components/schemas/postNamingPolicyValue_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyValues_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyValues_200_response_1_data_inner'
          description: The newly created naming policy value
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new naming policy value
      tags:
      - Naming Policy Resources
  /api/v2/namingPolicyValues/{id}:
    delete:
      description: Delete an existing naming policy value.
      operationId: deleteNamingPolicyValue
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a naming policy value
      tags:
      - Naming Policy Resources
    get:
      description: Retrieve information about a naming policy value.
      operationId: getNamingPolicyValue
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyValues_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyValues_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A naming policy value
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single naming policy value
      tags:
      - Naming Policy Resources
    put:
      description: Update an existing naming policy value.
      operationId: putNamingPolicyValue
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putNamingPolicyValue_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putNamingPolicyValue_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyValues_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getNamingPolicyValues_200_response_1_data_inner'
          description: The updated naming policy value
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a naming policy value
      tags:
      - Naming Policy Resources
  /api/v2/networks:
    get:
      description: Retrieve a collection of all IPv4/IPv6 networks for all blocks
        and configurations.
      operationId: getNetworks
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of networks
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of networks
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/networks/{id}:
    delete:
      description: Delete an IPv4/IPv6 network.
      operationId: deleteNetwork
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a network
      tags:
      - IPv4 and IPv6 Resources
    get:
      description: Retrieve a single IPv4/IPv6 network.
      operationId: getNetwork
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A network
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single network
      tags:
      - IPv4 and IPv6 Resources
    put:
      description: Update an IPv4/IPv6 network.
      operationId: putNetwork
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putNetwork_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putNetwork_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_1_data_inner'
          description: The updated network
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a network
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/blocks/{collectionId}/networks:
    get:
      description: "Retrieve a collection of all IPv4/IPv6 networks for a block. Only\
        \ immediate child networks are returned, networks contained in sub blocks\
        \ are not included in the response."
      operationId: getBlockNetworks
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of networks
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of networks
      tags:
      - IPv4 and IPv6 Resources
    post:
      description: Create a new IPv4/IPv6 network within a block.
      operationId: postBlockNetwork
      parameters:
      - description: |
          The algorithm used to determine the starting address of the network when only a size was provided for the `range` value. If no header value is supplied, `NO_TRAVERSAL` will be used by default.
          - `NO_TRAVERSAL`: Attempt to find the available space directly under the specified parent block.
          - `DEPTH_FIRST`: Attempt to find the available space by recursively searching the parent block's children.
        explode: false
        in: header
        name: x-bcn-traversal-method
        required: false
        schema:
          enum:
          - NO_TRAVERSAL
          - DEPTH_FIRST
          type: string
        style: simple
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/postBlockNetwork_request'
          application/json:
            schema:
              $ref: '#/components/schemas/postBlockNetwork_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_1_data_inner'
          description: The newly created network
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new network
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/merges/{collectionId}/networks:
    get:
      description: Retrieve a collection of merged IPv4 networks.
      operationId: getMergeNetworks
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of merged networks
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of merged networks
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/splits/{collectionId}/networks:
    get:
      description: Retrieve a collection of IPv4 or IPv6 network splits.
      operationId: getSplitNetworks
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of network partitions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of network partitions
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/merges/{collectionId}/networks/{id}:
    get:
      description: Retrieve an IPv4 merged network.
      operationId: getMergeNetwork
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A merged network
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single merged network
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/splits/{collectionId}/networks/{id}:
    get:
      description: Retrieve an IPv4 or IPv6 network partition.
      operationId: getSplitNetwork
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getNetworks_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A network partition
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single network partition
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/transactions/{collectionId}/operations:
    get:
      description: Retrieve a collection of all operations performed during a transaction.
      operationId: getTransactionOperations
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTransactionOperations_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTransactionOperations_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of operations
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of operations
      tags:
      - Admin Resources
  /api/v2/transactions/{collectionId}/operations/{id}:
    get:
      description: Retrieve information about a single operation performed during
        a transaction.
      operationId: getTransactionOperation
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTransactionOperations_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
            text/html:
              schema:
                type: string
          description: An operation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single operation
      tags:
      - Admin Resources
  /api/v2/policyItems:
    get:
      description: Retrieve all configured response policy items.
      operationId: getPolicyItems
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getPolicyItems_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getPolicyItems_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of policy items
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of policy items
      tags:
      - View and Zone Resources
  /api/v2/policyItems/{id}:
    delete:
      description: Delete an existing response policy item.
      operationId: deletePolicyItem
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a policy item
      tags:
      - View and Zone Resources
    get:
      description: Retrieve a specific response policy item.
      operationId: getPolicyItem
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getPolicyItems_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyItem'
            text/html:
              schema:
                type: string
          description: A policy item
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single policy item
      tags:
      - View and Zone Resources
    put:
      description: Update an existing response policy item.
      operationId: putPolicyItem
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyItemPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyItemPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getPolicyItems_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyItem'
          description: The updated policy item
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a policy item
      tags:
      - View and Zone Resources
  /api/v2/responsePolicies/{collectionId}/policyItems:
    get:
      description: Retrieve all response policy items with a response policy.
      operationId: getResponsePolicyPolicyItems
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getPolicyItems_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getPolicyItems_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of policy items
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of policy items
      tags:
      - View and Zone Resources
    post:
      description: Create a new response policy item within a response policy. Response
        policy items contain the hosts and domain names that you the response policy
        would apply to. You must first create a response policy resource before adding
        a response polity item.
      operationId: postResponsePolicyPolicyItem
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              policyItemExampleRequiredFields:
                $ref: '#/components/examples/policyItemExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/ResponsePolicyItemPostRequestBody'
          application/json:
            examples:
              policyItemExampleRequiredFields:
                $ref: '#/components/examples/policyItemExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/ResponsePolicyItemPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getPolicyItems_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicyItem'
          description: The newly created policy item
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new policy item
      tags:
      - View and Zone Resources
  /api/v2/namingPolicies/{collectionId}/policyRestrictions:
    get:
      description: Retrieve a collection of all configured naming policy restrictions.
        A naming policy restriction is a list of words that cannot be used as part
        of a resource record name.
      operationId: getNamingPolicyPolicyRestrictions
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of naming policy restrictions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of naming policy restrictions
      tags:
      - Naming Policy Resources
  /api/v2/namingPolicies/{collectionId}/policyRestrictions/{id}:
    get:
      description: Retrieve a naming policy restriction. A naming policy restriction
        is a list of words that cannot be used as part of a resource record name.
      operationId: getNamingPolicyPolicyRestriction
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResource'
            text/html:
              schema:
                type: string
          description: A naming policy restriction
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single naming policy restriction
      tags:
      - Naming Policy Resources
  /api/v2/namingPolicies/{collectionId}/policyValues:
    get:
      description: "Retrieve a collection of all configured naming policy values.\
        \ A naming policy value is an individual part of a resource record, such as\
        \ a specific character, an incremented number, a number or text character\
        \ entered by the user, or a value selected from a predefined list."
      operationId: getNamingPolicyPolicyValues
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of naming policy values
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of naming policy values
      tags:
      - Naming Policy Resources
  /api/v2/namingPolicies/{collectionId}/policyValues/{id}:
    get:
      description: "Retrieve a naming policy value. A naming policy value is an individual\
        \ part of a resource record, such as a specific character, an incremented\
        \ number, a number or text character entered by the user, or a value selected\
        \ from a predefined list."
      operationId: getNamingPolicyPolicyValue
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResource'
            text/html:
              schema:
                type: string
          description: A naming policy value
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single naming policy value
      tags:
      - Naming Policy Resources
  /api/v2/ranges:
    get:
      description: Retrieve a collection of all DHCPv4/DHCPv6 ranges for all networks
        and configurations.
      operationId: getRanges
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of ranges
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of ranges
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/ranges/{id}:
    delete:
      description: Delete a DHCPv4/DHCPv6 range.
      operationId: deleteRange
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a range
      tags:
      - IPv4 and IPv6 Resources
    get:
      description: Retrieve a single DHCPv4/DHCPv6 range.
      operationId: getRange
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A range
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single range
      tags:
      - IPv4 and IPv6 Resources
    put:
      description: Update a DHCPv4/DHCPv6 range.
      operationId: putRange
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putRange_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putRange_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response_1_data_inner'
          description: The updated range
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a range
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/merges/{collectionId}/ranges:
    get:
      description: Retrieve a collection of merged IPv4 DHCP ranges.
      operationId: getMergeRanges
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of merged DHCP ranges
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of merged DHCP ranges
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/networks/{collectionId}/ranges:
    get:
      description: Retrieve a collection of all DHCPv4/DHCPv6 ranges for a network.
      operationId: getNetworkRanges
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of ranges
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of ranges
      tags:
      - IPv4 and IPv6 Resources
    post:
      description: Create a new DHCPv4/DHCPv6 range for a network.
      operationId: postNetworkRange
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              rangeExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/rangeExampleIpv4StartAndEndAddress'
              rangeExampleIpv4OffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv4OffsetAndSize'
              rangeExampleIpv4OffsetAndPercentage:
                $ref: '#/components/examples/rangeExampleIpv4OffsetAndPercentage'
              rangeExampleIpv4NegativeOffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv4NegativeOffsetAndSize'
              rangeExampleIpv6StartAndEndAddress:
                $ref: '#/components/examples/rangeExampleIpv6StartAndEndAddress'
              rangeExampleIpv6OffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv6OffsetAndSize'
              rangeExampleIpv6OffsetAndPercentage:
                $ref: '#/components/examples/rangeExampleIpv6OffsetAndPercentage'
              rangeExampleIpv6NegativeOffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv6NegativeOffsetAndSize'
              rangeExampleIpv6NextAvailable:
                $ref: '#/components/examples/rangeExampleIpv6NextAvailable'
            schema:
              $ref: '#/components/schemas/postNetworkRange_request'
          application/json:
            examples:
              rangeExampleIpv4StartAndEndAddress:
                $ref: '#/components/examples/rangeExampleIpv4StartAndEndAddress'
              rangeExampleIpv4OffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv4OffsetAndSize'
              rangeExampleIpv4OffsetAndPercentage:
                $ref: '#/components/examples/rangeExampleIpv4OffsetAndPercentage'
              rangeExampleIpv4NegativeOffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv4NegativeOffsetAndSize'
              rangeExampleIpv6StartAndEndAddress:
                $ref: '#/components/examples/rangeExampleIpv6StartAndEndAddress'
              rangeExampleIpv6OffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv6OffsetAndSize'
              rangeExampleIpv6OffsetAndPercentage:
                $ref: '#/components/examples/rangeExampleIpv6OffsetAndPercentage'
              rangeExampleIpv6NegativeOffsetAndSize:
                $ref: '#/components/examples/rangeExampleIpv6NegativeOffsetAndSize'
              rangeExampleIpv6NextAvailable:
                $ref: '#/components/examples/rangeExampleIpv6NextAvailable'
            schema:
              $ref: '#/components/schemas/postNetworkRange_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response_1_data_inner'
          description: The newly created range
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new range
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/merges/{collectionId}/ranges/{id}:
    get:
      description: Retrieve a merged IPv4 DHCP range.
      operationId: getMergeRange
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getRanges_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A merged DHCP range
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single merged IPv4 DHCP range
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/realms:
    get:
      description: Retrieve information about all Kerberos realms.
      operationId: getRealms
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRealms_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getRealms_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of realms
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of realms
      tags:
      - Kerberos Resources
  /api/v2/realms/{id}:
    delete:
      description: Delete an existing Kerberos realm.
      operationId: deleteRealm
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a realm
      tags:
      - Kerberos Resources
    get:
      description: Retrieve information about a Kerberos realm.
      operationId: getRealm
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRealms_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosRealm'
            text/html:
              schema:
                type: string
          description: A Kerberos realm
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single realm
      tags:
      - Kerberos Resources
    put:
      description: Update an existing Kerberos realm.
      operationId: putRealm
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/KerberosRealmPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/KerberosRealmPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRealms_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosRealm'
          description: The updated realm
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a realm
      tags:
      - Kerberos Resources
  /api/v2/configurations/{collectionId}/realms:
    get:
      description: Retrieve information about all Kerberos realms within a configuration.
      operationId: getConfigurationRealms
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRealms_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getRealms_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of realms
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of realms
      tags:
      - Kerberos Resources
    post:
      description: Create a new Kerberos realm.
      operationId: postConfigurationRealm
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              realmExampleRequiredFields:
                $ref: '#/components/examples/realmExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/KerberosRealmPostRequestBody'
          application/json:
            examples:
              realmExampleRequiredFields:
                $ref: '#/components/examples/realmExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/KerberosRealmPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRealms_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosRealm'
          description: The newly created realm
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new Kerberos realm
      tags:
      - Kerberos Resources
  /api/v2/reconciliationPolicies:
    get:
      description: "Retrieve a collection of all IPv4/IPv6 reconciliation policies\
        \ for all configurations, blocks, and networks."
      operationId: getReconciliationPolicies
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicies_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicies_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of reconciliation policies
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of reconciliation policies
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/reconciliationPolicies/{id}:
    delete:
      description: Delete an IPv4/IPv6 reconciliation policy.
      operationId: deleteReconciliationPolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a reconciliation policy
      tags:
      - IPv4 and IPv6 Resources
    get:
      description: Retrieve a single IPv4/IPv6 reconciliation policy.
      operationId: getReconciliationPolicy
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicies_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A reconciliation policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single reconciliation policy
      tags:
      - IPv4 and IPv6 Resources
    put:
      description: Update an IPv4/IPv6 reconciliation policy.
      operationId: putReconciliationPolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putReconciliationPolicy_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putReconciliationPolicy_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicies_200_response_1_data_inner'
          description: The updated reconciliation policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a reconciliation policy
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/{collection}/{collectionId}/reconciliationPolicies:
    get:
      description: Retrieve a collection of all IPv4/IPv6 reconciliation policies
        configured for a resource.
      operationId: getCollectionReconciliationPolicies
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - configurations
          - networks
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicies_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicies_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of reconciliation policies
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of reconciliation policies
      tags:
      - IPv4 and IPv6 Resources
    post:
      description: "Create a new reconciliation policy for a configuration (IPv4 only),\
        \ block, or network."
      operationId: postCollectionReconciliationPolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - configurations
          - networks
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              reconciliationPolicyExampleIpv4:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4'
              reconciliationPolicyExampleIpv6:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6'
            schema:
              $ref: '#/components/schemas/postCollectionReconciliationPolicy_request'
          application/json:
            examples:
              reconciliationPolicyExampleIpv4:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv4'
              reconciliationPolicyExampleIpv6:
                $ref: '#/components/examples/reconciliationPolicyExampleIpv6'
            schema:
              $ref: '#/components/schemas/postCollectionReconciliationPolicy_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getReconciliationPolicies_200_response_1_data_inner'
          description: The newly created reconciliation policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new reconciliation policy
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/resourceRecords:
    get:
      description: Retrieve a list of all resource records.
      operationId: getResourceRecords
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of resource records
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of resource records
      tags:
      - Resource Record Resources
  /api/v2/resourceRecords/{id}:
    delete:
      description: Delete a specific resource record.
      operationId: deleteResourceRecord
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a resource record
      tags:
      - Resource Record Resources
    get:
      description: Retrieve information about a specific resource record.
      operationId: getResourceRecord
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A resource record
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single resource record
      tags:
      - Resource Record Resources
    put:
      description: Update an existing resource record.
      operationId: putResourceRecord
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putResourceRecord_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putResourceRecord_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response_1_data_inner'
          description: The updated resource record
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a resource record
      tags:
      - Resource Record Resources
  /api/v2/addresses/{collectionId}/resourceRecords:
    get:
      description: Retrieve all resource records linked to an IP address.
      operationId: getAddressResourceRecords
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of resource records
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of linked resource records
      tags:
      - Resource Record Resources
    post:
      description: Link a Host or External Host record to an IP address.
      operationId: postAddressResourceRecord
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/postAddressResourceRecord_request'
          application/json:
            schema:
              $ref: '#/components/schemas/postAddressResourceRecord_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/postAddressResourceRecord_201_response'
            application/json:
              schema:
                $ref: '#/components/schemas/postAddressResourceRecord_201_response_1'
          description: The linked resource record
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Link a resource record to an address
      tags:
      - Resource Record Resources
  /api/v2/{collection}/{collectionId}/resourceRecords:
    get:
      description: Retrieve a list of all resource records within a specified DNS
        zone or DNS zone template.
      operationId: getCollectionResourceRecords
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - addresses
          - templates
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of resource records
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of resource records
      tags:
      - Resource Record Resources
    post:
      description: Create a new resource record within a specified DNS zone or DNS
        zone template.
      operationId: postCollectionResourceRecord
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - addresses
          - templates
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              resourceRecordExampleAlias:
                $ref: '#/components/examples/resourceRecordExampleAlias'
              resourceRecordExampleExternalHost:
                $ref: '#/components/examples/resourceRecordExampleExternalHost'
              resourceRecordExampleGeneric:
                $ref: '#/components/examples/resourceRecordExampleGeneric'
              resourceRecordExampleHinfo:
                $ref: '#/components/examples/resourceRecordExampleHinfo'
              resourceRecordExampleHost:
                $ref: '#/components/examples/resourceRecordExampleHost'
              resourceRecordExampleMx:
                $ref: '#/components/examples/resourceRecordExampleMx'
              resourceRecordExampleNaptr:
                $ref: '#/components/examples/resourceRecordExampleNaptr'
              resourceRecordExampleSrv:
                $ref: '#/components/examples/resourceRecordExampleSrv'
              resourceRecordExampleTxt:
                $ref: '#/components/examples/resourceRecordExampleTxt'
            schema:
              $ref: '#/components/schemas/postCollectionResourceRecord_request'
          application/json:
            examples:
              resourceRecordExampleAlias:
                $ref: '#/components/examples/resourceRecordExampleAlias'
              resourceRecordExampleExternalHost:
                $ref: '#/components/examples/resourceRecordExampleExternalHost'
              resourceRecordExampleGeneric:
                $ref: '#/components/examples/resourceRecordExampleGeneric'
              resourceRecordExampleHinfo:
                $ref: '#/components/examples/resourceRecordExampleHinfo'
              resourceRecordExampleHost:
                $ref: '#/components/examples/resourceRecordExampleHost'
              resourceRecordExampleMx:
                $ref: '#/components/examples/resourceRecordExampleMx'
              resourceRecordExampleNaptr:
                $ref: '#/components/examples/resourceRecordExampleNaptr'
              resourceRecordExampleSrv:
                $ref: '#/components/examples/resourceRecordExampleSrv'
              resourceRecordExampleTxt:
                $ref: '#/components/examples/resourceRecordExampleTxt'
            schema:
              $ref: '#/components/schemas/postCollectionResourceRecord_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response_1_data_inner'
          description: The newly created resource record
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new resource record
      tags:
      - Resource Record Resources
  /api/v2/addresses/{collectionId}/resourceRecords/{id}:
    delete:
      description: Delete a Host or External Host record link to an IP address.
      operationId: deleteAddressResourceRecord
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a linked resource record
      tags:
      - Resource Record Resources
    get:
      description: Retrieve a specific resource record linked to an IP address.
      operationId: getAddressResourceRecord
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getResourceRecords_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A linked resource record
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single linked resource record
      tags:
      - Resource Record Resources
  /api/v2/responsePolicies:
    get:
      description: Retrieve information about all response policies.
      operationId: getResponsePolicies
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResponsePolicies_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getResponsePolicies_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of response policies
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of response policies
      tags:
      - View and Zone Resources
  /api/v2/responsePolicies/{id}:
    delete:
      description: Delete an existing response policy.
      operationId: deleteResponsePolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a response policy
      tags:
      - View and Zone Resources
    get:
      description: Retrieve a specific response policy.
      operationId: getResponsePolicy
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResponsePolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicy'
            text/html:
              schema:
                type: string
          description: A response policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single response policy
      tags:
      - View and Zone Resources
    put:
      description: Update an existing response policy.
      operationId: putResponsePolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/ResponsePolicyPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResponsePolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicy'
          description: The updated response policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a response policy
      tags:
      - View and Zone Resources
  /api/v2/configurations/{collectionId}/responsePolicies:
    get:
      description: Retrieve all response policies within a configuration.
      operationId: getConfigurationResponsePolicies
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResponsePolicies_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getResponsePolicies_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of response policies
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of response policies
      tags:
      - View and Zone Resources
    post:
      description: "Create a new response policy within a specific configuration.\
        \ Response policies allow users to manage a recursive DNS resolver attempting\
        \ to respond to the queries that might not be desirable or legal. You can\
        \ use this feature to block, redirect, or allow particular domain name queries."
      operationId: postConfigurationResponsePolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              responsePolicyExampleRequiredFields:
                $ref: '#/components/examples/responsePolicyExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/ResponsePolicyPostRequestBody'
          application/json:
            examples:
              responsePolicyExampleRequiredFields:
                $ref: '#/components/examples/responsePolicyExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/ResponsePolicyPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResponsePolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePolicy'
          description: The newly created response policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new response policy
      tags:
      - View and Zone Resources
  /api/v2/{collection}/{collectionId}/restrictedRanges:
    get:
      description: Retrieve a collection of all IPv4 blocks and/or networks that are
        configured as the IP restriction range for a view or zone.
      operationId: getCollectionRestrictedRanges
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionRestrictedRanges_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionRestrictedRanges_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of restricted ranges
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of restricted ranges
      tags:
      - IPv4 and IPv6 Resources
    post:
      description: Add an IPv4 block or network to the IP restriction list for a view
        or zone.
      operationId: postCollectionRestrictedRange
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/postCollectionRestrictedRange_request'
          application/json:
            schema:
              $ref: '#/components/schemas/postCollectionRestrictedRange_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionRestrictedRanges_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionRestrictedRanges_200_response_1_data_inner'
          description: The newly created restricted range
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new restricted range
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/{collection}/{collectionId}/restrictedRanges/{id}:
    delete:
      description: Remove an IPv4 block or network from the IP restriction list for
        a view or zone.
      operationId: deleteCollectionRestrictedRange
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a restricted range
      tags:
      - IPv4 and IPv6 Resources
    get:
      description: Retrieve an IPv4 block or network that is part of the IP restriction
        range for a view or zone.
      operationId: getCollectionRestrictedRange
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionRestrictedRanges_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionRestrictedRanges_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A restricted range
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single restricted range
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/{collection}/{collectionId}/restrictedZones:
    get:
      description: Retrieve a list of DNS views and zones to which the IPv4 block
        or network is restricted.
      operationId: getCollectionRestrictedZones
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - networks
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionRestrictedZones_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionRestrictedZones_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of restricted zones
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of restricted zones
      tags:
      - View and Zone Resources
    post:
      description: Restrict an IPv4 block or network to a specific DNS view or zone.
      operationId: postCollectionRestrictedZone
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - networks
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/postCollectionRestrictedZone_request'
          application/json:
            schema:
              $ref: '#/components/schemas/postCollectionRestrictedZone_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionRestrictedZones_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionRestrictedZones_200_response_1_data_inner'
          description: The newly created restricted zone
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new restricted zone
      tags:
      - View and Zone Resources
  /api/v2/{collection}/{collectionId}/restrictedZones/{id}:
    delete:
      description: Remove a DNS view or zone restriction from an IPv4 block or network.
      operationId: deleteCollectionRestrictedZone
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - networks
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a restricted zone
      tags:
      - View and Zone Resources
    get:
      description: Retrieve a specific DNS view and zone to which the IPv4 block or
        network is restricted.
      operationId: getCollectionRestrictedZone
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - networks
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionRestrictedZones_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionRestrictedZones_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A restricted zone
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single restricted zone
      tags:
      - View and Zone Resources
  /api/v2/serverGroups:
    get:
      description: Retrieve a collection of all server groups.
      operationId: getServerGroups
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServerGroups_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getServerGroups_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of server groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of server groups
      tags:
      - Server Resources
  /api/v2/serverGroups/{id}:
    delete:
      description: "Delete an existing server group. Deleting a server group removes\
        \ any DNS and DHCP deployment options inherited by the servers linked to the\
        \ server group. When a server group is deleted, only the logical container\
        \ is deleted and the servers that are linked to the server group are not deleted."
      operationId: deleteServerGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a server group
      tags:
      - Server Resources
    get:
      description: Retrieve information about a server group.
      operationId: getServerGroup
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServerGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
            text/html:
              schema:
                type: string
          description: A server group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single server group
      tags:
      - Server Resources
    put:
      description: Update an existing server group.
      operationId: putServerGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ServerGroupPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/ServerGroupPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServerGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
          description: The updated server group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a server group
      tags:
      - Server Resources
  /api/v2/configurations/{collectionId}/serverGroups:
    get:
      description: Retrieve a collection of all server groups within a configuration.
      operationId: getConfigurationServerGroups
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServerGroups_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getServerGroups_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of server groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of server groups
      tags:
      - Server Resources
    post:
      description: "Create a server group within a configuration. Server groups provide\
        \ a logical container that allows you to apply DNS and DHCP deployment options\
        \ to all servers that make up the group. Once you have created a server group,\
        \ you can add one or more DNS/DHCP Servers to the server group. DNS or DHCP\
        \ options can then be applied to the server group and these options will be\
        \ inherited by all servers that are part of that server group. When DNS or\
        \ DHCP options are removed from the server group, the options are no longer\
        \ inherited by the servers that are part of that group."
      operationId: postConfigurationServerGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              serverGroupExampleRequiredFields:
                $ref: '#/components/examples/serverGroupExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/ServerGroupPostRequestBody'
          application/json:
            examples:
              serverGroupExampleRequiredFields:
                $ref: '#/components/examples/serverGroupExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/ServerGroupPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServerGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerGroup'
          description: The newly created server group
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new server group
      tags:
      - Server Resources
  /api/v2/servers:
    get:
      description: Retrieve a list of all servers.
      operationId: getServers
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServers_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getServers_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of servers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of servers
      tags:
      - Server Resources
  /api/v2/servers/{id}:
    delete:
      description: Delete a specific server.
      operationId: deleteServer
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a server
      tags:
      - Server Resources
    get:
      description: Retrieve information about a server.
      operationId: getServer
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getServers_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A server
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single server
      tags:
      - Server Resources
    patch:
      description: Update the information and configuration of an existing server.
      operationId: patchServer
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/patchServer_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getServers_200_response_1_data_inner'
          description: The updated server
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Partially update a server
      tags:
      - Server Resources
    put:
      description: Update the configuration of an existing server.
      operationId: putServer
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putServer_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putServer_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getServers_200_response_1_data_inner'
          description: The updated server
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a server
      tags:
      - Server Resources
  /api/v2/{collection}/{collectionId}/servers:
    get:
      description: Retrieve a list of all servers that are part of a server group
        or DHCP zone group.
      operationId: getCollectionServers
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - configurations
          - serverGroups
          - servers
          - zoneGroups
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionServers_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionServers_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of linked servers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of linked servers
      tags:
      - Server Resources
    post:
      description: Add a server to a server group or DHCP zone group.
      operationId: postCollectionServer
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - configurations
          - serverGroups
          - servers
          - zoneGroups
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/postCollectionServer_request'
          application/json:
            schema:
              $ref: '#/components/schemas/postCollectionServer_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getServers_200_response_1_data_inner'
          description: The linked server
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Link a server to a server group
      tags:
      - Server Resources
  /api/v2/configurations/{collectionId}/servers:
    get:
      description: Retrieve a list of all servers that are part of a configuration.
      operationId: getConfigurationServers
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionServers_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionServers_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of servers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of servers
      tags:
      - Server Resources
    post:
      description: Configure a new DNS/DHCP Server or high availability server within
        a configuration.
      operationId: postConfigurationServer
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              serverExampleBddsServer:
                $ref: '#/components/examples/serverExampleBddsServer'
              serverExampleHaServer:
                $ref: '#/components/examples/serverExampleHaServer'
            schema:
              $ref: '#/components/schemas/postConfigurationServer_request'
          application/json:
            examples:
              serverExampleBddsServer:
                $ref: '#/components/examples/serverExampleBddsServer'
              serverExampleHaServer:
                $ref: '#/components/examples/serverExampleHaServer'
            schema:
              $ref: '#/components/schemas/postConfigurationServer_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getServers_200_response_1_data_inner'
          description: The newly created server
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new server
      tags:
      - Server Resources
  /api/v2/databases/{collectionId}/servers:
    get:
      description: Retrieve a list of all Address Manager servers in database replication.
      operationId: getDatabaseServers
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDatabaseServers_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDatabaseServers_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of database servers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of database servers
      tags:
      - Server Resources
    post:
      description: Configure database replication by adding a standby server to the
        database replication configuration. The newly added stanby server must first
        be in a trust relationship with the current Address Manager server before
        you can add the standby server.
      operationId: postDatabaseServer
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AddressManagerServerPostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/AddressManagerServerPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDatabaseServers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManagerServer'
          description: The newly created database server
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Add a standby server for database replication
      tags:
      - Server Resources
  /api/v2/servers/{collectionId}/servers:
    get:
      description: Retrieve all physical server nodes of a high availability server
        that is under control of an Address Manager server.
      operationId: getServerServers
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServerServers_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getServerServers_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of servers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of servers
      tags:
      - Server Resources
  /api/v2/{collection}/{collectionId}/servers/{id}:
    delete:
      description: Remove a specific server from a server group.
      operationId: deleteCollectionServer
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - configurations
          - serverGroups
          - servers
          - zoneGroups
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Unlink a server from a server group
      tags:
      - Server Resources
    get:
      description: Retrieve information about a server that is part of a server group.
      operationId: getCollectionServer
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - configurations
          - serverGroups
          - servers
          - zoneGroups
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionServers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionServers_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A linked server
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single linked server
      tags:
      - Server Resources
  /api/v2/databases/{collectionId}/servers/{id}:
    delete:
      description: Remove an Address Manager standby server from a database replication
        cluster.
      operationId: deleteDatabaseServer
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Removes a server from a database replication cluster
      tags:
      - Server Resources
    get:
      description: Retrieve information about a specific Address Manager server.
      operationId: getDatabaseServer
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDatabaseServers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManagerServer'
            text/html:
              schema:
                type: string
          description: A database server
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single database server
      tags:
      - Server Resources
    patch:
      description: Update the information and configuration of an Address Manager
        server configured within a database replication cluster.
      operationId: patchDatabaseServer
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/patchServer_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDatabaseServers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManagerServer'
          description: The updated server
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Partially update a server from a database replication cluster
      tags:
      - Server Resources
  /api/v2/servicePrincipals:
    get:
      description: "Retrieve a list of service principal configurations. A service\
        \ principal is the name by which a client uniquely identifies an instance\
        \ of a service, and is associated with the security principal in whose security\
        \ context the service executes."
      operationId: getServicePrincipals
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServicePrincipals_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getServicePrincipals_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of service principals
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of service principals
      tags:
      - Kerberos Resources
  /api/v2/servicePrincipals/{id}:
    delete:
      description: Delete an existing service principal.
      operationId: deleteServicePrincipal
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a service principal
      tags:
      - Kerberos Resources
    get:
      description: "Retrieve information about a service principal configuration.\
        \ A service principal is the name by which a client uniquely identifies an\
        \ instance of a service, and is associated with the security principal in\
        \ whose security context the service executes."
      operationId: getServicePrincipal
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServicePrincipals_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosServicePrincipal'
            text/html:
              schema:
                type: string
          description: A service principal
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single service principal
      tags:
      - Kerberos Resources
    patch:
      description: Partially update an existing service principal.
      operationId: patchServicePrincipal
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/patchServicePrincipal_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServicePrincipals_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosServicePrincipal'
          description: The updated service principal
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Partially update a service principal
      tags:
      - Kerberos Resources
    put:
      description: Update an existing service principal.
      operationId: putServicePrincipal
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/KerberosServicePrincipalPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/KerberosServicePrincipalPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServicePrincipals_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosServicePrincipal'
          description: The updated service principal
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a service principal
      tags:
      - Kerberos Resources
  /api/v2/realms/{collectionId}/servicePrincipals:
    get:
      description: Retrieve a list of all service principals configured within a realm.
      operationId: getRealmServicePrincipals
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServicePrincipals_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getServicePrincipals_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of service principals
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of service principals
      tags:
      - Kerberos Resources
    post:
      description: "Create a new service principal within a realm. A service principal\
        \ is the name by which a client uniquely identifies an instance of a service,\
        \ and is associated with the security principal in whose security context\
        \ the service executes."
      operationId: postRealmServicePrincipal
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              servicePrincipalExampleRequiredFields:
                $ref: '#/components/examples/servicePrincipalExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/KerberosServicePrincipalPostRequestBody'
          application/json:
            examples:
              servicePrincipalExampleRequiredFields:
                $ref: '#/components/examples/servicePrincipalExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/KerberosServicePrincipalPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServicePrincipals_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/KerberosServicePrincipal'
          description: The newly created service principal
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new service principal
      tags:
      - Kerberos Resources
  /api/v2/servers/{collectionId}/services:
    get:
      description: Retrieve a collection of all services configured on a server. Service
        resources returned will depend on supported services for the DNS/DHCP Server
        version. The LicenseServer resource is only returned for DNS/DHCP Server version
        9.5 and greater.
      operationId: getServerServices
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServerServices_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getServerServices_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
            text/cloud-config:
              schema:
                type: string
          description: A collection of server services
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of server services
      tags:
      - Server Resources
  /api/v2/servers/{collectionId}/services/{id}:
    get:
      description: Retrieve information about a service configured on a server.
      operationId: getServerService
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServerServices_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getServerServices_200_response_1_data_inner'
            text/html:
              schema:
                type: string
            text/cloud-config:
              schema:
                type: string
          description: A server service
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single server service
      tags:
      - Server Resources
    put:
      description: Configure a service on a server.
      operationId: putServerService
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putServerService_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putServerService_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getServerServices_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getServerServices_200_response_1_data_inner'
          description: The updated server service
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a server service
      tags:
      - Server Resources
  /api/v2/sessions:
    get:
      description: "Retrieve information about all user sessions including the user\
        \ that logged in, the IP address of the device used to log in, the login and\
        \ logout time, the state of the session, and authenticator used to log in."
      operationId: getSessions
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSessions_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getSessions_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of sessions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of sessions
      tags:
      - Admin Resources
    post:
      description: Initiates a new user session.
      operationId: postSession
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              sessionExampleRequiredFields:
                $ref: '#/components/examples/sessionExampleRequiredFields'
              sessionExampleReadOnly:
                $ref: '#/components/examples/sessionExampleReadOnly'
            schema:
              $ref: '#/components/schemas/UserSessionPostRequestBody'
          application/json:
            examples:
              sessionExampleRequiredFields:
                $ref: '#/components/examples/sessionExampleRequiredFields'
              sessionExampleReadOnly:
                $ref: '#/components/examples/sessionExampleReadOnly'
            schema:
              $ref: '#/components/schemas/UserSessionPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSessions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
          description: The newly created session
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new session
      tags:
      - Admin Resources
  /api/v2/sessions/current:
    get:
      description: Retrieve information about the current user session.
      operationId: getSessionCurrent
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSessions_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getSessions_200_response_1'
            text/html:
              schema:
                type: string
          description: A session
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve the current session
      tags:
      - Admin Resources
    patch:
      description: Update a user session.
      operationId: patchSessionCurrent
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            examples:
              sessionExampleLoggedOut:
                $ref: '#/components/examples/sessionExampleLoggedOut'
            schema:
              $ref: '#/components/schemas/patchSessionCurrent_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSessions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
          description: The updated session
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Partially update the current session
      tags:
      - Admin Resources
  /api/v2/sessions/{id}:
    get:
      description: Retrieve information about a user session.
      operationId: getSession
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSessions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
            text/html:
              schema:
                type: string
          description: A session
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single session
      tags:
      - Admin Resources
    patch:
      description: Update a user session.
      operationId: patchSession
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            examples:
              sessionExampleLoggedOut:
                $ref: '#/components/examples/sessionExampleLoggedOut'
              sessionExampleTerminated:
                $ref: '#/components/examples/sessionExampleTerminated'
            schema:
              $ref: '#/components/schemas/patchSessionCurrent_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSessions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
          description: The updated session
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Partially update a session
      tags:
      - Admin Resources
  /api/v2/users/{collectionId}/sessions:
    get:
      description: Retrieve a collection of all sessions of a user.
      operationId: getUserSessions
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSessions_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getSessions_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of user sessions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of user sessions
      tags:
      - Admin Resources
  /api/v2/users/{collectionId}/sessions/{id}:
    get:
      description: Retrieve information about a sessions of a user.
      operationId: getUserSession
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSessions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserSession'
            text/html:
              schema:
                type: string
          description: A session
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single session
      tags:
      - Admin Resources
  /api/v2/settings:
    get:
      description: Retrieve information about the Address Manager administration settings.
      operationId: getSettings
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSettings_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getSettings_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of settings resources
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of settings resources
      tags:
      - Admin Resources
  /api/v2/settings/{id}:
    get:
      description: Retrieve information about a specific Address Manager administration
        setting.
      operationId: getSetting
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSettings_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getSettings_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A settings resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single settings resource
      tags:
      - Admin Resources
    put:
      description: Update the Address Manager administration settings.
      operationId: putSetting
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putSetting_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putSetting_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSettings_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getSettings_200_response_1_data_inner'
          description: The updated settings resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Updates a settings resource
      tags:
      - Admin Resources
  /api/v2/tags/{collectionId}/sharedResources:
    get:
      description: Retrieve a list of shared resources.
      operationId: getTagSharedResources
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of shared resources
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of shared resources
      tags:
      - Tag Resources
    post:
      description: Add a shared resource
      operationId: postTagSharedResource
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LinkedResourcePostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedResourcePostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResource'
          description: The newly created shared resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new shared resource
      tags:
      - Tag Resources
  /api/v2/tags/{collectionId}/sharedResources/{id}:
    delete:
      description: Delete a shared resource.
      operationId: deleteTagSharedResource
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a shared resource
      tags:
      - Tag Resources
  /api/v2/signingKeys:
    get:
      description: "Retrieve a list of TSIG Keys, Key Signing Keys, Zone Signing Keys,\
        \ Entrust Key Signing Keys, and Entrust Zone Signing Keys."
      operationId: getSigningKeys
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSigningKeys_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getSigningKeys_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of signing keys
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of signing keys
      tags:
      - DNSSEC Resources
      - TSIG Key Resources
  /api/v2/signingKeys/{id}:
    delete:
      description: "Delete an existing TSIG Key, Key Signing Key, Zone Signing Key,\
        \ Entrust Key Signing Key, or Entrust Zone Signing Key."
      operationId: deleteSigningKey
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a signing key
      tags:
      - DNSSEC Resources
      - TSIG Key Resources
    get:
      description: "Retrieve a specific TSIG Key, Key Signing Key, Zone Signing Key,\
        \ Entrust Key Signing Key, or Entrust Zone Signing Key."
      operationId: getSigningKey
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSigningKeys_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getSigningKeys_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A signing key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single signing key
      tags:
      - DNSSEC Resources
      - TSIG Key Resources
    patch:
      description: "Partially update an existing TSIG Key, Key Signing Key, Zone Signing\
        \ Key, Entrust Key Signing Key, or Entrust Zone Signing Key."
      operationId: patchSigningKey
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/patchSigningKey_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSigningKeys_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getSigningKeys_200_response_1_data_inner'
          description: The updated server
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Partially update a signing key
      tags:
      - DNSSEC Resources
      - TSIG Key Resources
    put:
      description: Update an existing TSIG Key.
      operationId: putSigningKey
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TSIGKeyPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/TSIGKeyPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/putSigningKey_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/TSIGKey'
          description: The updated signing key
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a signing key
      tags:
      - DNSSEC Resources
      - TSIG Key Resources
  /api/v2/{collection}/{collectionId}/signingKeys:
    get:
      description: "Retrieve a list of TSIG Keys, Key Signing Keys, Zone Signing Keys,\
        \ Entrust Key Signing Keys, or Entrust Zone Signing Keys."
      operationId: getCollectionSigningKeys
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - configurations
          - networks
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSigningKeys_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getSigningKeys_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of signing keys
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of signing keys
      tags:
      - DNSSEC Resources
      - TSIG Key Resources
    post:
      description: Create a new TSIG Key.
      operationId: postCollectionSigningKey
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - configurations
          - networks
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              signingKeyExampleTsig:
                $ref: '#/components/examples/signingKeyExampleTsig'
              signingKeyExampleGeneratedTsig:
                $ref: '#/components/examples/signingKeyExampleGeneratedTsig'
            schema:
              $ref: '#/components/schemas/TSIGKeyPostRequestBody'
          application/json:
            examples:
              signingKeyExampleTsig:
                $ref: '#/components/examples/signingKeyExampleTsig'
              signingKeyExampleGeneratedTsig:
                $ref: '#/components/examples/signingKeyExampleGeneratedTsig'
            schema:
              $ref: '#/components/schemas/TSIGKeyPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/putSigningKey_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/TSIGKey'
          description: The newly created signing key
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new signing key
      tags:
      - DNSSEC Resources
      - TSIG Key Resources
  /api/v2/signingPolicies:
    get:
      description: Retrieve a collection of all DNSSEC signing policies.
      operationId: getSigningPolicies
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSigningPolicies_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getSigningPolicies_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of signing policies
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of signing policies
      tags:
      - Admin Resources
    post:
      description: "Create a new DNSSEC signing policy. DNSSEC signing policies simplify\
        \ administration by allowing you to configure DNSSEC settings in one place,\
        \ and then apply the policy to forward and reverse zones. A DNSSEC signing\
        \ policy contains all of the parameters needed to define the Key Signing Key\
        \ and Zone Signing Key for a zone, including the settings for automatic key\
        \ rollover."
      operationId: postSigningPolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              signingPolicyExampleRequiredFields:
                $ref: '#/components/examples/signingPolicyExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/DNSSECSigningPolicyPostRequestBody'
          application/json:
            examples:
              signingPolicyExampleRequiredFields:
                $ref: '#/components/examples/signingPolicyExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/DNSSECSigningPolicyPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSigningPolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DNSSECSigningPolicy'
          description: The newly created signing policy
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new signing policy
      tags:
      - Admin Resources
  /api/v2/signingPolicies/{id}:
    delete:
      description: Delete an existing DNSSEC signing policy.
      operationId: deleteSigningPolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a signing policy
      tags:
      - Admin Resources
    get:
      description: Retrieve information about a DNSSEC signing policy.
      operationId: getSigningPolicy
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSigningPolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DNSSECSigningPolicy'
            text/html:
              schema:
                type: string
          description: A signing policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single signing policy
      tags:
      - Admin Resources
    put:
      description: Update an existing DNSSEC signing policy.
      operationId: putSigningPolicy
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DNSSECSigningPolicyPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/DNSSECSigningPolicyPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSigningPolicies_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DNSSECSigningPolicy'
          description: The updated signing policy
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a signing policy
      tags:
      - Admin Resources
  /api/v2/splits:
    get:
      description: Retrieve a collection of all split IPv4 or IPv6 blocks and networks.
      operationId: getSplits
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSplits_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getSplits_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of split resources
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of split resources
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/splits/{id}:
    get:
      description: Retrieve a split IPv4 or IPv6 block or network.
      operationId: getSplit
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSplits_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getSplits_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A split resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single split resource
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/{collection}/{collectionId}/splits:
    get:
      description: Retrieve a collection of split IPv4 or IPv6 blocks and networks.
      operationId: getCollectionSplits
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - configurations
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSplits_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getSplits_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of split resources
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of split resources
      tags:
      - IPv4 and IPv6 Resources
    post:
      description: "Split an IPv4 or IPv6 block or network into multiple smaller blocks\
        \ or networks. A block or network can be split exponentially into two block\
        \ or networks, up to a maximum of 1024."
      operationId: postCollectionSplit
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - blocks
          - configurations
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              splitExampleIpv4Block:
                $ref: '#/components/examples/splitExampleIpv4Block'
              splitExampleIpv4Network:
                $ref: '#/components/examples/splitExampleIpv4Network'
            schema:
              $ref: '#/components/schemas/postCollectionSplit_request'
          application/json:
            examples:
              splitExampleIpv4Block:
                $ref: '#/components/examples/splitExampleIpv4Block'
              splitExampleIpv4Network:
                $ref: '#/components/examples/splitExampleIpv4Network'
            schema:
              $ref: '#/components/schemas/postCollectionSplit_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSplits_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getSplits_200_response_1_data_inner'
          description: The newly created split resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new split resource
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/subclasses:
    get:
      description: Retrieve a collection of all DHCP subclasses for all configurations.
      operationId: getSubclasses
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSubclasses_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getSubclasses_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of subclient classes
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of subclasses
      tags:
      - DHCP Client Class Resources
  /api/v2/subclasses/{id}:
    delete:
      description: Delete a DHCP subclass.
      operationId: deleteSubclass
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a subclass
      tags:
      - DHCP Client Class Resources
    get:
      description: Retrieve a single DHCP subclass.
      operationId: getSubclass
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSubclasses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4Subclass'
            text/html:
              schema:
                type: string
          description: A subclass
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single subclass
      tags:
      - DHCP Client Class Resources
    put:
      description: Update a DHCP subclass.
      operationId: putSubclass
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPv4SubclassPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPv4SubclassPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSubclasses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4Subclass'
          description: The updated subclass
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a subclass
      tags:
      - DHCP Client Class Resources
  /api/v2/clientClasses/{collectionId}/subclasses:
    get:
      description: Retrieve a collection of all DHCP subclasses for a DHCP client
        class.
      operationId: getClientClassSubclasses
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSubclasses_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getSubclasses_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of subclasses
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of subclasses
      tags:
      - DHCP Client Class Resources
    post:
      description: Add a new DHCP subclass to a DHCP client class.
      operationId: postClientClassSubclass
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              subclassExampleRequiredFields:
                $ref: '#/components/examples/subclassExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/DHCPv4SubclassPostRequestBody'
          application/json:
            examples:
              subclassExampleRequiredFields:
                $ref: '#/components/examples/subclassExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/DHCPv4SubclassPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getSubclasses_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPv4Subclass'
          description: The newly created subclass
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new subclass
      tags:
      - DHCP Client Class Resources
  /api/v2/tagGroups:
    get:
      description: Retrieve a list of all tag groups.
      operationId: getTagGroups
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTagGroups_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTagGroups_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of tag groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of tag groups
      tags:
      - Tag Resources
    post:
      description: Create a new tag group. Tags help you apply existing business practices
        and organizational structures to your network design. Tags are arranged in
        a hierarchical tree structure and any number of elements are supported at
        each level of the hierarchy below the top-level tag group.
      operationId: postTagGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              tagGroupExampleRequiredFields:
                $ref: '#/components/examples/tagGroupExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/TagGroupPostRequestBody'
          application/json:
            examples:
              tagGroupExampleRequiredFields:
                $ref: '#/components/examples/tagGroupExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/TagGroupPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTagGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/TagGroup'
          description: The newly created tag group
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new tag group
      tags:
      - Tag Resources
  /api/v2/tagGroups/{id}:
    delete:
      description: Delete an existing tag group.
      operationId: deleteTagGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a tag group
      tags:
      - Tag Resources
    get:
      description: Retrieve information about a tag group.
      operationId: getTagGroup
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTagGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/TagGroup'
            text/html:
              schema:
                type: string
          description: A tag group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single tag group
      tags:
      - Tag Resources
    put:
      description: Update an existing tag group.
      operationId: putTagGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TagGroupPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/TagGroupPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTagGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/TagGroup'
          description: The updated tag group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a tag group
      tags:
      - Tag Resources
  /api/v2/tags/{collectionId}/taggedResources:
    get:
      description: Retrieve a list of resources that a tag has been applied to.
      operationId: getTagTaggedResources
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of tagged resources
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of tagged resources
      tags:
      - Tag Resources
    post:
      description: Add a tag to a specified resource.
      operationId: postTagTaggedResource
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LinkedResourcePostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedResourcePostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResource'
          description: The newly created tagged resource
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new tagged resource
      tags:
      - Tag Resources
  /api/v2/tags/{collectionId}/taggedResources/{id}:
    delete:
      description: Delete a tag from a resource.
      operationId: deleteTagTaggedResource
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a tagged resource
      tags:
      - Tag Resources
    get:
      description: Retrieve information about a resource that a tag has been applied
        to.
      operationId: getTagTaggedResource
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedResource'
            text/html:
              schema:
                type: string
          description: A tagged resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single tagged resource
      tags:
      - Tag Resources
  /api/v2/tags:
    get:
      description: Retrieve a list of all tags.
      operationId: getTags
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTags_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTags_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of tags
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of tags
      tags:
      - Tag Resources
  /api/v2/tags/{id}:
    delete:
      description: Delete an existing tag.
      operationId: deleteTag
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a tag
      tags:
      - Tag Resources
    get:
      description: Retrieve information about a tag.
      operationId: getTag
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTags_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            text/html:
              schema:
                type: string
          description: A tag
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single tag
      tags:
      - Tag Resources
    put:
      description: Update an existing tag.
      operationId: putTag
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TagPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/TagPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTags_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: The updated tag
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a tag
      tags:
      - Tag Resources
  /api/v2/{collection}/{collectionId}/tags:
    get:
      description: Retrieve a list of all tags that are linked to a resource.
      operationId: getCollectionTags
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - accessControlLists
          - addresses
          - authenticators
          - blocks
          - clientClasses
          - clientIdentifiers
          - configurations
          - deploymentOptionDefinitions
          - deploymentOptions
          - deploymentRoles
          - deviceSubtypes
          - deviceTypes
          - devices
          - dns64
          - files
          - groups
          - hsmConfigurations
          - hsmServers
          - interfaces
          - ipGroups
          - keyDistributionCenters
          - locations
          - macAddresses
          - macPools
          - namingPolicies
          - namingPolicyRestrictions
          - namingPolicyValues
          - networks
          - notificationGroups
          - ranges
          - realms
          - reconciliationPolicies
          - reports
          - resourceRecords
          - responsePolicies
          - schedules
          - serverGroups
          - servers
          - servicePrincipals
          - signingKeys
          - signingPolicies
          - subclasses
          - tagGroups
          - tags
          - templates
          - tftpGroups
          - users
          - vendorProfiles
          - views
          - zoneDeclarations
          - zoneGroups
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTags_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTags_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of linked tags
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of linked tags
      tags:
      - Tag Resources
    post:
      description: Link a tag to a resource.
      operationId: postCollectionTag
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - accessControlLists
          - addresses
          - authenticators
          - blocks
          - clientClasses
          - clientIdentifiers
          - configurations
          - deploymentOptionDefinitions
          - deploymentOptions
          - deploymentRoles
          - deviceSubtypes
          - deviceTypes
          - devices
          - dns64
          - files
          - groups
          - hsmConfigurations
          - hsmServers
          - interfaces
          - ipGroups
          - keyDistributionCenters
          - locations
          - macAddresses
          - macPools
          - namingPolicies
          - namingPolicyRestrictions
          - namingPolicyValues
          - networks
          - notificationGroups
          - ranges
          - realms
          - reconciliationPolicies
          - reports
          - resourceRecords
          - responsePolicies
          - schedules
          - serverGroups
          - servers
          - servicePrincipals
          - signingKeys
          - signingPolicies
          - subclasses
          - tagGroups
          - tags
          - templates
          - tftpGroups
          - users
          - vendorProfiles
          - views
          - zoneDeclarations
          - zoneGroups
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LinkedTagPostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedTagPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTags_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: The linked tag
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Link a tag to a resource
      tags:
      - Tag Resources
  /api/v2/tagGroups/{collectionId}/tags:
    get:
      description: Retrieve a list of all tags within a tag group.
      operationId: getTagGroupTags
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTags_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTags_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of tags
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of tags
      tags:
      - Tag Resources
    post:
      description: Create a new tag under a tag group. Tags help you apply existing
        business practices and organizational structures to your network design. Tags
        are arranged in a hierarchical tree structure and any number of elements are
        supported at each level of the hierarchy below the top-level tag group.
      operationId: postTagGroupTag
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              tagExampleRequiredFields:
                $ref: '#/components/examples/tagExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/TagPostRequestBody'
          application/json:
            examples:
              tagExampleRequiredFields:
                $ref: '#/components/examples/tagExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/TagPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTags_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: The newly created tag
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new tag
      tags:
      - Tag Resources
  /api/v2/tags/{collectionId}/tags:
    get:
      description: Retrieve a list of all child tags under a parent tag.
      operationId: getTagTags
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTags_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTags_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of tags
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of tags
      tags:
      - Tag Resources
    post:
      description: Create a new child tag under a parent tag.
      operationId: postTagTag
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              tagExampleRequiredFields:
                $ref: '#/components/examples/tagExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/TagPostRequestBody'
          application/json:
            examples:
              tagExampleRequiredFields:
                $ref: '#/components/examples/tagExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/TagPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTags_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: The newly created tag
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new tag
      tags:
      - Tag Resources
  /api/v2/{collection}/{collectionId}/tags/{id}:
    delete:
      description: Unlink a tag from a resource.
      operationId: deleteCollectionTag
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - accessControlLists
          - addresses
          - authenticators
          - blocks
          - clientClasses
          - clientIdentifiers
          - configurations
          - deploymentOptionDefinitions
          - deploymentOptions
          - deploymentRoles
          - deviceSubtypes
          - deviceTypes
          - devices
          - dns64
          - files
          - groups
          - hsmConfigurations
          - hsmServers
          - interfaces
          - ipGroups
          - keyDistributionCenters
          - locations
          - macAddresses
          - macPools
          - namingPolicies
          - namingPolicyRestrictions
          - namingPolicyValues
          - networks
          - notificationGroups
          - ranges
          - realms
          - reconciliationPolicies
          - reports
          - resourceRecords
          - responsePolicies
          - schedules
          - serverGroups
          - servers
          - servicePrincipals
          - signingKeys
          - signingPolicies
          - subclasses
          - tagGroups
          - tags
          - templates
          - tftpGroups
          - users
          - vendorProfiles
          - views
          - zoneDeclarations
          - zoneGroups
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Unlink a tag from a resource
      tags:
      - Tag Resources
    get:
      description: Retrieve a specific tag that is linked to a resource.
      operationId: getCollectionTag
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - accessControlLists
          - addresses
          - authenticators
          - blocks
          - clientClasses
          - clientIdentifiers
          - configurations
          - deploymentOptionDefinitions
          - deploymentOptions
          - deploymentRoles
          - deviceSubtypes
          - deviceTypes
          - devices
          - dns64
          - files
          - groups
          - hsmConfigurations
          - hsmServers
          - interfaces
          - ipGroups
          - keyDistributionCenters
          - locations
          - macAddresses
          - macPools
          - namingPolicies
          - namingPolicyRestrictions
          - namingPolicyValues
          - networks
          - notificationGroups
          - ranges
          - realms
          - reconciliationPolicies
          - reports
          - resourceRecords
          - responsePolicies
          - schedules
          - serverGroups
          - servers
          - servicePrincipals
          - signingKeys
          - signingPolicies
          - subclasses
          - tagGroups
          - tags
          - templates
          - tftpGroups
          - users
          - vendorProfiles
          - views
          - zoneDeclarations
          - zoneGroups
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTags_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            text/html:
              schema:
                type: string
          description: A linked tag
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single linked tag
      tags:
      - Tag Resources
  /api/v2/users/{collectionId}/tasks:
    get:
      description: Retrieve a collection of all tasks for a user.
      operationId: getUserTasks
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUserTasks_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getUserTasks_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of tasks
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of tasks
      tags:
      - Task Resources
    post:
      description: Create a new task for a user.
      operationId: postUserTask
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              taskExampleRequiredFields:
                $ref: '#/components/examples/taskExampleRequiredFields'
              taskExampleOptionalFields:
                $ref: '#/components/examples/taskExampleOptionalFields'
            schema:
              $ref: '#/components/schemas/TaskPostRequestBody'
          application/json:
            examples:
              taskExampleRequiredFields:
                $ref: '#/components/examples/taskExampleRequiredFields'
              taskExampleOptionalFields:
                $ref: '#/components/examples/taskExampleOptionalFields'
            schema:
              $ref: '#/components/schemas/TaskPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUserTasks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: The newly created task
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new task
      tags:
      - Task Resources
  /api/v2/users/{collectionId}/tasks/{id}:
    delete:
      description: Delete a task for a user.
      operationId: deleteUserTask
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a task
      tags:
      - Task Resources
    get:
      description: Retrieve a single task for a user.
      operationId: getUserTask
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUserTasks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
            text/html:
              schema:
                type: string
          description: A task
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single task
      tags:
      - Task Resources
    put:
      description: Update a task for a user.
      operationId: putUserTask
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TaskPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/TaskPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUserTasks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: The updated task
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a task
      tags:
      - Task Resources
  /api/v2/templateApplications:
    get:
      description: Retrieve a collection of all IPv4 network template and DNS zone
        template applications to resources.
      operationId: getTemplateApplications
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTemplateApplications_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplateApplications_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of template applications
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of template applications
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
  /api/v2/templateApplications/{id}:
    get:
      description: Retrieve information about an IPv4 template or DNS zone template
        application to a resource.
      operationId: getTemplateApplication
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTemplateApplications_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplateApplications_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A template application
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single template application
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
  /api/v2/{collection}/{collectionId}/templateApplications:
    get:
      description: Retrieve a collection of all template applications for a resource.
      operationId: getCollectionTemplateApplications
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - networks
          - templates
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTemplateApplications_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplateApplications_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of template applications
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of template applications
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
    post:
      description: Apply an IPv4 template or DNS zone template to a resource.
      operationId: postCollectionTemplateApplication
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - networks
          - templates
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              templateApplicationExampleIpv4Template:
                $ref: '#/components/examples/templateApplicationExampleIpv4Template'
              templateApplicationExampleZoneTemplate:
                $ref: '#/components/examples/templateApplicationExampleZoneTemplate'
            schema:
              $ref: '#/components/schemas/postCollectionTemplateApplication_request'
          application/json:
            examples:
              templateApplicationExampleIpv4Template:
                $ref: '#/components/examples/templateApplicationExampleIpv4Template'
              templateApplicationExampleZoneTemplate:
                $ref: '#/components/examples/templateApplicationExampleZoneTemplate'
            schema:
              $ref: '#/components/schemas/postCollectionTemplateApplication_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTemplateApplications_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplateApplications_200_response_1_data_inner'
          description: The newly created template application
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new template application
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
  /api/v2/templateItems:
    get:
      description: Retrieve a collection of all configured IPv4 template items.
      operationId: getTemplateItems
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTemplateItems_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplateItems_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of template items
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of template items
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/templateItems/{id}:
    delete:
      description: Delete an existing IPv4 template item.
      operationId: deleteTemplateItem
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a template item
      tags:
      - IPv4 and IPv6 Resources
    get:
      description: Retrieve information about an IPv4 template item.
      operationId: getTemplateItem
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTemplateItems_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplateItems_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A template item
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single template item
      tags:
      - IPv4 and IPv6 Resources
    put:
      description: Update an existing IPv4 template item.
      operationId: putTemplateItem
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putTemplateItem_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putTemplateItem_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTemplateItems_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplateItems_200_response_1_data_inner'
          description: The updated template item
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a template item
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/templates/{collectionId}/templateItems:
    get:
      description: Retrieve a collection of IPv4 template items within an IPv4 template.
      operationId: getTemplateTemplateItems
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTemplateItems_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplateItems_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of template items
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of template items
      tags:
      - IPv4 and IPv6 Resources
    post:
      description: Create a new IPv4 template item within an IPv4 template.
      operationId: postTemplateTemplateItem
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/postTemplateTemplateItem_request'
          application/json:
            schema:
              $ref: '#/components/schemas/postTemplateTemplateItem_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/postTemplateTemplateItem_201_response'
            application/json:
              schema:
                $ref: '#/components/schemas/postTemplateTemplateItem_201_response_1'
          description: The newly created template item
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new template item
      tags:
      - IPv4 and IPv6 Resources
  /api/v2/templates:
    get:
      description: Retrieve a collection of all IPv4 templates and DNS zone templates.
      operationId: getTemplates
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTemplates_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplates_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of templates
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of templates
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
  /api/v2/templates/{id}:
    delete:
      description: Delete an existing IPv4 template or DNS zone template.
      operationId: deleteTemplate
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a template
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
    get:
      description: Retrieve information about an IPv4 template or DNS zone template.
      operationId: getTemplate
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTemplates_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplates_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A template
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single template
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
    put:
      description: Update an existing IPv4 template or DNS zone template.
      operationId: putTemplate
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putTemplate_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putTemplate_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTemplates_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplates_200_response_1_data_inner'
          description: The updated template
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a template
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
  /api/v2/{collection}/{collectionId}/templates:
    get:
      description: Retrieve a collection of all IPv4 templates or DNS zone templates.
      operationId: getCollectionTemplates
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - configurations
          - views
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionTemplates_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionTemplates_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of templates
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of templates
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
    post:
      description: Create a new IPv4 template or DNS zone template.
      operationId: postCollectionTemplate
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - configurations
          - views
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              templateExampleIpv4Template:
                $ref: '#/components/examples/templateExampleIpv4Template'
              templateExampleZoneTemplate:
                $ref: '#/components/examples/templateExampleZoneTemplate'
            schema:
              $ref: '#/components/schemas/postCollectionTemplate_request'
          application/json:
            examples:
              templateExampleIpv4Template:
                $ref: '#/components/examples/templateExampleIpv4Template'
              templateExampleZoneTemplate:
                $ref: '#/components/examples/templateExampleZoneTemplate'
            schema:
              $ref: '#/components/schemas/postCollectionTemplate_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTemplates_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getTemplates_200_response_1_data_inner'
          description: The newly created template
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new template
      tags:
      - IPv4 and IPv6 Resources
      - View and Zone Resources
  /api/v2/tftpGroups:
    get:
      description: Retrieve a list of all TFTP groups.
      operationId: getTftpGroups
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTftpGroups_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTftpGroups_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of TFTP groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of TFTP groups
      tags:
      - TFTP Resources
  /api/v2/tftpGroups/{id}:
    delete:
      description: Delete an existing TFTP group.
      operationId: deleteTftpGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a TFTP group
      tags:
      - TFTP Resources
    get:
      description: Retrieve information about a TFTP group.
      operationId: getTftpGroup
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTftpGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/TFTPGroup'
            text/html:
              schema:
                type: string
          description: A TFTP group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single TFTP group
      tags:
      - TFTP Resources
    put:
      description: Update an existing TFTP group.
      operationId: putTftpGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TFTPGroupPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/TFTPGroupPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTftpGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/TFTPGroup'
          description: The updated TFTP group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a TFTP group
      tags:
      - TFTP Resources
  /api/v2/configurations/{collectionId}/tftpGroups:
    get:
      description: Retrieve information about all TFTP groups within a configuration.
      operationId: getConfigurationTftpGroups
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTftpGroups_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTftpGroups_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of TFTP groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of TFTP groups
      tags:
      - TFTP Resources
    post:
      description: Create a new TFTP group within a configuration. A TFTP group can
        contain a folder or directory structure and the files for the service.
      operationId: postConfigurationTftpGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              tftpGroupExampleRequiredFields:
                $ref: '#/components/examples/tftpGroupExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/TFTPGroupPostRequestBody'
          application/json:
            examples:
              tftpGroupExampleRequiredFields:
                $ref: '#/components/examples/tftpGroupExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/TFTPGroupPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTftpGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/TFTPGroup'
          description: The newly created TFTP group
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new TFTP group
      tags:
      - TFTP Resources
  /api/v2/transactions:
    get:
      description: Retrieve information about all transaction history events.
      operationId: getTransactions
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTransactions_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTransactions_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of transactions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of transactions
      tags:
      - Admin Resources
    post:
      description: Undo a specific transaction.
      operationId: postTransaction
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              transactionExampleUndo:
                $ref: '#/components/examples/transactionExampleUndo'
            schema:
              $ref: '#/components/schemas/TransactionPostRequestBody'
          application/json:
            examples:
              transactionExampleUndo:
                $ref: '#/components/examples/transactionExampleUndo'
            schema:
              $ref: '#/components/schemas/TransactionPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTransactions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: The newly created transaction
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new transaction
      tags:
      - Admin Resources
  /api/v2/transactions/{id}:
    get:
      description: Retrieve information about a transaction history event.
      operationId: getTransaction
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTransactions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
            text/html:
              schema:
                type: string
          description: A transaction
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single transaction
      tags:
      - Admin Resources
  /api/v2/{collection}/{collectionId}/transactions:
    get:
      description: Retrieve information about transaction history events that occurred
        within a configuration.
      operationId: getCollectionTransactions
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - accessControlLists
          - addresses
          - authenticators
          - blocks
          - clientClasses
          - clientIdentifiers
          - configurations
          - deploymentOptionDefinitions
          - deploymentOptions
          - deploymentRoles
          - deviceSubtypes
          - deviceTypes
          - devices
          - dns64
          - files
          - groups
          - hsmConfigurations
          - hsmServers
          - interfaces
          - ipGroups
          - keyDistributionCenters
          - locations
          - macAddresses
          - macPools
          - namingPolicies
          - namingPolicyRestrictions
          - namingPolicyValues
          - networks
          - notificationGroups
          - ranges
          - realms
          - reconciliationPolicies
          - reports
          - resourceRecords
          - responsePolicies
          - schedules
          - serverGroups
          - servers
          - servicePrincipals
          - signingKeys
          - signingPolicies
          - subclasses
          - tagGroups
          - tags
          - tasks
          - templateItems
          - templates
          - tftpGroups
          - users
          - vendorProfiles
          - views
          - zoneDeclarations
          - zoneGroups
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTransactions_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTransactions_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of transactions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of transactions
      tags:
      - Admin Resources
  /api/v2/trustRelationships:
    get:
      description: Retrieve information about the trust relationships configured between
        this Address Manager server and another Address Manager server.
      operationId: getTrustRelationships
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTrustRelationships_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getTrustRelationships_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of trust relationships
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of trust relationships
      tags:
      - Admin Resources
    post:
      description: Configure trust relationship between this Address Manager server
        and another Address Manager server. You can configure a trust relationship
        between a maximum of 3 remote Address Manager servers. You must configure
        a trust relationship with at least one remote Address Manager server before
        you can configure database replication.
      operationId: postTrustRelationship
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/TrustRelationshipPostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/TrustRelationshipPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTrustRelationships_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/TrustRelationship'
          description: The newly created trust relationship
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a trust relationship
      tags:
      - Admin Resources
  /api/v2/trustRelationships/{id}:
    delete:
      description: Remove a trust relationship between remote Address Manager servers.
      operationId: deleteTrustRelationship
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a trust relationship
      tags:
      - Admin Resources
    get:
      description: Retrieve information about a trust relationship configured between
        this Address Manager server and another Address Manager server.
      operationId: getTrustRelationship
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTrustRelationships_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/TrustRelationship'
            text/html:
              schema:
                type: string
          description: A trust relationship
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single trust relationship
      tags:
      - Admin Resources
    patch:
      description: Update an existing trust relationship.
      operationId: patchTrustRelationship
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/patchTrustRelationship_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getTrustRelationships_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/TrustRelationship'
          description: The updated trust relationship
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Partially update a trust relationship
      tags:
      - Admin Resources
  /api/v2/deployments/{collectionId}/updatedRecords:
    get:
      description: Retrieve a list of all updated resource records for a specified
        selective deployment.
      operationId: getDeploymentUpdatedRecords
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentAddedRecords_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getDeploymentAddedRecords_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of resource records
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of resource records
      tags:
      - Resource Record Resources
  /api/v2/deployments/{collectionId}/updatedRecords/{id}:
    get:
      description: Retrieve an updated resource record for a specified selective deployment.
      operationId: getDeploymentUpdatedRecord
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getDeploymentAddedRecords_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/GenericRecord'
            text/html:
              schema:
                type: string
          description: A resource record
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single resource record
      tags:
      - Resource Record Resources
  /api/v2/userDefinedFieldDefinitions:
    get:
      description: Retrieve information about all user defined fields.
      operationId: getUserDefinedFieldDefinitions
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUserDefinedFieldDefinitions_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getUserDefinedFieldDefinitions_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of user-defined field definitions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of user-defined field definitions
      tags:
      - Admin Resources
    post:
      description: Create a new user defined field to capture and track information
        associated with objects when the information for each object is unique. User
        defined fields are used only within Address Manager and aren't deployed to
        managed servers.
      operationId: postUserDefinedFieldDefinition
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              userDefinedFieldDefinitionExampleText:
                $ref: '#/components/examples/userDefinedFieldDefinitionExampleText'
            schema:
              $ref: '#/components/schemas/UserDefinedFieldDefinitionPostRequestBody'
          application/json:
            examples:
              userDefinedFieldDefinitionExampleText:
                $ref: '#/components/examples/userDefinedFieldDefinitionExampleText'
            schema:
              $ref: '#/components/schemas/UserDefinedFieldDefinitionPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUserDefinedFieldDefinitions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldDefinition'
          description: The newly created user-defined field definition
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new user-defined field definition
      tags:
      - Admin Resources
  /api/v2/userDefinedFieldDefinitions/{id}:
    delete:
      description: Delete an existing user defined field.
      operationId: deleteUserDefinedFieldDefinition
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a user-defined field definition
      tags:
      - Admin Resources
    get:
      description: Retrieve information about a user defined field.
      operationId: getUserDefinedFieldDefinition
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUserDefinedFieldDefinitions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldDefinition'
            text/html:
              schema:
                type: string
          description: A user-defined field definition
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single user-defined field defintion
      tags:
      - Admin Resources
    put:
      description: Update an existing user defined field.
      operationId: putUserDefinedFieldDefinition
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldDefinitionPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedFieldDefinitionPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUserDefinedFieldDefinitions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldDefinition'
          description: The updated user-defined field definition
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a user-defined field definition
      tags:
      - Admin Resources
  /api/v2/userDefinedLinkDefinitions:
    get:
      description: Retrieves a list of all user-defined link definitions.
      operationId: getUserDefinedLinkDefinitions
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUserDefinedLinkDefinitions_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getUserDefinedLinkDefinitions_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of user-defined link definitions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of user-defined link definitions
      tags:
      - Admin Resources
    post:
      description: "Creates a new user-defined link definition to provide a logical\
        \ link between two objects in Address Manager. Once you have created a user-defined\
        \ link definition, you can create a create the user-defined link to link the\
        \ eligible entities."
      operationId: postUserDefinedLinkDefinition
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              userDefinedLinkDefinitionExampleUndo:
                $ref: '#/components/examples/userDefinedLinkDefinitionExampleUndo'
            schema:
              $ref: '#/components/schemas/UserDefinedLinkDefinitionPostRequestBody'
          application/json:
            examples:
              userDefinedLinkDefinitionExampleUndo:
                $ref: '#/components/examples/userDefinedLinkDefinitionExampleUndo'
            schema:
              $ref: '#/components/schemas/UserDefinedLinkDefinitionPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUserDefinedLinkDefinitions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedLinkDefinition'
          description: The newly created user-defined link definition
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new user-defined link definition
      tags:
      - Admin Resources
  /api/v2/userDefinedLinkDefinitions/{id}:
    delete:
      description: Delete an existing user-defined link definition by passing in the
        ID of the user-defined link defition that you would like to delete.
      operationId: deleteUserDefinedLinkDefinition
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a user-defined link definition
      tags:
      - Admin Resources
    get:
      description: Retrieve information about a specific user-defined link definition
        by passing in the ID of the user-defined link definition.
      operationId: getUserDefinedLinkDefinition
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUserDefinedLinkDefinitions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedLinkDefinition'
            text/html:
              schema:
                type: string
          description: A user-defined link definition
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single user-defined link definition
      tags:
      - Admin Resources
    put:
      description: Update an existing user-defined link definition by passing in the
        ID of the user-defined link defition that you would like to update.
      operationId: putUserDefinedLinkDefinition
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserDefinedLinkDefinitionPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/UserDefinedLinkDefinitionPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUserDefinedLinkDefinitions_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedLinkDefinition'
          description: The updated user-defined link definition
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a user-defined link definition
      tags:
      - Admin Resources
  /api/v2/{collection}/{collectionId}/userDefinedLinks:
    get:
      description: Retrieve a collection of all user-defined links for a linked resource.
      operationId: getCollectionUserDefinedLinks
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - addresses
          - blocks
          - devices
          - ipGroups
          - macAddresses
          - macPools
          - networks
          - ranges
          - serverGroups
          - servers
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionUserDefinedLinks_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionUserDefinedLinks_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of user-defined link
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of user-defined links
      tags:
      - Admin Resources
    post:
      description: Create a new user-defined link between a source and destination
        resource. The resource in the path is the destination resource for the user-defined
        link.
      operationId: postCollectionUserDefinedLink
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - addresses
          - blocks
          - devices
          - ipGroups
          - macAddresses
          - macPools
          - networks
          - ranges
          - serverGroups
          - servers
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              userDefinedLinkExampleLinkResource:
                $ref: '#/components/examples/userDefinedLinkExampleLinkResource'
              userDefinedLinkExampleLinkResourceWithDescription:
                $ref: '#/components/examples/userDefinedLinkExampleLinkResourceWithDescription'
            schema:
              $ref: '#/components/schemas/UserDefinedLinkedResourcePostRequestBody'
          application/json:
            examples:
              userDefinedLinkExampleLinkResource:
                $ref: '#/components/examples/userDefinedLinkExampleLinkResource'
              userDefinedLinkExampleLinkResourceWithDescription:
                $ref: '#/components/examples/userDefinedLinkExampleLinkResourceWithDescription'
            schema:
              $ref: '#/components/schemas/UserDefinedLinkedResourcePostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionUserDefinedLinks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedLinkedResource'
          description: The newly created user-defined link
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new user-defined link
      tags:
      - Admin Resources
  /api/v2/{collection}/{collectionId}/userDefinedLinks/{id}:
    delete:
      description: Delete a user-defined link for a linked resource.
      operationId: deleteCollectionUserDefinedLink
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - addresses
          - blocks
          - devices
          - ipGroups
          - macAddresses
          - macPools
          - networks
          - ranges
          - serverGroups
          - servers
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a user-defined link
      tags:
      - Admin Resources
    get:
      description: Retrieve a single user-defined link for a linked resource.
      operationId: getCollectionUserDefinedLink
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - addresses
          - blocks
          - devices
          - ipGroups
          - macAddresses
          - macPools
          - networks
          - ranges
          - serverGroups
          - servers
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionUserDefinedLinks_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedLinkedResource'
            text/html:
              schema:
                type: string
          description: A user-defined link
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single user-defined link
      tags:
      - Admin Resources
  /api/v2/users:
    get:
      description: Retrieve information about all Address Manager users.
      operationId: getUsers
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUsers_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getUsers_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of users
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of users
      tags:
      - Admin Resources
    post:
      description: Create a new Address Manager user.
      operationId: postUser
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              userExampleNonAdmin:
                $ref: '#/components/examples/userExampleNonAdmin'
            schema:
              $ref: '#/components/schemas/UserPostRequestBody'
          application/json:
            examples:
              userExampleNonAdmin:
                $ref: '#/components/examples/userExampleNonAdmin'
            schema:
              $ref: '#/components/schemas/UserPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUsers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The newly created user
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new user
      tags:
      - Admin Resources
  /api/v2/users/{id}:
    delete:
      description: Delete an Address Manager user.
      operationId: deleteUser
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a user
      tags:
      - Admin Resources
    get:
      description: Retrieve information about an Address Manager user by passing in
        the ID of the user.
      operationId: getUser
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUsers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                type: string
          description: A user
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single user
      tags:
      - Admin Resources
    patch:
      description: Partially update a user.
      operationId: patchUser
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/patchUser_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUsers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The updated user
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Partially update a user
      tags:
      - Admin Resources
    put:
      description: Update an Address Manager user.
      operationId: putUser
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/UserPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/UserPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUsers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The updated user
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a user
      tags:
      - Admin Resources
  /api/v2/groups/{collectionId}/users:
    get:
      description: "Retrieve information about all Address Manager users that are\
        \ part of a user, LDAP, TACACS+, or SSO group."
      operationId: getGroupUsers
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUsers_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getUsers_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of linked users
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of linked users
      tags:
      - Admin Resources
    post:
      description: "Link an Address Manager users to a user, LDAP, TACACS+, or SSO\
        \ group."
      operationId: postGroupUser
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LinkedUserPostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/LinkedUserPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUsers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: The linked user
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Link a user to a group
      tags:
      - Admin Resources
  /api/v2/groups/{collectionId}/users/{id}:
    delete:
      description: "Remove an Address Manager user from a user, LDAP, TACACS+, or\
        \ SSO group."
      operationId: deleteGroupUser
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Unlink a user from a group
      tags:
      - Admin Resources
    get:
      description: "Retrieve information about an Address Manager user that is part\
        \ of a user, LDAP, TACACS+, or SSO group."
      operationId: getGroupUser
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getUsers_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/html:
              schema:
                type: string
          description: A linked user
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single linked user
      tags:
      - Admin Resources
  /api/v2:
    get:
      description: Retrieve a collection of all resources matching a filter.
      operationId: getResources
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getResources_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getResources_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of resources
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of resources
      tags:
      - Admin Resources
  /api/v2/{id}:
    get:
      description: Retrieve information about the root resource.
      operationId: getRoot
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getRoot_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressManager'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve the root resource
      tags:
      - Admin Resources
  /api/v2/vendorProfiles:
    get:
      description: Retrieve a list of all configured DHCP vendor profiles.
      operationId: getVendorProfiles
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getVendorProfiles_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getVendorProfiles_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of vendor profiles
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of vendor profiles
      tags:
      - Vendor Profile Resources
    post:
      description: "Create a new DHCP vendor profile. Vendor profiles are sets of\
        \ DHCP options required by particular devices. For example, a VoIP phone might\
        \ need a very specific set of DHCP options."
      operationId: postVendorProfile
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              vendorProfileExampleRequiredFields:
                $ref: '#/components/examples/vendorProfileExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/VendorProfilePostRequestBody'
          application/json:
            examples:
              vendorProfileExampleRequiredFields:
                $ref: '#/components/examples/vendorProfileExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/VendorProfilePostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getVendorProfiles_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: The newly created vendor profile
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new vendor profile
      tags:
      - Vendor Profile Resources
  /api/v2/vendorProfiles/{id}:
    delete:
      description: Delete a DHCP vendor profile.
      operationId: deleteVendorProfile
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a vendor profile
      tags:
      - Vendor Profile Resources
    get:
      description: Retrieve information about a DHCP vendor profile.
      operationId: getVendorProfile
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getVendorProfiles_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
            text/html:
              schema:
                type: string
          description: A vendor profile
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single vendor profile
      tags:
      - Vendor Profile Resources
    put:
      description: Update an existing DHCP vendor profile.
      operationId: putVendorProfile
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/VendorProfilePutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/VendorProfilePutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getVendorProfiles_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: The updated vendor profile
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a vendor profile
      tags:
      - Vendor Profile Resources
  /api/v2/views:
    get:
      description: Retrieve information about all DNS views.
      operationId: getViews
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getViews_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getViews_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of views
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of views
      tags:
      - View and Zone Resources
  /api/v2/views/{id}:
    delete:
      description: Delete an existing DNS view.
      operationId: deleteView
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a view
      tags:
      - View and Zone Resources
    get:
      description: Retrieve information about a DNS view.
      operationId: getView
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getViews_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/View'
            text/html:
              schema:
                type: string
          description: A view
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single view
      tags:
      - View and Zone Resources
    put:
      description: Update an existing DNS view.
      operationId: putView
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ViewPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/ViewPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getViews_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/View'
          description: The updated view
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a view
      tags:
      - View and Zone Resources
  /api/v2/configurations/{collectionId}/views:
    get:
      description: Retrieve information about all DNS views within a configuration.
      operationId: getConfigurationViews
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getViews_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getViews_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of views
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of views
      tags:
      - View and Zone Resources
    post:
      description: "Create a new DNS view within a configuration. In Address Manager,\
        \ a DNS view is the container object for DNS zones and resource records. You\
        \ must create a view before you can create any DNS zones or resource records."
      operationId: postConfigurationView
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              viewExampleRequiredFields:
                $ref: '#/components/examples/viewExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/ViewPostRequestBody'
          application/json:
            examples:
              viewExampleRequiredFields:
                $ref: '#/components/examples/viewExampleRequiredFields'
            schema:
              $ref: '#/components/schemas/ViewPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getViews_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/View'
          description: The newly created view
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new view
      tags:
      - View and Zone Resources
  /api/v2/workflowRequests:
    get:
      description: Retrieve a collection of all workflow requests for all configurations.
      operationId: getWorkflowRequests
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getWorkflowRequests_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getWorkflowRequests_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of workflow requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of workflow requests
      tags:
      - Admin Resources
  /api/v2/workflowRequests/{id}:
    delete:
      description: Delete a workflow request.
      operationId: deleteWorkflowRequest
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a workflow request
      tags:
      - Admin Resources
    get:
      description: Retrieve a single workflow request.
      operationId: getWorkflowRequest
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getWorkflowRequests_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRequest'
            text/html:
              schema:
                type: string
          description: A workflow request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single workflow request
      tags:
      - Admin Resources
    patch:
      description: Process a workflow request. A workflow request can be approved
        or denied by changing the resource state value.
      operationId: patchWorkflowRequest
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/patchWorkflowRequest_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getWorkflowRequests_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRequest'
          description: The updated workflow request
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Partially update a workflow request
      tags:
      - Admin Resources
  /api/v2/{collection}/{collectionId}/workflowRequests:
    get:
      description: Retrieve a collection of all workflow requests for a resource.
      operationId: getCollectionWorkflowRequests
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - addresses
          - configurations
          - networks
          - resourceRecords
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getWorkflowRequests_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getWorkflowRequests_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of workflow requests
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of workflow requests
      tags:
      - Admin Resources
  /api/v2/zoneDeclarations:
    get:
      description: Retrieve information about all DHCP forward and reverse zone declarations.
      operationId: getZoneDeclarations
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getZoneDeclarations_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getZoneDeclarations_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of zone declarations
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of zone declarations
      tags:
      - DHCP Zone Resources
  /api/v2/zoneDeclarations/{id}:
    delete:
      description: Delete an existing DHCP forward or reverse zone declaration.
      operationId: deleteZoneDeclaration
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a zone declaration
      tags:
      - DHCP Zone Resources
    get:
      description: Retrieve information about a DHCP forward or reverse zone declaration.
      operationId: getZoneDeclaration
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getZoneDeclarations_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getZoneDeclarations_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A zone declaration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single zone declaration
      tags:
      - DHCP Zone Resources
    put:
      description: Update an existing DHCP forward or reverse zone declaration.
      operationId: putZoneDeclaration
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putZoneDeclaration_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putZoneDeclaration_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getZoneDeclarations_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getZoneDeclarations_200_response_1_data_inner'
          description: The updated zone declaration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a zone declaration
      tags:
      - DHCP Zone Resources
  /api/v2/zoneGroups/{collectionId}/zoneDeclarations:
    get:
      description: Retrieve information about all DHCP forward and reverse zone declarations
        of a DHCP zone group.
      operationId: getZoneGroupZoneDeclarations
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getZoneDeclarations_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getZoneDeclarations_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of zone declarations
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of zone declarations
      tags:
      - DHCP Zone Resources
    post:
      description: Create a new DHCP forward or reverse zone declaration within a
        DHCP zone group.
      operationId: postZoneGroupZoneDeclaration
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            examples:
              zoneDeclarationExampleForwardZoneDeclarationWithManagedZone:
                $ref: '#/components/examples/zoneDeclarationExampleForwardZoneDeclarationWithManagedZone'
              zoneDeclarationExampleForwardZoneDeclarationWithUnmanagedZone:
                $ref: '#/components/examples/zoneDeclarationExampleForwardZoneDeclarationWithUnmanagedZone'
              zoneDeclarationExampleReverseZoneDeclarationWithManagedNetwork:
                $ref: '#/components/examples/zoneDeclarationExampleReverseZoneDeclarationWithManagedNetwork'
              zoneDeclarationExampleReverseZoneDeclarationWithUnmanagedNetwork:
                $ref: '#/components/examples/zoneDeclarationExampleReverseZoneDeclarationWithUnmanagedNetwork'
            schema:
              $ref: '#/components/schemas/postZoneGroupZoneDeclaration_request'
          application/json:
            examples:
              zoneDeclarationExampleForwardZoneDeclarationWithManagedZone:
                $ref: '#/components/examples/zoneDeclarationExampleForwardZoneDeclarationWithManagedZone'
              zoneDeclarationExampleForwardZoneDeclarationWithUnmanagedZone:
                $ref: '#/components/examples/zoneDeclarationExampleForwardZoneDeclarationWithUnmanagedZone'
              zoneDeclarationExampleReverseZoneDeclarationWithManagedNetwork:
                $ref: '#/components/examples/zoneDeclarationExampleReverseZoneDeclarationWithManagedNetwork'
              zoneDeclarationExampleReverseZoneDeclarationWithUnmanagedNetwork:
                $ref: '#/components/examples/zoneDeclarationExampleReverseZoneDeclarationWithUnmanagedNetwork'
            schema:
              $ref: '#/components/schemas/postZoneGroupZoneDeclaration_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getZoneDeclarations_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getZoneDeclarations_200_response_1_data_inner'
          description: The newly created zone declaration
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new zone declaration
      tags:
      - DHCP Zone Resources
  /api/v2/zoneGroups:
    get:
      description: Retrieve information about all DHCP zone groups.
      operationId: getZoneGroups
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getZoneGroups_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getZoneGroups_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of zone groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of zone groups
      tags:
      - DHCP Zone Resources
  /api/v2/zoneGroups/{id}:
    delete:
      description: Delete an existing DHCP zone group.
      operationId: deleteZoneGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a zone group
      tags:
      - DHCP Zone Resources
    get:
      description: Retrieve information about a DHCP zone group.
      operationId: getZoneGroup
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getZoneGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPZoneGroup'
            text/html:
              schema:
                type: string
          description: A zone group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single zone group
      tags:
      - DHCP Zone Resources
    put:
      description: Update an existing DHCP zone group.
      operationId: putZoneGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPZoneGroupPutRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPZoneGroupPutRequestBody'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getZoneGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPZoneGroup'
          description: The updated zone group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a zone group
      tags:
      - DHCP Zone Resources
  /api/v2/configurations/{collectionId}/zoneGroups:
    get:
      description: Retrieve information about all DHCP zone groups within a configuration.
      operationId: getConfigurationZoneGroups
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getZoneGroups_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getZoneGroups_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of zone groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of zone groups
      tags:
      - DHCP Zone Resources
    post:
      description: Create a new DHCP zone group within a configuration. DHCP zone
        groups are container objects for DHCP zone declarations. You use forward and
        reverse DHCP zone declarations to configure TSIG or GSS-TSIG signing of Dynamic
        DNS updates.
      operationId: postConfigurationZoneGroup
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/DHCPZoneGroupPostRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/DHCPZoneGroupPostRequestBody'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getZoneGroups_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/DHCPZoneGroup'
          description: The newly created zone group
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new zone group
      tags:
      - DHCP Zone Resources
  /api/v2/zones:
    get:
      description: Retrieve information about all DNS zones.
      operationId: getZones
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getZones_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getZones_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: The root collection of zones
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of zones
      tags:
      - View and Zone Resources
  /api/v2/zones/{id}:
    delete:
      description: Delete an existing DNS zone.
      operationId: deleteZone
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: None
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Delete a zone
      tags:
      - View and Zone Resources
    get:
      description: Retrieve information about a DNS zone.
      operationId: getZone
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getZones_200_response_data_inner'
            application/json:
              schema:
                $ref: '#/components/schemas/getZones_200_response_1_data_inner'
            text/html:
              schema:
                type: string
          description: A zone
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a single zone
      tags:
      - View and Zone Resources
    put:
      description: Update an existing DNS zone.
      operationId: putZone
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The ID of the resource.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/putZone_request'
          application/json:
            schema:
              $ref: '#/components/schemas/putZone_request'
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/putZone_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/putZone_200_response_1'
          description: The updated zone
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Update a zone
      tags:
      - View and Zone Resources
  /api/v2/{collection}/{collectionId}/zones:
    get:
      description: Retrieve information about all zones within a resource type.
      operationId: getCollectionZones
      parameters:
      - description: The subset of response resource field paths.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resources returned in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The offset of the first resource returned in the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The query filter string.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The field path to order the response resources by.
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: Return the total number of resources matching the query.
        explode: true
        in: query
        name: total
        required: false
        schema:
          type: boolean
        style: form
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - responsePolicies
          - templates
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/getCollectionZones_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/getCollectionZones_200_response_1'
            text/csv:
              schema:
                type: string
            text/html:
              schema:
                type: string
          description: A collection of zones
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
      summary: Retrieve a collection of zones
      tags:
      - View and Zone Resources
    post:
      description: Create a new DNS sub zone within a DNS zone.
      operationId: postCollectionZone
      parameters:
      - description: The change control comment.
        explode: false
        in: header
        name: x-bcn-change-control-comment
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the collection.
        explode: false
        in: path
        name: collection
        required: true
        schema:
          enum:
          - responsePolicies
          - templates
          - views
          - zones
          type: string
        style: simple
      - description: The ID of the collection resource.
        explode: false
        in: path
        name: collectionId
        required: true
        schema:
          example: 12345
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/postCollectionZone_request'
          application/json:
            schema:
              $ref: '#/components/schemas/postCollectionZone_request'
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/putZone_200_response'
            application/json:
              schema:
                $ref: '#/components/schemas/putZone_200_response_1'
          description: The newly created zone
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
          description: The error details
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: The error details
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
          description: The error details
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
          description: The error details
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
          description: The error details
      summary: Create a new zone
      tags:
      - View and Zone Resources
components:
  examples:
    accessControlListExampleAllMatchElements:
      description: "Creates a DNS access control list called example-acl that matches\
        \ an IPv4 network and an existing TSIG key, but excludes external hosts."
      summary: ACL with each type of match element
      value:
        name: example-acl
        matchElements:
        - 192.168.0.0/24
        - '! externalHosts'
        - key tsigKey1
    accessRightExampleDefault:
      description: Creates a default view access right for a user with an override
        for alias records.
      summary: Create a default access right
      value:
        defaultAccessLevel: VIEW
        userScope:
          id: 1234
          type: User
        accessOverrides:
        - resourceType: AliasRecord
          accessLevel: FULL
    accessRightExampleWithOwner:
      description: Creates a view access right for a group on a specific configuration.
      summary: Create a resource access right
      value:
        defaultAccessLevel: VIEW
        userScope:
          id: 1234
          type: UserGroup
        resource:
          id: 2345
          type: Configuration
    addressExampleStaticIpv4:
      description: Creates a static IPv4 address assignment.
      summary: Create a static IPv4 address
      value:
        type: IPv4Address
        state: STATIC
        address: 192.168.0.10
    addressExampleNextStaticIpv4:
      description: Creates a static IPv4 address assignment using the next available
        address in the network.
      summary: Create the next available static IPv4 address
      value:
        type: IPv4Address
        state: STATIC
    addressExampleDhcpReservedIpv4:
      description: Creates a DHCP reserved IPv4 address assignment using the supplied
        MAC address.
      summary: Create a DHCP reserved IPv4 address
      value:
        type: IPv4Address
        state: DHCP_RESERVED
        address: 192.168.0.20
        macAddress:
          type: MACAddress
          address: AB-CD-EF-12-34-56
    addressExampleDhcpReservedIpv4WithMacPool:
      description: Creates a DHCP reserved IPv4 address assignment using the supplied
        MAC address assigned to an existing MAC pool.
      summary: Create a DHCP reserved IPv4 address with MAC address pool assignment
      value:
        type: IPv4Address
        state: DHCP_RESERVED
        address: 192.168.0.20
        macAddress:
          type: MACAddress
          address: AB-CD-EF-12-34-56
          macPool:
            id: 1234
    addressExampleStaticIpv6:
      description: Creates a static IPv6 address assignment using the supplied MAC
        address.
      summary: Create a static IPv6 address
      value:
        type: IPv6Address
        state: STATIC
        address: 2000::ABCD
        macAddress:
          type: MACAddress
          address: AB-CD-EF-12-34-56
    addressExampleStaticIpv6FromMac:
      description: Creates a static IPv6 address assignment using the supplied MAC
        address to generate the address value.
      summary: Create a static IPv6 address from a MAC address
      value:
        type: IPv6Address
        state: STATIC
        macAddress:
          type: MACAddress
          address: AA-BB-CC-11-22-33
    addressExampleMacDhcpReservedIpv6:
      description: Creates a DHCP reserved IPv6 address assignment using the supplied
        MAC address.
      summary: Create a DHCP reserved IPv6 address using a MAC address
      value:
        type: IPv6Address
        state: DHCP_RESERVED
        address: 2000::FF
        macAddress:
          type: MACAddress
          address: AB-CD-EF-12-34-56
    addressExampleDuidDhcpReservedIpv6:
      description: Creates a DHCP reserved IPv6 address assignment using the supplied
        DUID.
      summary: Create a DHCP reserved IPv6 address using a DUID
      value:
        type: IPv6Address
        state: DHCP_RESERVED
        address: 2000::1
        clientIdentifier:
          type: DHCPUniqueIdentifier
          duid: 01-02-03-04
    authenticatorExampleKerberos:
      description: Creates a kerberos authenticator using the supplied hostname and
        realm.
      summary: Create a Kerberos authenticator
      value:
        type: KerberosAuthenticator
        name: Kerberos Authenticator
        hostname: https://hostname.com
        realm: DOMAIN.COM
    authenticatorExampleLdap:
      description: Creates an active directory LDAP authenticator.
      summary: Create an LDAP authenticator
      value:
        type: LDAPAuthenticator
        name: LDAP Authenticator
        hostname: https://hostname.com
        adminDn: admin
        adminPassword: password
        sslEnabled: true
        schemaType: ACTIVE_DIRECTORY
        searchBase: "cn=users,dc=example,dc=com"
        referralPolicy: FOLLOW
        aliasDereferencePolicy: ALWAYS
    authenticatorExampleOauth:
      description: Creates an OAuth 2.0 authorization server using local token validation.
      summary: Create an OAuth 2.0 authorization server
      value:
        type: OAuthAuthorizationServer
        name: OAuth Authorization Server
        enabled: false
        userClaim: sub
        groupClaim: group
        emailClaim: email
        validationMethod: LOCAL
        audience: BAM-API
        issuer: https://issuer.com/trust
        signingCertificate: MIIBqzCCARQCCQCSA41h/YhSczANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA9hdXRoLXNlcnZlci5jb20wHhcNMjMwMzIyMTc1NjE3WhcNMjQwMzIxMTc1NjE3WjAaMRgwFgYDVQQDDA9hdXRoLXNlcnZlci5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMDan6hsWx7UGoTeuDTYiYQ7y2SLgRpxJo3L4RCilV40UZGfSWJgVTFh89YdU2l2Tlci1gRmgFpRA+GRdZv4+qdUhKIg7VmLQWD+qCXrIIgBSTMJbd89apdR7PO15Mc7s2TDsVAN8oaF9X9KcqmaBBVdUBALxsOOyx0lyHiAGdc9AgMBAAEwDQYJKoZIhvcNAQELBQADgYEAh/ouJ0O6NK1zvW87AtJzzI8NYDPu/STudUYzQ9fwHQt4SEZBbMB/8TiHqjk1TITrX+R3fejHvHz5rm510mClQZgWlD85Tz/SfvW+Vcu2UvGFitNG1BbE3CM5nstfKlHCD+7/wyiYhXyHOS/gClb6DdCkgMhtrSEGn9qSxMv9DXI=
    authenticatorExampleRadius:
      description: Creates a RADIUS authenticator using the CHAP authentication protocol.
      summary: Create a RADIUS authenticator
      value:
        type: RADIUSAuthenticator
        name: RADIUS Authenticator
        hostname: https://hostname.com
        port: "1812"
        sharedSecret: password
        authenticationProtocol: CHAP
    authenticatorExampleSamlIdentityProvider:
      description: Creates a SAML identity provider.
      summary: Create a SAML identity provider
      value:
        type: SAMLIdentityProvider
        name: SAML Identity Provider
        enabled: false
        signOnUrl: https://example-idp.com/SSORedirect/idp
        logoutUrl: https://example-idp.com/SSORedirect/logout
        entityId: example-idp.com
        signingCertificate: MIIBqzCCARQCCQD4qzTUMk2DojANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA9leGFtcGxlLWlkcC5jb20wHhcNMjMwMzIyMTY0NTI5WhcNMjQwMzIxMTY0NTI5WjAaMRgwFgYDVQQDDA9leGFtcGxlLWlkcC5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMDan6hsWx7UGoTeuDTYiYQ7y2SLgRpxJo3L4RCilV40UZGfSWJgVTFh89YdU2l2Tlci1gRmgFpRA+GRdZv4+qdUhKIg7VmLQWD+qCXrIIgBSTMJbd89apdR7PO15Mc7s2TDsVAN8oaF9X9KcqmaBBVdUBALxsOOyx0lyHiAGdc9AgMBAAEwDQYJKoZIhvcNAQELBQADgYEAC/JnvFYxGw8XULFDnd4+CxvnnKmWcpjZqXAyWlgcD8454BSTgEucl+OV/5Fz8iXAatD99BfRYmeBVKQQHebqsRFoZ3iC6wG80j5ulTFVNPl/mMDHwYjCYReJeICZMsYVJUWmh9DGPsLVpfqA9x2xeAK7c6tQhxf5ZXrGPFGgagQ=
    authenticatorExampleTacacsPlus:
      description: Creates a TACACS+ authenticator using the PAP authentication protocol.
      summary: Create a TACACS+ authenticator
      value:
        type: TACACSPlusAuthenticator
        name: TACACS+ Authenticator
        hostname: https://hostname.com
        port: 49
        sharedSecret: password
        authenticationProtocol: PAP
    blockExampleIpv4Cidr:
      description: Creates a new IPv4 block using CIDR notation.
      summary: IPv4Block with CIDR
      value:
        type: IPv4Block
        range: 192.168.0.0/16
    blockExampleIpv4StartAddressAndNetmask:
      description: Creates a new IPv4 block using a starting network IP address and
        the netmask of the block.
      summary: IPv4Block with a start address and netmask
      value:
        type: IPv4Block
        range: 192.168.0.0/255.255.0.0
    blockExampleIpv4StartAndEndAddress:
      description: Creates a new IPv4 block using a starting network IP address and
        ending network IP address of the block.
      summary: IPv4Block with a start and end address
      value:
        type: IPv4Block
        range: 192.168.0.0-192.168.255.255
    blockExampleIpv4NextAvailable:
      description: Creates a new IPv4 block using only the CIDR notation of the block.
        The block is created using the first available IPv4 block with the listed
        CIDR notation. You can only use this feature when you're creating a new IPv4
        block within an existing IPv4 block.
      summary: IPv4Block without a specified start address
      value:
        type: IPv4Block
        range: /16
    clientClassExampleHardware:
      description: Creates a DHCPv4 client class using the hardware option.
      summary: Create a hardware DHCPv4 client class
      value:
        name: class
        option: hardware
        matchOffset: 1
        matchLength: 6
    clientClassExampleClientIdentifier:
      description: Creates a DHCPv4 client class using the dhcp-client-identifier
        option.
      summary: Create a client identifier DHCPv4 client class
      value:
        name: class
        option: dhcp-client-identifier
        matchOffset: 1
        matchLength: 256
    clientClassExampleVendorClassIdentifier:
      description: Creates a DHCPv4 client class using the vendor-class-identifier
        option.
      summary: Create a vendor class identifier DHCPv4 client class
      value:
        name: class
        option: vendor-class-identifier
        matchOffset: 1
        matchLength: 255
    clientClassExampleRemoteId:
      description: Creates a DHCPv4 client class using the agent.remote-id option.
      summary: Create a remote ID DHCPv4 client class
      value:
        name: class
        option: agent.remote-id
        matchOffset: 1
        matchLength: 255
    clientClassExampleCustomMatch:
      description: Creates a DHCPv4 client class using a substring of the dhcp-client-identifier
        option.
      summary: Create a custom match expression DHCPv4 client class
      value:
        name: class
        matchExpression: "substring (option dhcp-client-identifier, 0, 2)"
    clientClassExampleCustomMatchIf:
      description: Creates a DHCPv4 client class using "if known" as the match expression.
      summary: Create a custom match expression DHCPv4 client class
      value:
        name: class
        matchExpression: if known
    configurationExampleRequiredFields:
      description: Creates a configuration with only the name defined.
      summary: Configuration with required fields
      value:
        name: example-config
    configurationExampleOptionalFields:
      description: Creates a configuration that includes all configurable options.
      summary: Configuration with optional fields
      value:
        name: example-config
        configurationGroup: example-group
        description: example description
        serverMonitoringEnabled: false
        snmp:
          version: v3
          port: 161
          usernames:
          - example-username
          securityLevel: AUTH_PRIV
          authenticationProtocol: SHA
          authenticationPassphrase: example-passphrase
          privacyProtocol: AES128
          privacyPassphrase: example-passphrase
        dnsOptionInheritanceEnabled: true
        dnsFeedEnabled: false
        blockUsageCalculation: NETWORK_ALLOCATION
        dhcpConfigurationValidationEnabled: false
        dnsConfigurationValidationEnabled: false
        dnsZoneValidationEnabled: false
        checkIntegrityValidation: NONE
        checkNamesValidation: IGNORE
        checkMxValidation: IGNORE
        checkMxCnameValidation: IGNORE
        checkNsValidation: IGNORE
        checkSrvCnameValidation: IGNORE
        checkWildcardValidation: IGNORE
        userDefinedFields:
          udfName: udf value
    databaseExampleBreakReplicationCluster:
      description: Break one or more Address Manager servers configured in replication
        and return them to a stand-alone state
      summary: Break an Address Manager database replication cluster
      value:
        state: BREAK
    databaseExampleCreateReplicationCluster:
      description: Create an Address Manager database replication cluster with 1 or
        2 server peers. A trust relationship must have been established between the
        local and peer server before it can be configured in a replication cluster.
      summary: Create an Address Manager database replication cluster
      value:
        type: AddressManagerDatabase
        id: 1
        state: STANDALONE
        replicationEnabled: true
        compressionEnabled: true
        latencyWarningThreshold: P1D
        servers:
        - type: TrustRelationship
          address: 10.0.0.102
        - type: TrustRelationship
          address: 10.0.0.103
    deploymentOptionExampleDhcpv4ClientOptionUsingName:
      description: Adds a DHCPv4 client deployment option using the option's name.
      summary: Add a DHCPv4 client option using an option name
      value:
        type: DHCPv4ClientOption
        name: ip-forwarding
        value: true
    deploymentOptionExampleDhcpv4ClientOptionUsingCode:
      description: Adds a DHCPv4 client deployment option using the option's code.
      summary: Add a DHCPv4 client option using an option code
      value:
        type: DHCPv4ClientOption
        code: 6
        value:
        - 10.0.0.5
        - 11.0.0.4
    deploymentOptionExampleDhcpv4ServiceOption:
      description: Adds a DHCPv4 service deployment option.
      summary: Add a DHCPv4 service option
      value:
        type: DHCPv4ServiceOption
        name: ddns-ttl
        value: 86400
    deploymentOptionExampleDhcpv6ClientOptionUsingName:
      description: Adds a DHCPv6 client deployment option using the option's name.
      summary: Add a DHCPv6 client option using an option name
      value:
        type: DHCPv6ClientOption
        name: domain-search-list
        value:
        - example.com
        - demo.com
    deploymentOptionExampleDhcpv6ClientOptionUsingCode:
      description: Adds a DHCPv6 client deployment option using the option's code.
      summary: Add a DHCPv6 client option using an option code
      value:
        type: DHCPv6ClientOption
        code: 12
        value: 2001:abcd::1234
    deploymentOptionExampleDhcpv6ServiceOption:
      description: Adds a DHCPv6 service deployment option.
      summary: Add a DHCPv6 service option
      value:
        type: DHCPv6ServiceOption
        name: client-updates
        value: true
    deploymentOptionExampleDhcpVendorOption:
      description: Adds a DHCP vendor deployment option.
      summary: Add a DHCP vendor option
      value:
        type: DHCPVendorOption
        definition:
          id: 1234
          type: DHCPVendorOptionDefinition
        value:
        - 10.0.0.3
        - 11.0.0.8
    deploymentOptionExampleDnsOption:
      description: Adds a DNS deployment option.
      summary: Add a DNS option
      value:
        type: DNSOption
        name: allow-query
        value:
        - 10.0.0/24
        - internalHosts
        - key tsig0
    deploymentOptionExampleStartOfAuthority:
      description: Adds a start of authority (SOA) record.
      summary: Add a start of authority record
      value:
        type: StartOfAuthority
        value:
        - 3600
        - primary.com
        - admin@acme.com
        - auto
        - 1200
        - 180
        - 1209600
        - 3600
    deploymentExampleFullDnsDeployment:
      description: Starts deployment of the full DNS service configuration to a server.
        The POST request is sent to the `/deployments` subcollection of the server
        resource.
      summary: Start a full DNS deployment
      value:
        type: FullDeployment
        service: DNS
    deploymentExampleDifferentialDnsDeployment:
      description: Starts the deployment of DNS service configuration changes made
        since the last deployment. The POST request is sent to the `/deployments`
        subcollection of the server resource.
      summary: Start a differential DNS deployment
      value:
        type: DifferentialDeployment
        service: DNS
    deploymentExampleFullDhcpv4Deployment:
      description: Starts deployment of the full DHCPv4 service configuration to a
        server. The POST request is sent to the `/deployments` subcollection of the
        server resource.
      summary: Start a full DHCPv4 deployment
      value:
        type: FullDeployment
        service: DHCPv4
    deploymentExampleQuickDeployment:
      description: Starts deployment of all resource records or a zone or network
        updated by the user. The POST request is sent to the `/deployments` subcollection
        of the zone or network resource.
      summary: Start a quick deployment
      value:
        type: QuickDeployment
    deploymentExampleSelectiveDeployment:
      description: Starts the deployment of a list of resource records or IP addresses
        to the server managing them.
      summary: Start a selective deployment
      value:
        type: SelectiveDeployment
        resources:
        - id: 1234
          type: HostRecord
        - id: 2345
          type: AliasRecord
        - id: 3456
          type: HostRecord
    deploymentRoleExamplePrimaryDnsDeploymentRole:
      description: Assigns a deployment role for a primary DNS server.
      summary: Assign a primary DNS server role
      value:
        type: DNSDeploymentRole
        roleType: PRIMARY
        interfaces:
        - id: 1234
          type: NetworkInterface
    deploymentRoleExampleSecondaryDnsDeploymentRole:
      description: Assigns a deployment role for a secondary DNS server.
      summary: Assign a secondary DNS server role
      value:
        type: DNSDeploymentRole
        roleType: SECONDARY
        interfaces:
        - id: 1234
          type: NetworkInterface
    deploymentRoleExampleSecondaryDnsDeploymentRoleWithZoneTransfer:
      description: Assigns a deployment role for a secondary DNS server with a zone
        transfer interface of the primary DNS server.
      summary: Assign a secondary DNS server role with a zone transfer interface
      value:
        type: DNSDeploymentRole
        roleType: SECONDARY
        interfaces:
        - id: 1234
          type: PublishedInterface
          deploymentRoleInterfaceType: SERVICE
        - id: 2345
          type: NetworkInterface
          deploymentRoleInterfaceType: ZONE_TRANSFER
    deploymentRoleExampleDhcpDeploymentRole:
      description: Assigns a deployment role for a DHCP server.
      summary: Assign a DHCP server role
      value:
        type: DHCPDeploymentRole
        roleType: PRIMARY
        interfaces:
        - id: 1234
          type: NetworkInterface
    deploymentRoleExampleDhcpDeploymentRoleInFailover:
      description: Assigns a deployment role for a pair of DHCP servers in a failover
        configuration.
      summary: Assign a DHCP server role in failover configuration
      value:
        type: DHCPDeploymentRole
        roleType: PRIMARY
        interfaces:
        - id: 1234
          type: NetworkInterface
          deploymentRoleInterfaceType: PRIMARY
        - id: 2345
          type: PublishedInterface
          deploymentRoleInterfaceType: SECONDARY
    deploymentRoleExampleTftpDeploymentRole:
      description: Assigns a deployment role for a TFTP server.
      summary: Assign a TFTP server role
      value:
        type: TFTPDeploymentRole
        roleType: TFTP
        server:
          id: 1234
          type: Server
    deviceExampleWithoutTypeOrSubtype:
      description: Creates a device without a type or subtype.
      summary: Create a device
      value:
        name: device-name
    deviceExampleWithType:
      description: Creates a device of the supplied device type.
      summary: Create a device using a device type
      value:
        name: device-name
        deviceType:
          id: 1234
          type: DeviceType
    deviceExampleWithSubtype:
      description: Creates a device of the supplied device subtype. The device type
        will be inferred based on the parent of the device subtype.
      summary: Create a device using a device type
      value:
        name: device-name
        deviceSubtype:
          id: 1234
          type: DeviceSubtype
    deviceSubtypeExampleRequiredFields:
      description: Creates a device subtype using the supplied name.
      summary: Create a device subtype
      value:
        name: subtype-name
    deviceTypeExampleRequiredFields:
      description: Creates a device type using the supplied name.
      summary: Create a device type
      value:
        name: type-name
    groupExampleNonAdmin:
      description: Creates a user group using the address manager authenticator and
        without administrator privileges.
      summary: Create a user group
      value:
        name: group-name
        administratorPrivilege: false
    interfaceExamplePublishedInterface:
      description: Adds a published network interface to a server. The `name` field
        must be set to the fully qualified domain name of the server. A published
        interface can be used to associate addresses that may be on the other side
        of a Network Address Translation (NAT) gateway or firewall.
      summary: Add a published interface
      value:
        type: PublishedInterface
        name: bdds2.acme.com
        primaryAddress: 192.168.0.11
        secondaryAddress: FC00::11
    ipGroupExampleIpv4StartAndEndAddress:
      description: Creates an IPv4 group with a starting IP address of 192.168.0.20
        and an ending IP address of 192.168.0.30.
      summary: Create an IPv4 group with a start and end address
      value:
        type: IPv4Group
        name: example-ip-group
        range: 192.168.0.20-192.168.0.30
    ipGroupExampleIpv4OffsetAndSize:
      description: Creates an IPv4 group with an offset of 20 IP addresses from the
        start of the parent network and contains 30 IP addresses.
      summary: Create an IPv4 group with an offset and size
      value:
        type: IPv4Group
        name: example-ip-group
        range: "20,30"
    ipGroupExampleIpv4OffsetAndPercentage:
      description: Creates an IPv4 group with an offset of 20 IP addresses from the
        start of the parent network and is 15% of the size of the parent network.
      summary: Create an IPv4 group with an offset and percentage
      value:
        type: IPv4Group
        name: example-ip-group
        range: "20,15%"
    ipGroupExampleIpv4NegativeOffsetAndSize:
      description: Creates an IPv4 group with an offset of 40 IP addresses from the
        end of the parent network and contains 30 IP addresses.
      summary: Create an IPv4 group with a negative offset and size
      value:
        type: IPv4Group
        name: example-ip-group
        range: "-40,30"
    keyDistributionCenterExampleRequiredFields:
      description: Creates a key distribution center using an address as the host
        and the default port value of 88.
      summary: Create a key distribution center
      value:
        name: KDC-1
        host: 192.168.0.10
    locationExampleLocation:
      description: "Creates a location corresponding to an office in Toronto, Ontario."
      summary: Create a location
      value:
        name: BlueCat Networks Office
        description: The main office of BlueCat Networks.
        code: CA TOR BCN
    macAddressExampleMacAddress:
      description: Creates a MAC address and associates it with the supplied MAC pool.
      summary: Create a MAC address
      value:
        address: 12-34-56-AB-CD-EF
        macPool:
          id: 1234
          type: MACPool
    macAddressExampleDeniedMacAddress:
      description: Creates a MAC address and associates it with the supplied Deny
        MAC pool.
      summary: Create a denied MAC address
      value:
        address: 12-34-56-AB-CD-EF
        macPool:
          id: 1234
          type: DenyMACPool
    macPoolExampleRequiredFields:
      description: Creates a MAC pool using the supplied name.
      summary: Create a MAC pool
      value:
        type: MACPool
        name: example-pool
    mergeExampleIpv4Blocks:
      description: Merge sibling IPv4 blocks into an existing sibling or parent block.
      summary: Merge IPv4 blocks
      value:
        type: IPv4BlockMerge
        blocks:
        - id: 123456
          type: IPv4Block
        - id: 234567
          type: IPv4Block
        destination:
          id: 123456
          type: IPv4Block
    mergeExampleIpv4Networks:
      description: Merge sibling IPv4 networks into an existing sibling network.
      summary: Merge IPv4 networks
      value:
        type: IPv4NetworkMerge
        networks:
        - id: 123456
          type: IPv4Network
        - id: 234567
          type: IPv4Network
        destination:
          id: 123456
          type: IPv4Network
    mergeExampleIpv4DhcpRanges:
      description: Merge sibling IPv4 DHCP ranges into an existing sibling range.
      summary: Merge IPv4 DHCP ranges
      value:
        type: IPv4DHCPRangeMerge
        ranges:
        - id: 123456
          type: IPv4DHCPRange
        - id: 234567
          type: IPv4DHCPRange
        destination:
          id: 123456
          type: IPv4DHCPRange
    moveExampleIp:
      description: "Moves an address, block, or network to the supplied address."
      summary: "Move an address, block, or network"
      value:
        type: IPMove
        address: 10.20.0.0
    moveExampleDns:
      description: Moves an resource record or zone to the supplied absolute name.
      summary: Move a resource record or zone
      value:
        type: DNSMove
        absoluteName: record.destination.com
    moveExampleDeploymentRoles:
      description: Moves DNS and DHCP deployment roles to the supplied server interface.
      summary: Move deployment roles
      value:
        type: DeploymentRoleMove
        roleTypes:
        - DNSDeploymentRole
        - DHCPDeploymentRole
        destination:
          id: 1234
          type: NetworkInterface
    namingPolicyExampleRequiredFields:
      description: Creates a naming policy using the supplied name.
      summary: Create a naming policy
      value:
        name: example-policy
    namingPolicyRestrictionExampleIpv4Blocks:
      description: Creates a naming policy restriction using "any" and "exact" match
        types.
      summary: Create a naming policy restriction
      value:
        name: example-restriction
        restrictions:
        - matchType: ANY
          value: test
        - matchType: EXACT
          value: restricted
    namingPolicyValueExampleConnector:
      description: Creates a naming policy connector value using "-" as the connector.
      summary: Create a naming policy connector value
      value:
        type: NamingPolicyConnectorValue
        name: example-connector
        connector: "-"
    namingPolicyValueExampleIncremental:
      description: Creates a naming policy incremental value using a decimal counter
        starting at 1 and incrementing by 1.
      summary: Create a naming policy incremental value
      value:
        type: NamingPolicyIncrementalValue
        name: example-incremental
        incrementalRole: COUNTER
        incrementType: DECIMAL
        paddingType: NONE
    namingPolicyValueExampleInteger:
      description: Creates a naming policy integer value with a minimum of 1 and a
        maximum of 25.
      summary: Create a naming policy integer value
      value:
        type: NamingPolicyIntegerValue
        name: example-integer
        min: 1
        max: 25
    namingPolicyValueExampleRequired:
      description: Creates a naming policy required value using the two supplied possible
        values.
      summary: Create a naming policy required value
      value:
        type: NamingPolicyRequiredValue
        name: example-required
        elements:
        - name: main
          value: toronto
        - name: secondary
          value: vancouver
    namingPolicyValueExampleText:
      description: Creates a naming policy text value with a minimum length of 2 and
        a maximum length of 10.
      summary: Create a naming policy text value
      value:
        type: NamingPolicyTextValue
        name: example-text
        textType: LENGTH
        minLength: 2
        maxLength: 10
    policyItemExampleRequiredFields:
      description: Creates a policy item for "example.com".
      summary: Create a policy item
      value:
        name: example.com
    rangeExampleIpv4StartAndEndAddress:
      description: Creates an IPv4 DHCP range with a starting IP address of 192.168.0.20
        and an ending IP address of 192.168.0.30.
      summary: IPv4DHCPRange with a start and end address
      value:
        type: IPv4DHCPRange
        range: 192.168.0.20-192.168.0.30
    rangeExampleIpv4OffsetAndSize:
      description: Creates an IPv4 DHCP range with an offset of 20 IP addresses from
        the start of the parent network and contains 30 IP addresses.
      summary: IPv4DHCPRange with an offset and size
      value:
        type: IPv4DHCPRange
        range: "20,30"
    rangeExampleIpv4OffsetAndPercentage:
      description: Creates an IPv4 DHCP range with an offset of 20 IP addresses from
        the start of the parent network and is 15% of the size of the parent network.
      summary: IPv4DHCPRange with an offset and percentage
      value:
        type: IPv4DHCPRange
        range: "20,15%"
    rangeExampleIpv4NegativeOffsetAndSize:
      description: Creates an IPv4 DHCP range with an offset of 40 IP addresses from
        the end of the parent network and contains 30 IP addresses.
      summary: IPv4DHCPRange with a negative offset and size
      value:
        type: IPv4DHCPRange
        range: "-40,30"
    rangeExampleIpv6StartAndEndAddress:
      description: Creates an IPv6 DHCP range with a starting IP address of FC00::20
        and an ending IP address of FC00::30.
      summary: IPv6DHCPRange with a start and end address
      value:
        type: IPv6DHCPRange
        range: FC00::20-FC00::30
    rangeExampleIpv6OffsetAndSize:
      description: Creates an IPv6 DHCP range with an offset of 20 IP addresses from
        the start of the parent network and contains 10 IP addresses.
      summary: IPv6DHCPRange with an offset and size
      value:
        type: IPv6DHCPRange
        range: "20,10"
    rangeExampleIpv6OffsetAndPercentage:
      description: Creates an IPv6 DHCP range with an offset of 20 IP addresses from
        the start of the parent network and is 1% of the size of the parent network.
      summary: IPv6DHCPRange with an offset and percentage
      value:
        type: IPv6DHCPRange
        range: "20,1%"
    rangeExampleIpv6NegativeOffsetAndSize:
      description: Creates an IPv6 DHCP range with an offset of 40 IP addresses from
        the end of the parent network and contains 30 IP addresses.
      summary: IPv6DHCPRange with a negative offset and size
      value:
        type: IPv6DHCPRange
        range: "-40,30"
    rangeExampleIpv6NextAvailable:
      description: "Creates an IPv6 DHCP range starting from the first available IP\
        \ address and contains 256 IP addresses, as defined by the /120 CIDR subnet\
        \ notation."
      summary: IPv6DHCPRange without a specific start address
      value:
        type: IPv6DHCPRange
        range: /120
    realmExampleRequiredFields:
      description: Creates a realm using the supplied name and domain.
      summary: Create a realm
      value:
        name: example.company.net
        domain: EXAMPLE.COMPANY.NET
    reconciliationPolicyExampleIpv4:
      description: Creates an IPv4 reconciliation policy using SNMP and pingsweep
        discovery with automatic acceptance criteria.
      summary: Create an IPv4 reconciliation policy
      value:
        type: IPv4ReconciliationPolicy
        enabled: true
        discoveryMethod: SNMP_PINGSWEEP
        networkBoundaries:
        - 192.168.0.0/16
        seedRouterAddresses:
        - 192.168.0.1
        snmp:
          version: v3
          securityLevel: AUTH_PRIV
          usernames:
          - user
          authenticationProtocol: SHA
          authenticationPassphrase: password
          privacyProtocol: AES128
          privacyPassphrase: password
        dnsServers:
        - 192.168.0.11
        startDateTime: 2023-01-01T00:00:00Z
        frequency: P1D
        reclaimAcceptanceAge: PT1H
        unknownAcceptanceAge: PT1H
        mismatchAcceptanceAge: PT1H
    reconciliationPolicyExampleIpv6:
      description: Creates an IPv6 reconciliation policy using SNMP discovery.
      summary: Create an IPv6 reconciliation policy
      value:
        type: IPv4ReconciliationPolicy
        enabled: true
        discoveryMethod: SNMP
        seedRouterAddresses:
        - FC00::1
        snmp:
          version: v3
          securityLevel: AUTH_PRIV
          usernames:
          - user
          authenticationProtocol: SHA
          authenticationPassphrase: password
          privacyProtocol: AES128
          privacyPassphrase: password
        dnsServers:
        - FC00::11
        startDateTime: 2023-01-01T00:00:00Z
        frequency: P1D
    resourceRecordExampleAlias:
      description: Creates an alias record for the supplied host record.
      summary: Create an alias record
      value:
        type: AliasRecord
        name: example-alias
        linkedRecord:
          id: 123456
          type: HostRecord
    resourceRecordExampleExternalHost:
      description: Creates an external host record.
      summary: Create an external host record
      value:
        type: ExternalHostRecord
        name: host.external.com
    resourceRecordExampleGeneric:
      description: Creates a generic SSHFP record.
      summary: Create a generic record
      value:
        type: GenericRecord
        name: example-generic
        recordType: SSHFP
        rdata: 2 1 123456789abcdef67890123456789abcdef67890
    resourceRecordExampleHinfo:
      description: Creates a HINFO record for a linux server.
      summary: Create a HINFO record
      value:
        type: HINFORecord
        name: example-hinfo
        os: Debian Linux 5.10
        cpu: INTEL
    resourceRecordExampleHost:
      description: Creates a host record for an IPv4 and an IPv6 address.
      summary: Create a host record
      value:
        type: HostRecord
        name: example-host
        addresses:
        - id: 123456
          type: IPv4Address
        - id: 234567
          type: IPv6Address
    resourceRecordExampleMx:
      description: Creates an MX record for the supplied host record.
      summary: Create an MX record
      value:
        type: MXRecord
        name: example-mx
        linkedRecord:
          id: 123456
          type: HostRecord
    resourceRecordExampleNaptr:
      description: Creates a NAPTR record.
      summary: Create a NAPTR record
      value:
        type: NAPTRRecord
        name: example-naptr
        service: SIP+D2U
        replacement: _sip._udp.example.com.
    resourceRecordExampleSrv:
      description: Creates an SRV record for the supplied host record.
      summary: Create an SRV record
      value:
        type: SRVRecord
        name: example-srv
        linkedRecord:
          id: 123456
          type: HostRecord
        port: 5432
    resourceRecordExampleTxt:
      description: Creates a TXT record using the supplied text.
      summary: Create a TXT record
      value:
        type: TXTRecord
        name: example-txt
        text: text value
    responsePolicyExampleRequiredFields:
      description: Creates an allow list response policy.
      summary: Create a response policy
      value:
        type: ResponsePolicy
        name: example-allow-policy
        policyType: ALLOWLIST
    serverGroupExampleRequiredFields:
      description: Creates a server group using the supplied name.
      summary: Create a server group
      value:
        name: example-group
    serverExampleBddsServer:
      description: "Creates a connected BlueCat DNS/DHCP server resource. After resource\
        \ creation, the server is brought under Address Manager control. The `name`\
        \ field of each `NetworkInterface` resource must be set to a fully qualified\
        \ domain name of the server."
      summary: Create a BDDS server
      value:
        type: Server
        name: bdds1
        profile: DNS_DHCP_GEN4_5000
        password: Passw0rd
        connected: true
        interfaces:
        - type: NetworkInterface
          name: bdds1.acme.com
          managementAddress: 10.0.0.8
    serverExampleHaServer:
      description: Creates a Crossover High Availability (xHA) server from two exising
        BlueCat DNS/DHCP servers. The `name` field of the `NetworkInterface` resource
        must be set to the fully qualified domain name of the server.
      summary: Create an xHA server
      value:
        type: HAServer
        name: ha-bdds
        profile: DNS_DHCP_GEN4_5000
        password: Passw0rd
        interfaces:
        - type: NetworkInterface
          name: ha-bdds.acme.com
          managementAddress: 10.0.0.10
          servicesIpv4Address: 10.0.0.10
        activeServer:
          id: 1234
          type: Server
          password: Passw0rd
        passiveServer:
          id: 2345
          type: Server
          password: Passw0rd
    servicePrincipalExampleRequiredFields:
      description: Creates a kerberos service principal.
      summary: Create a kerberos service principal
      value:
        name: DHCP/dhcp1.bcn.com
        keyVersionNumber: 1
        password: password
    sessionExampleLoggedOut:
      description: Ends the current user's session.
      summary: End the current session
      value:
        state: LOGGED_OUT
    sessionExampleTerminated:
      description: Terminates a target user's session.
      summary: Terminate a session
      value:
        state: TERMINATED
    sessionExampleRequiredFields:
      description: Creates a session using the supplied username and password.
      summary: Create a session
      value:
        username: username
        password: password
    sessionExampleReadOnly:
      description: Creates a read only session using the supplied username and password.
      summary: Create a read only session
      value:
        username: username
        password: password
        readOnly: true
    signingKeyExampleTsig:
      description: Creates a TSIG key using the supplied key data.
      summary: Create a TSIG key
      value:
        type: TSIGKey
        name: example-key
        algorithm: SHA512
        length: 512
        state: GENERATED
    signingKeyExampleGeneratedTsig:
      description: Creates a generated TSIG key of the supplied algorithm and length.
      summary: Create a generated TSIG key
      value:
        type: TSIGKey
        name: example-key
        algorithm: SHA512
        length: 512
        privateKey: zRbm33hQSin82VcUNK1sSBGc5lq1av0b1/GtUflT+vwBjHtMx/KKs9i1biNd66n14hpWlxN5mmBeScOqKPu6qw==
    signingPolicyExampleRequiredFields:
      description: Creates a DNSSEC signing policy using Address Manager as the key
        provider.
      summary: Create a DNSSEC signing policy
      value:
        name: example-policy
        keyProvider: ADDRESS_MANAGER
        signatureDigestAlgorithm: SHA256
        signatureValidityPeriod: P10D
        signatureResigningPeriod: P2D
        zoneSigningKeyAlgorithm: RSASHA512
        zoneSigningKeyLength: 2048
        zoneSigningKeyValidityPeriod: P30D
        zoneSigningKeyOverlapPeriod: P7D
        zoneSigningKeyRolloverMethod: PRE_PUBLISH
        zoneSigningKeySigningPeriod: P3D
        keySigningKeyAlgorithm: RSASHA512
        keySigningKeyLength: 2048
        keySigningKeyValidityPeriod: P360D
        keySigningKeyOverlapPeriod: P14D
        keySigningKeyRolloverMethod: DOUBLE_SIGNING
    splitExampleIpv4Block:
      description: Splits the IPv4 block using the split point address.
      summary: Split a child IPv4 block
      value:
        type: IPv4BlockSplit
        block:
          id: 1234
          type: IPv4Block
        splitPointAddress: 192.168.128.0
    splitExampleIpv4Network:
      description: Splits the IPv4 network into 4 networks.
      summary: Split a child IPv4 network
      value:
        type: IPv4NetworkSplit
        network:
          id: 1234
          type: IPv4Network
        networkCount: 4
    subclassExampleRequiredFields:
      description: Creates a subclass for a hardware client class.
      summary: Create a subclass
      value:
        value: 0x123456ABCDEF
    tagGroupExampleRequiredFields:
      description: Creates a tag group using the supplied name.
      summary: Create a tag group
      value:
        name: example-group
    tagExampleRequiredFields:
      description: Creates a tag using the supplied name.
      summary: Create a tag
      value:
        name: example-tag
    taskExampleRequiredFields:
      description: "Creates a task for the specified user where the priority of the\
        \ task is normal, the task has not yet been started, and the percentage of\
        \ completion is 0."
      summary: Task with required fields
      value:
        name: example-task
        priority: NORMAL
        state: NOT_STARTED
        percentComplete: 0
    taskExampleOptionalFields:
      description: "Creates a task for the specified user where the priority of the\
        \ task is normal, the task has not yet been started, the percentage of completion\
        \ is 0, the start date is January 1st at 5:00, the due date is February 1st\
        \ at 5:00, and includes a comment about the task."
      summary: Task with optional fields
      value:
        name: example-task
        priority: NORMAL
        state: NOT_STARTED
        percentComplete: 0
        startDateTime: 2023-01-01T05:00:00Z
        dueDateTime: 2023-02-01T05:00:00Z
        comment: Example comment
    templateApplicationExampleIpv4Template:
      description: "Applies an IPv4 template to one or more resources. If the POST\
        \ request is sent to the template's `/templateApplications` subcollection,\
        \ the template is applied to all resources that have the template assigned\
        \ to them. If the POST request is sent to a resource's `/templateApplications`\
        \ subcollection, the template is only applied to that resource. Templates\
        \ are re-applied with each POST request."
      summary: Apply an IPv4 template
      value:
        type: IPv4TemplateApplication
    templateApplicationExampleZoneTemplate:
      description: "Applies an zone template to one or more resources. If the POST\
        \ request is sent to the template's `/templateApplications` subcollection,\
        \ the template is applied to all resources that have the template assigned\
        \ to them. If the POST request is sent to a resource's `/templateApplications`\
        \ subcollection, the template is only applied to that resource. Templates\
        \ are re-applied with each POST request."
      summary: Apply an zone template
      value:
        type: ZoneTemplateApplication
    templateExampleIpv4Template:
      description: "Creates an IPv4 template. Once created, items can be added to\
        \ the template by sending POST requests to the template's [/templateItems](#/IPv4%20and%20IPv6%20Resources/postTemplateTemplateItem)\
        \ subcollection."
      summary: Create an IPv4 template
      value:
        type: IPv4Template
        name: template1
    templateExampleZoneTemplate:
      description: "Creates a zone template. Once created, resource records and deployment\
        \ options can be added to the zone template by sending a POST request to its\
        \ [/deploymentOptions](#/Deployment%20Option%20Resources/getDeploymentOptions)\
        \ subcollection."
      summary: Create a zone template
      value:
        type: ZoneTemplate
        name: template1
    tftpGroupExampleRequiredFields:
      description: Creates a TFTP group using the supplied name.
      summary: Create a TFTP group
      value:
        name: example-group
    transactionExampleUndo:
      description: Undoes the specified transaction.
      summary: Undo a transaction
      value:
        transactionType: UNDO
        transactionId: 1234
    userDefinedFieldDefinitionExampleText:
      description: Creates a required text user defined field definition for configuration
        resources with a set of predefined values.
      summary: Create a text user defined field definition
      value:
        name: textField
        displayName: Text Field
        resourceType: Configuration
        dataType: TEXT
        required: true
        predefinedValues:
        - Option A
        - Option B
    userDefinedLinkDefinitionExampleUndo:
      description: Creates a user defined link definition between IPv4 addresses and
        IPv4 blocks.
      summary: Create a user defined link definition
      value:
        name: ADDR_BLOCK
        displayName: Address to Block
        sourceTypes:
        - IPv4Address
        destinationTypes:
        - IPv4Block
    userDefinedLinkExampleLinkResource:
      description: Create a link between two resources using a user-defined link definition.
      summary: Link resources
      value:
        id: 1234
        linkDefinition:
          id: 2345
          type: UserDefinedLinkDefinition
    userDefinedLinkExampleLinkResourceWithDescription:
      description: Create a link between two resources using a user-defined link definition
        and include a link description.
      summary: Link resources with description
      value:
        id: 1234
        linkDescription: link description
        linkDefinition:
          id: 2345
          type: UserDefinedLinkDefinition
    userExampleNonAdmin:
      description: "Creates a user with GUI and API access, and without administrative\
        \ privileges."
      summary: Create a user
      value:
        name: user
        password: password
        email: user@company.com
        securityPrivilege: VIEW_MY_ACCESS_RIGHTS
        accessType: GUI_AND_API
        passwordResetRequired: true
    vendorProfileExampleRequiredFields:
      description: Creates a vendor profile for Cisco IP phones.
      summary: Create a vendor profile
      value:
        name: Cisco IP phones
        identifier: "Cisco Systems, Inc. IP Phone CP-7940G"
        description: Vendor profile for Cisco IP phones
    viewExampleRequiredFields:
      description: Creates a view using the supplied name.
      summary: Create a view
      value:
        name: example-view
    zoneDeclarationExampleForwardZoneDeclarationWithManagedZone:
      description: Adds a reverse zone declaration for a managed zone to a DHCP zone
        group.
      summary: Create a reverse zone declaration with a managed zone
      value:
        type: DHCPForwardZone
        primaryDnsServerAddress: 10.10.10.10
        zone:
          id: 103307
          type: Zone
    zoneDeclarationExampleForwardZoneDeclarationWithUnmanagedZone:
      description: Adds a forward zone declaration for an unmanaged zone to a DHCP
        zone group.
      summary: Create a forward zone declaration with an unmanaged zone
      value:
        type: DHCPForwardZone
        primaryDnsServerAddress: 10.10.10.10
        zone:
          absoluteName: example.com
          type: Zone
    zoneDeclarationExampleReverseZoneDeclarationWithManagedNetwork:
      description: Adds a reverse zone declaration for a managed network to a DHCP
        zone group.
      summary: Create a reverse zone declaration with a managed network
      value:
        type: DHCPReverseZone
        primaryDnsServerAddress: 10.10.10.10
        prefix:
          id: 103307
          type: IPv4Network
    zoneDeclarationExampleReverseZoneDeclarationWithUnmanagedNetwork:
      description: Adds a reverse zone declaration for an unmanaged network to a DHCP
        zone group.
      summary: Create a reverse zone declaration with an unmanaged network
      value:
        type: DHCPReverseZone
        primaryDnsServerAddress: 10.10.10.10
        prefix:
          range: 10.0.0.0/24
          type: IPv4Network
  headers:
    Location:
      description: The location of the resource
      explode: false
      required: true
      schema:
        type: string
      style: simple
  parameters:
    x-bcn-change-control-comment:
      description: The change control comment.
      explode: false
      in: header
      name: x-bcn-change-control-comment
      required: false
      schema:
        type: string
      style: simple
    id:
      description: The ID of the resource.
      explode: false
      in: path
      name: id
      required: true
      schema:
        example: 12345
        format: int64
        type: integer
      style: simple
    fields:
      description: The subset of response resource field paths.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    limit:
      description: The maximum number of resources returned in the response.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        format: int32
        type: integer
      style: form
    offset:
      description: The offset of the first resource returned in the response.
      explode: true
      in: query
      name: offset
      required: false
      schema:
        format: int32
        type: integer
      style: form
    filter:
      description: The query filter string.
      explode: true
      in: query
      name: filter
      required: false
      schema:
        type: string
      style: form
    orderBy:
      description: The field path to order the response resources by.
      explode: true
      in: query
      name: orderBy
      required: false
      schema:
        type: string
      style: form
    total:
      description: Return the total number of resources matching the query.
      explode: true
      in: query
      name: total
      required: false
      schema:
        type: boolean
      style: form
    collectionId:
      description: The ID of the collection resource.
      explode: false
      in: path
      name: collectionId
      required: true
      schema:
        example: 12345
        format: int64
        type: integer
      style: simple
  schemas:
    ACL:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ACL
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        predefined:
          description: Indicates whether the access control list is predefined by
            the system (true) or user-created (false).
          readOnly: true
          type: boolean
        matchElements:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    Configuration:
      description: The configuration the resource belongs to.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Configuration
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configurationGroup:
          description: The configuration group that the configuration is part of.
          example: Test Configuration Group
          type: string
        description:
          description: The description of the configuration.
          example: Main configuration
          type: string
        snmp:
          $ref: '#/components/schemas/SnmpBean'
        serverMonitoringEnabled:
          description: Indicates whether monitoring service is enabled for the configuration.
          nullable: false
          type: boolean
        dhcpConfigurationValidationEnabled:
          description: Indicates whether the syntax of the dhcpd.conf file is validated
            before data is deployed from Address Manager.
          nullable: false
          type: boolean
        dnsConfigurationValidationEnabled:
          description: Indicates whether the syntax of the named.conf file is validated
            before data is deployed from Address Manager.
          nullable: false
          type: boolean
        dnsZoneValidationEnabled:
          description: Indicates whether the syntax of each DNS zone file is validated
            before data is deployed from Address Manager.
          nullable: false
          type: boolean
        checkIntegrityValidation:
          description: Indicates the type of DNS zone validation check performed on
            the configuration.
          enum:
          - NONE
          - LOCAL
          - LOCAL_SIBLING
          - FULL
          - FULL_SIBLING
          nullable: false
          type: string
        checkMxCnameValidation:
          description: This option checks that MX records point to a CNAME record
            rather than an A or AAAA record. This is equivalent to setting the -M
            switch for the named-checkzone tool.
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkMxValidation:
          description: This option checks that MX records point to an IP address rather
            than an A or AAAA record. This is equivalent to setting the -m switch
            for the named-checkzone tool.
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkNamesValidation:
          description: "This option checks that A, AAAA, and MX record names are legal\
            \ hostnames. It also checks that domain names in the RDATA of NS, SOA,\
            \ and MX records are legal. This is equivalent to setting the -k switch\
            \ for the named-checkzone tool."
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkNsValidation:
          description: This option checks that NS records point to an IP address rather
            than an A or AAAA record. This is equivalent to setting the -n switch
            for the named-checkzone tool.
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkSrvCnameValidation:
          description: This option checks that SRV records point to a CNAME record
            rather than A or AAAA record. This is equivalent to setting the -S switch
            for the named-checkzone tool.
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkWildcardValidation:
          description: "This option checks for wildcards in zone names that don't\
            \ appear as the left-most segment of a zone name: for example, mail.*.example.com.\
            \ Non-terminal wildcards are permissible, but you may want to be alerted\
            \ to their presence. This is equivalent to setting the -W switch for the\
            \ named-checkzone tool."
          enum:
          - IGNORE
          - WARN
          nullable: false
          type: string
        dnsOptionInheritanceEnabled:
          description: "Controls whether DNS options are inherited by child zones\
            \ within a configuration. When DNS option inheritance is disabled, DNS\
            \ options that have been configured on a zone aren't inherited by the\
            \ child zone. In the reverse space, DNS options that have been configured\
            \ on a block aren't inherited by the child block or network when DNS option\
            \ inheritance is disabled."
          nullable: false
          type: boolean
        dnsFeedEnabled:
          description: Defines whether the BlueCat Security Feed is enabled.
          nullable: false
          type: boolean
        dnsFeedLicense:
          description: The BlueCat Security Feed license.
          example: License Feed information
          pattern: ^.*\S+.*$
          type: string
        blockUsageCalculation:
          description: Defines the IP space use statistics to keep track of the amount
            of space available in your block.
          enum:
          - ADDRESS_ALLOCATION
          - NETWORK_ALLOCATION
          nullable: false
          type: string
        sharedNetworkTagGroup:
          allOf:
          - $ref: '#/components/schemas/InlinedTagGroup'
          required:
          - id
        keyAutoRegenerationEnabled:
          description: "Indicates whether Address Manager will regenerate ZSKs and\
            \ KSKs. When a zone is signed with a DNSSEC signing policy, Address Manager\
            \ enables this option automatically."
          nullable: false
          type: boolean
      type: object
    InlinedConfiguration:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Configuration
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
      title: Configuration
      type: object
    InlinedTagGroup:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - TagGroup
          type: string
        name:
          description: The name of the tag group.
          example: EMEA Tag Group
          pattern: ^.*\S+.*$
          type: string
      title: TagGroup
      type: object
    List:
      items:
        type: string
      type: array
    Map:
      additionalProperties:
        description: User-defined fields set for the resource.
        type: string
      description: User-defined fields set for the resource.
      type: object
    SnmpBean:
      description: Defines the SNMP settings of the configuration.
      discriminator:
        propertyName: version
      example:
        port: 161
        version: v1
        enabled: true
      properties:
        version:
          description: The SNMP version for the router or switch.
          enum:
          - v1
          - v2c
          - v3
          nullable: false
          type: string
        enabled:
          description: Indicates whether SNMP service is enabled.
          type: boolean
        port:
          description: The SNMP port that is used to communicate with the router or
            switch.
          example: 161
          format: int32
          maximum: 65535
          minimum: 1
          type: integer
      type: object
    Snmpv1Bean:
      allOf:
      - $ref: '#/components/schemas/SnmpBean'
      - properties:
          communities:
            items:
              description: The SNMP community string name. This string is used to
                authenticate the polling request.
              example: SNMP Community String
              type: string
            minItems: 1
            type: array
        type: object
      type: object
    Snmpv2cBean:
      allOf:
      - $ref: '#/components/schemas/SnmpBean'
      - properties:
          communities:
            items:
              description: The SNMP community string name. This string is used to
                authenticate the polling request.
              example: SNMP Community String
              type: string
            minItems: 1
            type: array
        type: object
      type: object
    Snmpv3Bean:
      allOf:
      - $ref: '#/components/schemas/SnmpBean'
      - properties:
          securityLevel:
            description: The SNMP security level.
            enum:
            - NOAUTH_NOPRIV
            - AUTH_NOPRIV
            - AUTH_PRIV
            type: string
          usernames:
            items:
              description: The SNMP username.
              example: adminUser
              type: string
            type: array
          context:
            type: string
          authenticationProtocol:
            description: The authentication protocol to use with SNMP version 3.
            enum:
            - MD5
            - SHA
            type: string
          authenticationPassphrase:
            description: The user authentication password of the SNMP user.
            example: UserPassword
            type: string
          privacyProtocol:
            description: The user authentication protocol used to encrypt the SNMP
              messages.
            enum:
            - DES
            - AES128
            type: string
          privacyPassphrase:
            description: The privacy authentication password used to encrypt the SNMP
              data.
            example: EncryptedPassphrase
            type: string
        type: object
      type: object
    TagGroup:
      description: The Shared Network Tag Group assigned to the configuration.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - TagGroup
          type: string
        name:
          description: The name of the tag group.
          example: EMEA Tag Group
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
      type: object
    AccessRight:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - AccessRight
          type: string
        defaultAccessLevel:
          description: The default access right assigned to the user or group.
          enum:
          - HIDE
          - VIEW
          - CHANGE
          - ADD
          - FULL
          nullable: false
          type: string
        userScope:
          allOf:
          - $ref: '#/components/schemas/InlinedUserScope'
          nullable: false
          required:
          - id
        resource:
          allOf:
          - $ref: '#/components/schemas/InlinedResource'
          required:
          - id
        deploymentsAllowed:
          description: Indicates whether or not the user or group can perform a full
            deployment of data from the configuration to a managed server.
          nullable: false
          type: boolean
        quickDeploymentsAllowed:
          description: Indicates whether or not the user or group can instantly deploy
            changed DNS resource records.
          nullable: false
          type: boolean
        workflowLevel:
          description: The workflow level assigned to the user.
          enum:
          - NONE
          - RECOMMEND
          - APPROVE
          - DELETE
          nullable: false
          type: string
        accessOverrides:
          description: A list of overridden access rights.
          items:
            $ref: '#/components/schemas/AccessRightOverrideBean'
          nullable: false
          type: array
        selectiveDeploymentsAllowed:
          description: "Indicates whether a user or group can perform a selection\
            \ deployment of data to a managed server, and dynamically deploy resource\
            \ records that are added, updated, and deleted within a DNS zone that\
            \ has the Dynamic Update feature enabled."
          nullable: false
          type: boolean
      type: object
    AccessRightOverrideBean:
      description: A list of overridden access rights.
      example:
        accessLevel: HIDE
        resourceType: ACL
      properties:
        resourceType:
          description: The resource type of the overridden access right.
          enum:
          - ACL
          - AddressManagerAuthenticator
          - AliasRecord
          - Configuration
          - DHCPClientIdentifier
          - DHCPDeploymentRole
          - DHCPForwardZone
          - DHCPReverseZone
          - DHCPUniqueIdentifier
          - DHCPVendorOption
          - DHCPVendorOptionDefinition
          - DHCPZoneGroup
          - DHCPv4ClientClass
          - DHCPv4ClientOption
          - DHCPv4ClientOptionDefinition
          - DHCPv4CustomClientOptionDefinition
          - DHCPv4RawOption
          - DHCPv4ServiceOption
          - DHCPv4ServiceOptionDefinition
          - DHCPv4Subclass
          - DHCPv6ClientOption
          - DHCPv6ClientOptionDefinition
          - DHCPv6RawOption
          - DHCPv6ServiceOption
          - DHCPv6ServiceOptionDefinition
          - DNS64
          - DNSDeploymentRole
          - DNSOption
          - DNSOptionDefinition
          - DNSRawOption
          - DNSSECSigningPolicy
          - DenyMACPool
          - DeploymentSchedule
          - Device
          - DeviceSubtype
          - DeviceType
          - ENUMNumberZone
          - ENUMZone
          - EntrustKeySigningKey
          - EntrustZoneSigningKey
          - ExternalHostRecord
          - ExternalHostsZone
          - GenericRecord
          - HAServer
          - HINFORecord
          - HSMConfiguration
          - HSMServer
          - HostRecord
          - IPv4Address
          - IPv4Block
          - IPv4DHCPRange
          - IPv4DHCPRangeTemplateItem
          - IPv4GatewayTemplateItem
          - IPv4Group
          - IPv4GroupTemplateItem
          - IPv4Network
          - IPv4ReconciliationPolicy
          - IPv4ReservedRangeTemplateItem
          - IPv4Template
          - IPv6Address
          - IPv6Block
          - IPv6DHCPRange
          - IPv6Network
          - IPv6ReconciliationPolicy
          - InternalRootZone
          - KerberosAuthenticator
          - KerberosRealm
          - KerberosServicePrincipal
          - KeyDistributionCenter
          - KeySigningKey
          - LDAPAuthenticator
          - Location
          - MACAddress
          - MACPool
          - MXRecord
          - NAPTRRecord
          - NamingPolicy
          - NamingPolicyConnectorValue
          - NamingPolicyIncrementalValue
          - NamingPolicyIntegerValue
          - NamingPolicyRequiredValue
          - NamingPolicyRestriction
          - NamingPolicyTextValue
          - NetworkInterface
          - NotificationGroup
          - OAuthAuthorizationServer
          - PublishedInterface
          - RADIUSAuthenticator
          - Report
          - ReportSchedule
          - ResponsePolicy
          - ResponsePolicyZone
          - SAMLIdentityProvider
          - SRVRecord
          - Server
          - ServerGroup
          - StartOfAuthority
          - StartOfAuthorityDefinition
          - TACACSPlusAuthenticator
          - TFTPDeploymentRole
          - TFTPFile
          - TFTPFolder
          - TFTPGroup
          - TSIGKey
          - TXTRecord
          - Tag
          - TagGroup
          - Task
          - User
          - UserGroup
          - VendorProfile
          - View
          - VirtualInterface
          - X509Authenticator
          - Zone
          - ZoneSigningKey
          - ZoneTemplate
          nullable: false
          type: string
        accessLevel:
          description: The access right level applied to the object type.
          enum:
          - HIDE
          - VIEW
          - CHANGE
          - ADD
          - FULL
          nullable: false
          type: string
      type: object
    AddressManagerAuthenticator:
      allOf:
      - $ref: '#/components/schemas/Authenticator'
      - properties:
          type:
            description: The type of authenticator.
            enum:
            - AddressManagerAuthenticator
            nullable: false
            type: string
          hostname:
            description: The fully qualified domain name or IP address for the authenticator.
            example: https://hostname.com
            pattern: ^.*\S+.*$
            type: string
        type: object
      type: object
    Authenticator:
      description: The authenticator that manages the user.
      discriminator:
        propertyName: type
      example:
        secondaryAuthenticator: ""
        name: LDAP authenticator
        id: 103307
        type: Authenticator
        userDefinedFields:
          key: userDefinedFields
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The type of authenticator.
          enum:
          - Authenticator
          nullable: false
          type: string
        name:
          description: The name for the authenticator.
          example: LDAP authenticator
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        secondaryAuthenticator:
          allOf:
          - $ref: '#/components/schemas/InlinedAuthenticator'
          required:
          - id
      type: object
    InlinedAuthenticator:
      example:
        name: LDAP authenticator
        id: 103307
        type: Authenticator
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The type of authenticator.
          enum:
          - Authenticator
          nullable: false
          type: string
        name:
          description: The name for the authenticator.
          example: LDAP authenticator
          pattern: ^.*\S+.*$
          type: string
      title: Authenticator
      type: object
    InlinedResource:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Resource
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
      title: Resource
      type: object
    InlinedUserScope:
      properties:
        id:
          description: The user or user group resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The user scope resource type.
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
      title: UserScope
      type: object
    KerberosAuthenticator:
      allOf:
      - $ref: '#/components/schemas/Authenticator'
      - properties:
          type:
            description: The type of authenticator.
            enum:
            - KerberosAuthenticator
            nullable: false
            type: string
          hostname:
            description: The fully qualified domain name or IP address for the authenticator.
            example: https://hostname.com
            pattern: ^.*\S+.*$
            type: string
          realm:
            description: The administrative domain for the Kerberos server.
            example: DOMAIN.COM
            pattern: ^.*\S+.*$
            type: string
        type: object
      type: object
    LDAPAuthenticator:
      allOf:
      - $ref: '#/components/schemas/Authenticator'
      - properties:
          type:
            description: The type of authenticator.
            enum:
            - LDAPAuthenticator
            nullable: false
            type: string
          hostname:
            description: The fully qualified domain name or IP address for the authenticator.
            example: https://hostname.com
            pattern: ^.*\S+.*$
            type: string
          port:
            description: The TCP port used for communication between Address Manager
              and the default LDAP server.
            example: 1389
            format: int32
            maximum: 65535
            minimum: 1
            nullable: false
            type: integer
          adminDn:
            description: The distinguished name or relative distinguished name of
              a user with rights to search the LDAP directory.
            example: user1
            pattern: ^.*\S+.*$
            type: string
          adminPassword:
            description: The password for the distinguished name or relative distinguished
              name.
            example: pass1
            pattern: ^.*\S+.*$
            type: string
          sslEnabled:
            description: Determines whether SSL communication is enabled between Address
              Manager and the LDAP server.
            nullable: false
            type: boolean
          schemaType:
            description: The type of LDAP schema.
            enum:
            - ACTIVE_DIRECTORY
            - OPENLDAP
            - OTHER_LDAP
            nullable: false
            type: string
          searchBase:
            description: The search base distinguished name location from which the
              search for users on the LDAP server begins.
            example: "cn=users,dc=example,dc=com"
            pattern: ^.*\S+.*$
            type: string
          userObjectClass:
            description: The user object class used to locate an LDAP user.
            example: person
            pattern: ^.*\S+.*$
            type: string
          groupObjectClass:
            description: The group object class used to indicate that a DN is a group.
            example: group
            pattern: ^.*\S+.*$
            type: string
          userPrefix:
            description: The user attribute for user accounts in the LDAP tree.
            example: samAccountName
            pattern: ^.*\S+.*$
            type: string
          emailPrefix:
            description: The variable to be used for the email prefix.
            example: userPrincipalName
            pattern: ^.*\S+.*$
            type: string
          memberOfPrefix:
            description: The attribute used to store user-group membership information.
            example: memberOf
            pattern: ^.*\S+.*$
            type: string
          referralPolicy:
            description: The environment property that indicates how to handle referrals
              from external resources to the service providers.
            enum:
            - IGNORE
            - FOLLOW
            - THROW
            nullable: false
            type: string
          aliasDereferencePolicy:
            description: The environment property that indicates whether alias entries
              are dereferenced.
            enum:
            - ALWAYS
            - NEVER
            - FINDING
            - SEARCHING
            nullable: false
            type: string
        type: object
      type: object
    NameValuePairBean:
      description: An attribute-value pair defined for the custom service in the TACACS+
        server.
      properties:
        name:
          description: The name for the value.
          example: Test
          pattern: ^.*\S+.*$
          type: string
        value:
          description: The value to be inserted.
          example: Text
          type: string
      type: object
    OAuthAuthorizationServer:
      allOf:
      - $ref: '#/components/schemas/Authenticator'
      - properties:
          type:
            description: The type of authenticator.
            enum:
            - OAuthAuthorizationServer
            nullable: false
            type: string
          description:
            description: The description of the authorization server.
            example: OAuth server
            type: string
          enabled:
            description: Indicates whether OAuth authentication is enabled.
            nullable: false
            type: boolean
          userClaim:
            description: The user claim name of the authorization server.
            example: sub
            pattern: ^.*\S+.*$
            type: string
          groupClaim:
            description: The group claim name of the authorization server.
            example: group
            pattern: ^.*\S+.*$
            type: string
          emailClaim:
            description: The email claim name of the authorization server.
            example: email
            pattern: ^.*\S+.*$
            type: string
          validationMethod:
            description: The method that indicates where the token validation occurs.
            enum:
            - AUTHORIZATION_SERVER
            - LOCAL
            nullable: false
            type: string
          clientId:
            description: The public identifier of the application.
            example: a1b2c3d4e5f6
            pattern: ^.*\S+.*$
            type: string
          clientSecret:
            description: The client secret known only to the application and authorization
              server.
            example: 18a42498e37480952a1e7f412539f93ce0dfa042d57a95e3ce915516ead51a2
            pattern: ^.*\S+.*$
            type: string
          introspectionUrl:
            description: The introspection endpoint that allows Address Manager to
              check the validity of access tokens.
            example: https://auth-server.com
            type: string
          userInfoUrl:
            description: "The endpoint containing information about the user, including\
              \ the group membership information and user ID."
            example: https://auth-server.com/userinfo
            type: string
          authorizationOption:
            description: The authorization method used when Address Manager sends
              the client ID and client secret to the authorization server.
            enum:
            - BASIC
            - POST
            type: string
          audience:
            description: The name of the BAM API bearer token obtained from the authorization
              server.
            pattern: ^.*\S+.*$
            type: string
          issuer:
            description: The name of the token issuer.
            example: https://auth-server.com
            pattern: ^.*\S+.*$
            type: string
          signingCertificate:
            description: The authoritative server signing certificate.
            format: byte
            type: string
        type: object
      type: object
    RADIUSAuthenticator:
      allOf:
      - $ref: '#/components/schemas/Authenticator'
      - properties:
          type:
            description: The type of authenticator.
            enum:
            - RADIUSAuthenticator
            nullable: false
            type: string
          hostname:
            description: The fully qualified domain name or IP address for the authenticator.
            example: https://hostname.com
            pattern: ^.*\S+.*$
            type: string
          timeout:
            description: The value that overrides the timeout setting used for authentication
              requests sent to the RADIUS server.
            example: PT6S
            nullable: false
            type: string
          port:
            description: The port number used for authenticating users against the
              RADIUS server.
            example: 1812
            format: int32
            maximum: 65535
            minimum: 1
            nullable: false
            type: integer
          retries:
            description: The number of times Address Manager attempts to retransmit
              a failed authentication request sent to the RADIUS server.
            example: 1
            format: int32
            maximum: 10
            minimum: 1
            nullable: false
            type: integer
          sharedSecret:
            description: The shared secret used to encrypt and decrypt packets between
              the client and the server.
            example: Shar3dS3cret!
            pattern: ^.*\S+.*$
            type: string
          authenticationProtocol:
            description: The authentication protocol.
            enum:
            - CHAP
            - PAP
            nullable: false
            type: string
        type: object
      type: object
    Resource:
      description: The base resource type
      example:
        name: name
        id: 103307
        type: Resource
        userDefinedFields:
          key: userDefinedFields
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Resource
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
      type: object
    SAMLIdentityProvider:
      allOf:
      - $ref: '#/components/schemas/Authenticator'
      - properties:
          type:
            description: The type of authenticator.
            enum:
            - SAMLIdentityProvider
            nullable: false
            type: string
          description:
            description: The description of the SAML IdP configuration.
            example: IdP configuration
            type: string
          enabled:
            description: Indicates whether SAML IdP authentication is enabled.
            nullable: false
            type: boolean
          groupAttribute:
            description: The attribute name for group in the SAML response.
            example: http://schemas.xmlsoap.org/claims/Group
            pattern: ^.*\S+.*$
            type: string
          emailAttribute:
            description: The attribute name for email in the SAML response.
            example: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress
            pattern: ^.*\S+.*$
            type: string
          signOnUrl:
            description: The sign-in URL of the SAMP IdP.
            example: https://example-idp.com/SSORedirect/idp
            pattern: ^.*\S+.*$
            type: string
          logoutUrl:
            description: The logout URL of the SAMP IdP.
            example: https://example-idp.com/SSORedirect/logout
            type: string
          entityId:
            description: The entity ID of the SAMP IdP.
            example: example-idp.com
            pattern: ^.*\S+.*$
            type: string
          signingCertificate:
            description: The SAML IdP server signing certificate.
            format: byte
            nullable: false
            type: string
        type: object
      type: object
    TACACSPlusAuthenticator:
      allOf:
      - $ref: '#/components/schemas/Authenticator'
      - properties:
          type:
            description: The type of authenticator.
            enum:
            - TACACSPlusAuthenticator
            nullable: false
            type: string
          hostname:
            description: The fully qualified domain name or IP address for the authenticator.
            example: https://hostname.com
            pattern: ^.*\S+.*$
            type: string
          timeout:
            description: The value that overrides the timeout setting used for authentication
              requests sent to the TACACS+ server.
            example: PT2S
            nullable: false
            type: string
          port:
            description: The TCP port number used for communication between the client
              and server.
            example: 49
            format: int32
            maximum: 65535
            minimum: 1
            nullable: false
            type: integer
          sharedSecret:
            description: The shared secret used to encrypt and decrypt packets between
              the client and the server.
            example: Shar3dS3cret!
            pattern: ^.*\S+.*$
            type: string
          authenticationProtocol:
            description: The authentication protocol.
            enum:
            - CHAP
            - PAP
            nullable: false
            type: string
          groupAttribute:
            description: The special attribute used for the custom service in the
              TACACS+ server. This attribute is used to get the group name defined
              in the TACACS+ server.
            example: Example group
            pattern: ^.*\S+.*$
            type: string
          attributes:
            items:
              $ref: '#/components/schemas/NameValuePairBean'
            nullable: false
            type: array
        type: object
      type: object
    User:
      description: "The user who modified the workflow request. For example, the authorized\
        \ user who approved the workflow request."
      example:
        accountLocked: true
        administrativeAccessLevels:
          key: administrativeAccessLevels
        x509Required: true
        type: User
        userDefinedFields:
          key: userDefinedFields
        accessType: GUI
        password: password
        phoneNumber: 555-1234
        name: admin
        id: 103307
        passwordResetRequired: true
        authenticator: ""
        securityPrivilege: NO_ACCESS
        email: user@example.com
        historyPrivilege: HIDE
      properties:
        id:
          description: The user or user group resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The user scope resource type.
          enum:
          - User
          type: string
        name:
          description: The name of the user.
          example: admin
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        password:
          description: The password of the user.
          example: password
          pattern: ^.*\S+.*$
          type: string
          writeOnly: true
        authenticator:
          allOf:
          - $ref: '#/components/schemas/InlinedAuthenticator'
          nullable: false
          required:
          - id
        email:
          description: The email address of the user.
          example: user@example.com
          pattern: ^.*\S+.*$
          type: string
        phoneNumber:
          description: The phone number of the user.
          example: 555-1234
          type: string
        securityPrivilege:
          description: The configured security privilege of the user.
          enum:
          - NO_ACCESS
          - VIEW_MY_ACCESS_RIGHTS
          - VIEW_OTHERS_ACCESS_RIGHTS
          - CHANGE_ACCESS_RIGHTS
          - ADD_ACCESS_RIGHTS
          - DELETE_ACCESS_RIGHTS
          - ADMINISTRATOR
          nullable: false
          type: string
        historyPrivilege:
          description: The configured history privilege of the user.
          enum:
          - HIDE
          - VIEW_HISTORY_LIST
          - ADMINISTRATOR
          nullable: false
          type: string
        accessType:
          description: "The access type of the user. The access type can be GUI, API,\
            \ or both."
          enum:
          - GUI
          - API
          - GUI_AND_API
          nullable: false
          type: string
        passwordResetRequired:
          description: Indicates whether the user must reset their password upon their
            initial log in to Address Manager.
          nullable: false
          type: boolean
        accountLocked:
          description: Indicates whether the user account has been locked.
          nullable: false
          type: boolean
        x509Required:
          description: Indicates whether the user must access Address Manager using
            X.509 authentication only.
          nullable: false
          type: boolean
        administrativeAccessLevels:
          additionalProperties:
            description: "The administrative access right levels that the user has\
              \ for the events list, log management, and reporting."
            type: string
          description: "The administrative access right levels that the user has for\
            \ the events list, log management, and reporting."
          readOnly: true
          type: object
      type: object
    UserScope:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The user or user group resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The user scope resource type.
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
      type: object
    LinkedAddress:
      description: An IP address assigned to the host record.
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The type of IP address.
          type: string
        address:
          type: string
        state:
          description: The state of the IP address.
          enum:
          - UNASSIGNED
          - DHCP_ABANDONED
          - DHCP_ALLOCATED
          - DHCP_EXCLUDED
          - DHCP_FREE
          - DHCP_LEASED
          - DHCP_RESERVED
          - DHCP_UNASSIGNED
          - GATEWAY
          - RESERVED
          - RESTRICTED
          - STATIC
          type: string
      type: object
    LinkedIPv4Address:
      allOf:
      - $ref: '#/components/schemas/LinkedAddress'
      - properties:
          type:
            description: The type of IP address.
            enum:
            - IPv4Address
            type: string
        type: object
      type: object
    LinkedIPv6Address:
      allOf:
      - $ref: '#/components/schemas/LinkedAddress'
      - properties:
          type:
            description: The type of IP address.
            enum:
            - IPv6Address
            type: string
        type: object
      type: object
    Address:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The type of IP address.
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        state:
          description: The state of the IP address.
          enum:
          - UNASSIGNED
          - DHCP_ABANDONED
          - DHCP_ALLOCATED
          - DHCP_EXCLUDED
          - DHCP_FREE
          - DHCP_LEASED
          - DHCP_RESERVED
          - DHCP_UNASSIGNED
          - GATEWAY
          - RESERVED
          - RESTRICTED
          - STATIC
          type: string
        address:
          type: string
        macAddress:
          $ref: '#/components/schemas/Address_macAddress'
        device:
          allOf:
          - $ref: '#/components/schemas/InlinedDevice'
          required:
          - id
        location:
          allOf:
          - $ref: '#/components/schemas/InlinedLocation'
          required:
          - id
        resourceRecords:
          items:
            allOf:
            - $ref: '#/components/schemas/ResourceRecord'
            required:
            - absoluteName
          type: array
          writeOnly: true
        leaseDateTime:
          description: The timestamp detailing when the lease for the IP address was
            offered.
          example: 2022-01-15T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        leaseExpirationDateTime:
          description: The timestamp detailing when the lease for the IP address expires.
          example: 2022-01-25T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        remoteId:
          description: The ID of the relay agent.
          example: "1234"
          readOnly: true
          type: string
      type: object
    AliasRecord:
      allOf:
      - $ref: '#/components/schemas/ResourceRecord'
      - properties:
          type:
            description: The resource type.
            enum:
            - AliasRecord
            nullable: false
            type: string
          linkedRecord:
            $ref: '#/components/schemas/AliasRecord_allOf_linkedRecord'
        type: object
      type: object
    DHCPClientIdentifier:
      allOf:
      - $ref: '#/components/schemas/ClientIdentifier'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPClientIdentifier
            nullable: false
            type: string
          uid:
            $ref: '#/components/schemas/UID'
        type: object
      type: object
    DHCPUniqueIdentifier:
      allOf:
      - $ref: '#/components/schemas/ClientIdentifier'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPUniqueIdentifier
            nullable: false
            type: string
          duid:
            description: The DHCP unique identifier.
            nullable: false
            type: string
        type: object
      type: object
    Device:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Device
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        addresses:
          items:
            $ref: '#/components/schemas/Device_addresses_inner'
          type: array
          writeOnly: true
        deviceType:
          allOf:
          - $ref: '#/components/schemas/InlinedDeviceType'
          required:
          - id
        deviceSubtype:
          allOf:
          - $ref: '#/components/schemas/InlinedDeviceSubtype'
          required:
          - id
      type: object
    DeviceSubtype:
      description: The device subtype.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DeviceSubtype
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
      type: object
    DeviceType:
      description: The device type.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DeviceType
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
      type: object
    ExternalHostRecord:
      allOf:
      - $ref: '#/components/schemas/ResourceRecord'
      - properties:
          type:
            description: The resource type.
            enum:
            - ExternalHostRecord
            nullable: false
            type: string
          name:
            description: The name of the resource.
            example: name
            nullable: false
            pattern: ^.*\S+.*$
            type: string
          view:
            allOf:
            - $ref: '#/components/schemas/InlinedView'
            required:
            - id
            writeOnly: true
        type: object
      type: object
    GenericRecord:
      allOf:
      - $ref: '#/components/schemas/ResourceRecord'
      - properties:
          type:
            description: The resource type.
            enum:
            - GenericRecord
            nullable: false
            type: string
          recordType:
            description: The resource record type.
            enum:
            - A
            - A6
            - AAAA
            - AFSDB
            - APL
            - CAA
            - CERT
            - DHCID
            - DNAME
            - DS
            - IPSECKEY
            - ISDN
            - KEY
            - KX
            - LOC
            - MB
            - MG
            - MINFO
            - MR
            - NS
            - NSAP
            - PTR
            - PX
            - RP
            - RT
            - SINK
            - SPF
            - SSHFP
            - TLSA
            - TXT
            - WKS
            - X25
            nullable: false
            type: string
          rdata:
            description: The resource record data.
            example: 3 1 1 ecc104c4fbb06b249d3c7a68f19cf28a60a9c6814874ad7efde451688039fe01
            pattern: ^.*\S+.*$
            type: string
        type: object
      type: object
    HINFORecord:
      allOf:
      - $ref: '#/components/schemas/ResourceRecord'
      - properties:
          type:
            description: The resource type.
            enum:
            - HINFORecord
            nullable: false
            type: string
          os:
            description: The string describing the server operating system.
            example: Debian Linux 5.10
            type: string
          cpu:
            description: The string describing the server CPU.
            example: INTEL
            type: string
        type: object
      type: object
    HostRecord:
      allOf:
      - $ref: '#/components/schemas/ResourceRecord'
      - properties:
          type:
            description: The resource type.
            enum:
            - HostRecord
            nullable: false
            type: string
          addresses:
            items:
              $ref: '#/components/schemas/LinkedAddress'
            minItems: 1
            type: array
            writeOnly: true
          reverseRecord:
            description: Indicates if a PTR record is created for the host record.
            nullable: false
            type: boolean
          views:
            items:
              $ref: '#/components/schemas/HostRecord_allOf_views'
            type: array
            writeOnly: true
        type: object
      type: object
    IPv4Address:
      allOf:
      - $ref: '#/components/schemas/Address'
      - properties:
          type:
            description: The type of IP address.
            enum:
            - IPv4Address
            nullable: false
            type: string
          state:
            description: The state of the IP address.
            enum:
            - STATIC
            - RESERVED
            - DHCP_RESERVED
            - GATEWAY
            nullable: false
            type: string
          ipGroup:
            allOf:
            - $ref: '#/components/schemas/InlinedIPv4Group'
            readOnly: true
            required:
            - id
          template:
            allOf:
            - $ref: '#/components/schemas/InlinedIPv4Template'
            required:
            - id
          circuitId:
            description: The ID of the circuit from which the request came.
            example: "123"
            readOnly: true
            type: string
          routerPortInfo:
            description: Connected router port information for the IPv4 address.
            readOnly: true
            type: string
          switchPortInfo:
            description: Connected switch port information for the IPv4 address.
            readOnly: true
            type: string
          vlanInfo:
            description: VLAN information for the IPv4 address.
            readOnly: true
            type: string
          vendorClassIdentifier:
            description: An identifier sent by the DHCP client software running on
              a device.
            readOnly: true
            type: string
          parameterRequestList:
            description: The list of parameters that the device requested from the
              DHCP server.
            items:
              description: The list of parameters that the device requested from the
                DHCP server.
              format: int32
              type: integer
            readOnly: true
            type: array
          clientIdentifier:
            allOf:
            - $ref: '#/components/schemas/InlinedDHCPClientIdentifier'
            required:
            - uid
        type: object
      type: object
    IPv4Group:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - IPv4Group
          nullable: false
          type: string
        name:
          description: The name of the IPv4 group.
          example: Example IPv4 Group
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        range:
          description: The address range for the IPv4 group.
          nullable: false
          type: string
      type: object
    IPv4Template:
      allOf:
      - $ref: '#/components/schemas/Template'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4Template
            nullable: false
            type: string
          configuration:
            allOf:
            - $ref: '#/components/schemas/InlinedConfiguration'
            readOnly: true
            required:
            - id
        type: object
      type: object
    IPv6Address:
      allOf:
      - $ref: '#/components/schemas/Address'
      - properties:
          type:
            description: The type of IP address.
            enum:
            - IPv6Address
            nullable: false
            type: string
          state:
            description: The state of the IP address.
            enum:
            - DHCP_RESERVED
            - STATIC
            nullable: false
            type: string
          reservedUsing:
            description: The type of DHCP reservation.
            enum:
            - CLIENT_DUID
            - MAC_ADDRESS
            type: string
          identityAssociationIdentifier:
            description: The Identity Association Identifier for the network interface
              of the client system.
            example: "00040001"
            readOnly: true
            type: string
          clientIdentifier:
            allOf:
            - $ref: '#/components/schemas/InlinedDHCPUniqueIdentifier'
            required:
            - duid
          interfaceId:
            description: The ID of the interface from which the request came.
            example: "123"
            readOnly: true
            type: string
        type: object
      type: object
    InlinedDHCPClientIdentifier:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DHCPClientIdentifier
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        uid:
          $ref: '#/components/schemas/UID'
      title: DHCPClientIdentifier
      type: object
    InlinedDHCPUniqueIdentifier:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DHCPUniqueIdentifier
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        duid:
          description: The DHCP unique identifier.
          nullable: false
          type: string
      title: DHCPUniqueIdentifier
      type: object
    InlinedDevice:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Device
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
      title: Device
      type: object
    InlinedDeviceSubtype:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DeviceSubtype
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
      title: DeviceSubtype
      type: object
    InlinedDeviceType:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DeviceType
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
      title: DeviceType
      type: object
    InlinedIPv4Group:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - IPv4Group
          nullable: false
          type: string
        name:
          description: The name of the IPv4 group.
          example: Example IPv4 Group
          pattern: ^.*\S+.*$
          type: string
      title: IPv4Group
      type: object
    InlinedIPv4Template:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - IPv4Template
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
      title: IPv4Template
      type: object
    InlinedLinkedLinkableHostRecord:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          type: string
        absoluteName:
          description: The fully qualified domain name of the resource record.
          example: host1.example.com
          type: string
      title: LinkableHostRecord
      type: object
    InlinedLinkedResourceRecord:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          type: string
        absoluteName:
          description: The fully qualified domain name of the resource record.
          example: host1.example.com
          type: string
      title: ResourceRecord
      type: object
    InlinedLocation:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Location
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
      title: Location
      type: object
    InlinedMACAddress:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - MACAddress
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        address:
          description: The MAC address.
          example: 00-00-5E-00-53-AF
          nullable: false
          type: string
      title: MACAddress
      type: object
    InlinedMacPool:
      description: The MAC pool that the MAC address is associated with.
      discriminator:
        propertyName: type
      example:
        name: name
        id: 103307
        type: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          nullable: false
          type: integer
        type:
          description: The resource type.
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    InlinedView:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - View
          type: string
        name:
          description: The name of the view.
          example: default
          pattern: ^.*\S+.*$
          type: string
      title: View
      type: object
    LinkedAliasRecord:
      allOf:
      - $ref: '#/components/schemas/LinkedResourceRecord'
      - properties:
          type:
            description: The resource type.
            enum:
            - AliasRecord
            type: string
        type: object
      type: object
    LinkedExternalHostRecord:
      allOf:
      - $ref: '#/components/schemas/LinkedResourceRecord'
      - properties:
          type:
            description: The resource type.
            enum:
            - ExternalHostRecord
            type: string
          view:
            allOf:
            - $ref: '#/components/schemas/InlinedView'
            required:
            - id
        type: object
      type: object
    LinkedHostRecord:
      allOf:
      - $ref: '#/components/schemas/LinkedResourceRecord'
      - properties:
          type:
            description: The resource type.
            enum:
            - HostRecord
            type: string
          reverseRecord:
            type: boolean
          views:
            items:
              $ref: '#/components/schemas/LinkedHostRecord_allOf_views'
            type: array
        type: object
      type: object
    LinkedLinkableHostRecord:
      description: The host record to which the resource record is linked.
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          type: string
        absoluteName:
          description: The fully qualified domain name of the resource record.
          example: host1.example.com
          type: string
      type: object
    LinkedResourceRecord:
      description: The host or alias record to which the resource record is linked.
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          type: string
        absoluteName:
          description: The fully qualified domain name of the resource record.
          example: host1.example.com
          type: string
      type: object
    Location:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Location
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        locode:
          description: The location code showing the UN/LOCODE country and city location.
            The code is displayed in the hierarchical structure where the first two
            characters indicate the standard UN/LOCODE country code and the subsequent
            three characters indicate the location code.
          example: JP TYO
          readOnly: true
          type: string
        code:
          description: "The location code showing the UN/LOCODE country and city location,\
            \ and any appended custom child locations. The code is displayed in the\
            \ hierarchical structure where the first two characters indicate the standard\
            \ UN/LOCODE country code and the subsequent three characters indicate\
            \ the location code. Any custom location codes are appended after the\
            \ first 5 characters."
          example: JP TYO BCN
          pattern: ^.*\S+.*$
          type: string
        country:
          description: The two digit country code.
          example: JP
          readOnly: true
          type: string
        description:
          description: The description of the location.
          example: Tokyo Office
          type: string
        localizedName:
          description: The localized name of the location.
          example: 東京オフィス
          type: string
        subdivision:
          description: The ISO 1-3 character alphabetic or numeric code for the administrativedivision
            of the country.
          example: "04"
          readOnly: true
          type: string
        longitude:
          description: "The geographical longitude coordinate, in decimal degrees\
            \ format."
          example: 139.75
          format: double
          type: number
        latitude:
          description: "The geographical latitude coordinate, in decimal degrees format."
          example: 35.683
          format: double
          type: number
      type: object
    MXRecord:
      allOf:
      - $ref: '#/components/schemas/ResourceRecord'
      - properties:
          type:
            description: The resource type.
            enum:
            - MXRecord
            nullable: false
            type: string
          linkedRecord:
            $ref: '#/components/schemas/MXRecord_allOf_linkedRecord'
          priority:
            description: The priority assigned to the mail exchanger. A lower value
              indicates a higher priotiry.
            format: int32
            maximum: 2147483647
            minimum: 0
            nullable: false
            type: integer
        type: object
      type: object
    NAPTRRecord:
      allOf:
      - $ref: '#/components/schemas/ResourceRecord'
      - properties:
          type:
            description: The resource type.
            enum:
            - NAPTRRecord
            nullable: false
            type: string
          order:
            description: The order in which NAPTR records are to be processed.
            example: 50
            format: int32
            maximum: 65535
            minimum: 0
            nullable: false
            type: integer
          preference:
            description: The preference assigned to the NAPTR record. The preference
              is referenced when NAPTR records have the same order.
            example: 100
            format: int32
            maximum: 65535
            minimum: 0
            nullable: false
            type: integer
          service:
            description: The service or protocol to which the NAPTR record resolves.
            example: http+I2R
            type: string
          regularExpression:
            description: The regular expression used to transform client data.
            example: '!http://(#~()##@+)!\1!i4'
            pattern: ^.*\S+.*$
            type: string
          replacement:
            description: The replacement string used to replace client data.
            example: _http._tcp.example.com.
            type: string
          flags:
            description: The control flags in the NAPTR record. Control flags influence
              how the replacement functions are performed when processing the record.
            example: s
            type: string
        type: object
      type: object
    ResourceRecord:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ResourceRecord
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        ttl:
          description: "The overridden TTL value of the resource record, in seconds."
          example: 3600
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        absoluteName:
          description: The fully qualified domain name of the resource record.
          example: host1.example.com
          type: string
        comment:
          description: The additional comments associated with the resource record.
          example: Sample comment.
          type: string
        dynamic:
          description: Indicates whether the resource record is dynamic.
          readOnly: true
          type: boolean
      type: object
    SRVRecord:
      allOf:
      - $ref: '#/components/schemas/ResourceRecord'
      - properties:
          type:
            description: The resource type.
            enum:
            - SRVRecord
            nullable: false
            type: string
          linkedRecord:
            $ref: '#/components/schemas/SRVRecord_allOf_linkedRecord'
          priority:
            description: The priority assigned to the service. A lower value indicates
              higher priority.
            example: 50
            format: int32
            maximum: 2147483647
            minimum: 0
            nullable: false
            type: integer
          weight:
            description: The weight assigned to the service. The weight is referenced
              when services have the same priority.
            example: 50
            format: int32
            maximum: 2147483647
            minimum: 0
            nullable: false
            type: integer
          port:
            description: The port on which the service is located.
            example: 5432
            format: int32
            maximum: 65535
            minimum: 0
            nullable: false
            type: integer
        type: object
      type: object
    TXTRecord:
      allOf:
      - $ref: '#/components/schemas/ResourceRecord'
      - properties:
          type:
            description: The resource type.
            enum:
            - TXTRecord
            nullable: false
            type: string
          text:
            description: The text data within the TXT resource record.
            example: printer=OfficePrinter1
            pattern: ^.*\S+.*$
            type: string
        type: object
      type: object
    UID:
      description: The DHCP client identifier.
      properties:
        clientIdentifier:
          type: string
      type: object
    View:
      description: The view the resource belongs to.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - View
          type: string
        name:
          description: The name of the view.
          example: default
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        deviceRegistrationEnabled:
          description: Indicates whether DNS redirection has been enabled for use
            with the BlueCat Device Registration Portal.
          nullable: false
          type: boolean
        deviceRegistrationPortalAddress:
          description: The IPv4 address of the BlueCat Device Registration Portal.
          example: 10.10.10.10
          type: string
      type: object
    LinkedResource:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ACL
          - AddressManagerAuthenticator
          - AliasRecord
          - Configuration
          - DHCPClientIdentifier
          - DHCPDeploymentRole
          - DHCPForwardZone
          - DHCPReverseZone
          - DHCPUniqueIdentifier
          - DHCPVendorOption
          - DHCPVendorOptionDefinition
          - DHCPZoneGroup
          - DHCPv4ClientClass
          - DHCPv4ClientOption
          - DHCPv4ClientOptionDefinition
          - DHCPv4CustomClientOptionDefinition
          - DHCPv4RawOption
          - DHCPv4ServiceOption
          - DHCPv4ServiceOptionDefinition
          - DHCPv4Subclass
          - DHCPv6ClientOption
          - DHCPv6ClientOptionDefinition
          - DHCPv6RawOption
          - DHCPv6ServiceOption
          - DHCPv6ServiceOptionDefinition
          - DNS64
          - DNSDeploymentRole
          - DNSOption
          - DNSOptionDefinition
          - DNSRawOption
          - DNSSECSigningPolicy
          - DenyMACPool
          - DeploymentSchedule
          - Device
          - DeviceSubtype
          - DeviceType
          - ENUMNumberZone
          - ENUMZone
          - EntrustKeySigningKey
          - EntrustZoneSigningKey
          - ExternalHostRecord
          - ExternalHostsZone
          - GenericRecord
          - HAServer
          - HINFORecord
          - HSMConfiguration
          - HSMServer
          - HostRecord
          - IPv4Address
          - IPv4Block
          - IPv4DHCPRange
          - IPv4DHCPRangeTemplateItem
          - IPv4GatewayTemplateItem
          - IPv4Group
          - IPv4GroupTemplateItem
          - IPv4Network
          - IPv4ReconciliationPolicy
          - IPv4ReservedRangeTemplateItem
          - IPv4Template
          - IPv6Address
          - IPv6Block
          - IPv6DHCPRange
          - IPv6Network
          - IPv6ReconciliationPolicy
          - InternalRootZone
          - KerberosAuthenticator
          - KerberosRealm
          - KerberosServicePrincipal
          - KeyDistributionCenter
          - KeySigningKey
          - LDAPAuthenticator
          - Location
          - MACAddress
          - MACPool
          - MXRecord
          - NAPTRRecord
          - NamingPolicy
          - NamingPolicyConnectorValue
          - NamingPolicyIncrementalValue
          - NamingPolicyIntegerValue
          - NamingPolicyRequiredValue
          - NamingPolicyRestriction
          - NamingPolicyTextValue
          - NetworkInterface
          - NotificationGroup
          - OAuthAuthorizationServer
          - PublishedInterface
          - RADIUSAuthenticator
          - Report
          - ReportSchedule
          - ResponsePolicy
          - ResponsePolicyZone
          - SAMLIdentityProvider
          - SRVRecord
          - Server
          - ServerGroup
          - StartOfAuthority
          - StartOfAuthorityDefinition
          - TACACSPlusAuthenticator
          - TFTPDeploymentRole
          - TFTPFile
          - TFTPFolder
          - TFTPGroup
          - TSIGKey
          - TXTRecord
          - Tag
          - TagGroup
          - Task
          - User
          - UserGroup
          - VendorProfile
          - View
          - VirtualInterface
          - X509Authenticator
          - Zone
          - ZoneSigningKey
          - ZoneTemplate
          type: string
      type: object
    Block:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The type of IP block.
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        range:
          description: The address range for the IP block.
          nullable: false
          type: string
        location:
          allOf:
          - $ref: '#/components/schemas/InlinedLocation'
          required:
          - id
        _inheritedFields:
          items:
            type: string
          readOnly: true
          type: array
      type: object
    DNSSECSigningPolicy:
      description: Displays information about the DNSSEC Signing Policy used to sign
        the zone.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DNSSECSigningPolicy
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        keyProvider:
          description: The system that created the DNSSEC signing key.
          enum:
          - ADDRESS_MANAGER
          - ENTRUST_HSM
          nullable: false
          type: string
        signatureDigestAlgorithm:
          description: The algorithm used for the Delegation Signer (DS) record.
          enum:
          - SHA1
          - SHA256
          - SHA384
          nullable: false
          type: string
        signatureValidityPeriod:
          description: The duration for which the RRSIG resource record is valid.
          example: PT240H
          nullable: false
          type: string
        signatureResigningPeriod:
          description: The duration before the end of the signature validity period
            at which BIND resigns the zone.
          example: PT48H
          nullable: false
          type: string
        zoneSigningKeyAlgorithm:
          description: The algorithm for the Zone Signing Key (ZSK).
          enum:
          - ECDSAP256SHA256
          - ECDSAP384SHA384
          - ED25519
          - ED448
          - RSAMD5
          - RSANSEC3SHA256
          - RSANSEC3SHA512
          - RSASHA1
          - RSASHA1NSEC3SHA1
          - RSASHA256
          - RSASHA512
          nullable: false
          type: string
        zoneSigningKeyLength:
          description: The length of the zone signing key in bits.
          example: 384
          format: int32
          nullable: false
          type: integer
        zoneSigningKeyOverrideTtl:
          description: The overridden TTL value of the zone signing key.
          example: PT24H
          type: string
        zoneSigningKeyValidityPeriod:
          description: The duration for which the zone signing key is valid.
          example: PT720H
          nullable: false
          type: string
        zoneSigningKeyOverlapPeriod:
          description: The duration before the end of the validity period at which
            a new key is generated for key rollover.
          example: PT168H
          nullable: false
          type: string
        zoneSigningKeyRolloverMethod:
          description: The method to make the new zone signing key available when
            the key rolls over.
          enum:
          - DOUBLE_SIGNING
          - PRE_PUBLISH
          nullable: false
          type: string
        zoneSigningKeySigningPeriod:
          description: "The duration before the end of the key validity period. During\
            \ this time, the resource records in the zone are simultaneously signed\
            \ by the new key and unsigned by the old key."
          example: PT72H
          type: string
        zoneSigningKeyProtectionType:
          description: The zone signing key protection type when Enstrust HSM is configured
            as the key provider.
          enum:
          - MODULE
          type: string
        keySigningKeyAlgorithm:
          description: The algorithm for the key signing key (KSK).
          enum:
          - ECDSAP256SHA256
          - ECDSAP384SHA384
          - ED25519
          - ED448
          - RSAMD5
          - RSANSEC3SHA256
          - RSANSEC3SHA512
          - RSASHA1
          - RSASHA1NSEC3SHA1
          - RSASHA256
          - RSASHA512
          nullable: false
          type: string
        keySigningKeyLength:
          description: The length of the key signing key in bits.
          example: 384
          format: int32
          nullable: false
          type: integer
        keySigningKeyOverrideTtl:
          description: The overridden TTL value of the key signing key.
          example: PT24H
          type: string
        keySigningKeyValidityPeriod:
          description: The duration for which the key signing key is valid.
          example: PT8640H
          nullable: false
          type: string
        keySigningKeyOverlapPeriod:
          description: The duration before the end of the validity period at which
            a new key is generated for key rollover.
          example: PT336H
          nullable: false
          type: string
        keySigningKeyRolloverMethod:
          description: The method to make the new key signing key available when the
            key rolls over.
          enum:
          - DOUBLE_SIGNING
          - PRE_PUBLISH
          nullable: false
          type: string
        keySigningKeySigningPeriod:
          description: "The duration before the end of the key validity period. During\
            \ this time, the resource records in the keys are simultaneously signed\
            \ by the new key and unsigned by the old key."
          example: PT96H
          type: string
        keySigningKeyProtectionType:
          description: The key signing key protection type when Enstrust HSM is configured
            as the key provider.
          enum:
          - MODULE
          type: string
      type: object
    IPv4Block:
      allOf:
      - $ref: '#/components/schemas/Block'
      - properties:
          type:
            description: The type of IP block.
            enum:
            - IPv4Block
            nullable: false
            type: string
          template:
            allOf:
            - $ref: '#/components/schemas/InlinedIPv4Template'
            required:
            - id
          defaultView:
            allOf:
            - $ref: '#/components/schemas/InlinedView'
            required:
            - id
          duplicateHostnamesAllowed:
            description: "Indicates whether duplicate hostnames are allowed in the\
              \ block. If enabled, duplicate hostnames will be allowed. If not set\
              \ explicitly, this value will be inherited from the parent block."
            type: boolean
          pingBeforeAssignEnabled:
            description: "If set to true, Address Manager will ping IP addresses before\
              \ assigning them. If set to false, Address Manager will assign addresses\
              \ without checking their availability."
            type: boolean
          defaultZonesInherited:
            description: "If set to true, the IPv4 block will inherit the parent resource's\
              \ default domains configuration if possible."
            nullable: false
            type: boolean
          defaultZones:
            items:
              $ref: '#/components/schemas/IPv4Block_allOf_defaultZones'
            type: array
            writeOnly: true
          restrictedZonesInherited:
            description: "If set to true, the IPv4 block will inherit the parent resource's\
              \ DNS restriction configuration if possible."
            nullable: false
            type: boolean
          restrictedZones:
            items:
              $ref: '#/components/schemas/IPv4Block_allOf_restrictedZones'
            type: array
            writeOnly: true
          lowWaterMark:
            description: A DHCP alert is triggered when usage falls below this percentage
              (when too few addresses are in use).
            example: 15
            format: int32
            minimum: 0
            type: integer
          highWaterMark:
            description: A DHCP alert is triggered when usage exceeds this percentage
              (when too many addresses are in use).
            example: 95
            format: int32
            minimum: 0
            type: integer
          reverseZoneSigned:
            description: "If set to true, the reverse zone associated with the IPv4\
              \ block will be signed according to the DNSSEC signing policy in reverseZoneSigningPolicy."
            nullable: false
            type: boolean
          reverseZoneSigningPolicy:
            allOf:
            - $ref: '#/components/schemas/InlinedDNSSECSigningPolicy'
            required:
            - id
          usagePercentage:
            additionalProperties:
              description: Percentage values indicating the current amount of allocated
                and unallocated IPv4 addresses within the block.
              format: int32
              type: integer
            description: Percentage values indicating the current amount of allocated
              and unallocated IPv4 addresses within the block.
            readOnly: true
            type: object
        type: object
      type: object
    IPv6Block:
      allOf:
      - $ref: '#/components/schemas/Block'
      - properties:
          type:
            description: The type of IP block.
            enum:
            - IPv6Block
            nullable: false
            type: string
        type: object
      type: object
    InlinedDNSSECSigningPolicy:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DNSSECSigningPolicy
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
      title: DNSSECSigningPolicy
      type: object
    LinkedView:
      allOf:
      - $ref: '#/components/schemas/LinkedViewOrZone'
      - properties:
          type:
            description: The resource type.
            enum:
            - View
            type: string
        type: object
      type: object
    LinkedViewOrZone:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          type: string
      type: object
    LinkedZone:
      allOf:
      - $ref: '#/components/schemas/LinkedViewOrZone'
      - properties:
          type:
            description: The resource type.
            enum:
            - Zone
            type: string
        type: object
      type: object
    DHCPv4ClientClass:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DHCPv4ClientClass
          type: string
        name:
          description: The name of the DHCP client class.
          example: mc1
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        description:
          description: The description for the DHCP client class.
          example: custom description
          type: string
        option:
          description: The DHCP option to match.
          example: hardware
          pattern: ^.*\S+.*$
          type: string
        matchOffset:
          description: The offset that determines where to start the check for matching
            values. The match check is applied offset bytes from the beginning of
            the identifier. Offset is not configurable for custom match statements.
          example: 1
          format: int32
          type: integer
        matchLength:
          description: "The length determines the portion of the identifier where\
            \ the check for matching values will be applied. The match check is applied\
            \ offset bytes from the beginning of the identifier,\_continuing for length\
            \ bytes. Length is not configurable for custom match statements."
          example: 2
          format: int32
          type: integer
        matchExpression:
          description: "The data expression for custom match statements, or boolean\
            \ expression for custom match if statements. The expression must match\
            \ the supported syntax for the ISC's DHCP daemon."
          example: if a > b
          pattern: ^.*\S+.*$
          type: string
      type: object
    InputStream:
      description: The import file contents
      type: object
    AddressManagerDatabase:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - AddressManagerDatabase
          nullable: false
          type: string
        state:
          description: The current replication state of the Address Manager database.
          enum:
          - STANDALONE
          - REPLICATED
          - BREAK
          type: string
        entityCount:
          description: The number of entities in the database.
          example: 100881
          format: int32
          readOnly: true
          type: integer
        size:
          description: "The size of the database, in bytes."
          example: 70169135
          format: int64
          readOnly: true
          type: integer
        lastBackupDateTime:
          description: The timestamp of the last database backup.
          example: 2022-09-09T15:16:50Z
          format: date-time
          readOnly: true
          type: string
        activeSessions:
          description: The number of users logged in to Address Manager.
          example: 1
          format: int32
          readOnly: true
          type: integer
        replicationEnabled:
          description: Indicates whether database replication is enabled.
          nullable: false
          type: boolean
        replicationRole:
          description: The current role of the server in database replication.
          enum:
          - STANDALONE
          - PRIMARY
          - STANDBY
          - REMOVED_STANDBY
          readOnly: true
          type: string
        replicationStatus:
          description: The current status of the database replication service.
          enum:
          - ENROLLING
          - FAILINGOVER
          - BREAKING
          - RESETTING
          - INITIALIZING
          - REPLICATING
          - NOT_REPLICATING
          - PENDING
          - UNAVAILABLE
          - REMOVED_STANDBY
          - INITIALIZING_FAILOVER
          readOnly: true
          type: string
        compressionEnabled:
          description: Indicates whether compression is enabled with database replication.
          type: boolean
        latencyWarningThreshold:
          description: "The warning threshold latency of replication, in ISO-8601\
            \ format. When the latency between the Primary and Standby servers reaches\
            \ the configured threshold, Address Manager logs a warning in syslog and\
            \ sends an event to warn you that the database of the Standby server is\
            \ behind the Primary server by the configured threshold or greater."
          example: PT1H
          type: string
        latencyCriticalThreshold:
          description: "The critical threshold latency of replication, in ISO-8601\
            \ format. When the latency between the Primary and Standby servers reaches\
            \ the configured threshold, Address Manager logs a warning in syslog and\
            \ sends an event to warn you that the database of the Standby server is\
            \ behind the Primary server by the configured threshold or greater."
          example: P1D
          type: string
        servers:
          items:
            $ref: '#/components/schemas/AddressManagerServer'
          minItems: 1
          type: array
          writeOnly: true
      type: object
    AddressManagerDatabaseBean:
      allOf:
      - $ref: '#/components/schemas/AddressManagerDatabase'
      - properties:
          state:
            description: The current replication state of the Address Manager database.
            enum:
            - STANDALONE
            - REPLICATED
            - BREAK
            type: string
          entityCount:
            description: The number of entities in the database.
            example: 100881
            format: int32
            readOnly: true
            type: integer
          size:
            description: "The size of the database, in bytes."
            example: 70169135
            format: int64
            readOnly: true
            type: integer
          lastBackupDateTime:
            description: The timestamp of the last database backup.
            example: 2022-09-09T15:16:50Z
            format: date-time
            readOnly: true
            type: string
          activeSessions:
            description: The number of users logged in to Address Manager.
            example: 1
            format: int32
            readOnly: true
            type: integer
          replicationEnabled:
            description: Indicates whether database replication is enabled.
            nullable: false
            type: boolean
          replicationRole:
            description: The current role of the server in database replication.
            enum:
            - STANDALONE
            - PRIMARY
            - STANDBY
            - REMOVED_STANDBY
            readOnly: true
            type: string
          replicationStatus:
            description: The current status of the database replication service.
            enum:
            - ENROLLING
            - FAILINGOVER
            - BREAKING
            - RESETTING
            - INITIALIZING
            - REPLICATING
            - NOT_REPLICATING
            - PENDING
            - UNAVAILABLE
            - REMOVED_STANDBY
            - INITIALIZING_FAILOVER
            readOnly: true
            type: string
          compressionEnabled:
            description: Indicates whether compression is enabled with database replication.
            type: boolean
          latencyWarningThreshold:
            description: "The warning threshold latency of replication, in ISO-8601\
              \ format. When the latency between the Primary and Standby servers reaches\
              \ the configured threshold, Address Manager logs a warning in syslog\
              \ and sends an event to warn you that the database of the Standby server\
              \ is behind the Primary server by the configured threshold or greater."
            example: PT1H
            type: string
          latencyCriticalThreshold:
            description: "The critical threshold latency of replication, in ISO-8601\
              \ format. When the latency between the Primary and Standby servers reaches\
              \ the configured threshold, Address Manager logs a warning in syslog\
              \ and sends an event to warn you that the database of the Standby server\
              \ is behind the Primary server by the configured threshold or greater."
            example: P1D
            type: string
          servers:
            items:
              $ref: '#/components/schemas/AddressManagerServer'
            minItems: 1
            type: array
            writeOnly: true
        type: object
      type: object
    AddressManagerServer:
      example:
        address: 10.10.10.10
        name: dns2
        enrollmentPercentComplete: 75
        replicationStatus: DISABLED
        id: 103307
        state: STANDALONE
        type: AddressManagerServer
        replicationLatency: PTS60
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - AddressManagerServer
          type: string
        name:
          description: The name of the Standby Address Manager server.
          example: dns2
          readOnly: true
          type: string
        address:
          description: The IP address of the Address Manager server.
          example: 10.10.10.10
          nullable: false
          type: string
        state:
          description: The current replication state of the Address Manager server.
          enum:
          - STANDALONE
          - PRIMARY
          - STANDBY
          type: string
        replicationStatus:
          description: The current status of the database replication service.
          enum:
          - DISABLED
          - ENROLLING
          - FAILINGOVER
          - BREAKING
          - RESETTING
          - ENABLED
          - INITIALIZING
          - REPLICATING
          - NOTREPLICATING
          - PENDING
          - UNAVAILABLE
          - REMOVEDSTANDBY
          - INITIALIZINGFAILOVER
          readOnly: true
          type: string
        enrollmentPercentComplete:
          description: The completion status of database replication enrollment.
          example: 75
          format: int32
          readOnly: true
          type: integer
        replicationLatency:
          description: The replication latency between the Standby and Primary server.
          example: PTS60
          readOnly: true
          type: string
      type: object
    DHCPVendorOptionDefinition:
      allOf:
      - $ref: '#/components/schemas/DeploymentOptionDefinition'
      - properties:
          type:
            description: The type of deployment option definition.
            enum:
            - DHCPVendorOptionDefinition
            nullable: false
            type: string
          code:
            description: The ID of the vendor profile option definition.
            format: int32
            maximum: 254
            minimum: 1
            nullable: false
            type: integer
          displayName:
            description: The display name for the vendor profile option definition.
            pattern: ^.*\S+.*$
            type: string
          description:
            description: The description of the information passed by the option definition.
            pattern: ^.*\S+.*$
            type: string
          valueFormat:
            $ref: '#/components/schemas/DHCPVendorOptionDefinition_allOf_valueFormat'
        type: object
      type: object
    DHCPv4ClientOptionDefinition:
      allOf:
      - $ref: '#/components/schemas/DeploymentOptionDefinition'
      - properties:
          type:
            description: The type of deployment option definition.
            enum:
            - DHCPv4ClientOptionDefinition
            nullable: false
            type: string
        type: object
      type: object
    DHCPv4CustomClientOptionDefinition:
      allOf:
      - $ref: '#/components/schemas/DeploymentOptionDefinition'
      - properties:
          type:
            description: The type of deployment option definition.
            enum:
            - DHCPv4CustomClientOptionDefinition
            nullable: false
            type: string
          code:
            format: int32
            maximum: 255
            minimum: 2
            nullable: false
            type: integer
          displayName:
            pattern: ^.*\S+.*$
            type: string
          description:
            pattern: ^.*\S+.*$
            type: string
          valueFormat:
            $ref: '#/components/schemas/DHCPVendorOptionDefinition_allOf_valueFormat'
        type: object
      type: object
    DHCPv4ServiceOptionDefinition:
      allOf:
      - $ref: '#/components/schemas/DeploymentOptionDefinition'
      - properties:
          type:
            description: The type of deployment option definition.
            enum:
            - DHCPv4ServiceOptionDefinition
            nullable: false
            type: string
        type: object
      type: object
    DHCPv6ClientOptionDefinition:
      allOf:
      - $ref: '#/components/schemas/DeploymentOptionDefinition'
      - properties:
          type:
            description: The type of deployment option definition.
            enum:
            - DHCPv6ClientOptionDefinition
            nullable: false
            type: string
        type: object
      type: object
    DHCPv6ServiceOptionDefinition:
      allOf:
      - $ref: '#/components/schemas/DeploymentOptionDefinition'
      - properties:
          type:
            description: The type of deployment option definition.
            enum:
            - DHCPv6ServiceOptionDefinition
            nullable: false
            type: string
        type: object
      type: object
    DNSOptionDefinition:
      allOf:
      - $ref: '#/components/schemas/DeploymentOptionDefinition'
      - properties:
          type:
            description: The type of deployment option definition.
            enum:
            - DNSOptionDefinition
            nullable: false
            type: string
        type: object
      type: object
    DeploymentOptionDefinition:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The type of deployment option definition.
          nullable: false
          type: string
        name:
          description: The name of the deployment option definition.
          example: allow-recursion
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        assignableTypes:
          items:
            enum:
            - ACL
            - AbstractKeySigningKey
            - AbstractNetworkInterface
            - AbstractServer
            - AbstractZoneSigningKey
            - AccessRight
            - AddressManager
            - AddressManagerAuthenticator
            - AddressManagerDatabase
            - AddressManagerServer
            - AliasRecord
            - AnycastService
            - AuditDataSettings
            - Authenticator
            - ChildResource
            - ChildValueObject
            - Configuration
            - DHCPActivityService
            - DHCPClientIdentifier
            - DHCPClientOption
            - DHCPDeploymentRole
            - DHCPForwardZone
            - DHCPReverseZone
            - DHCPServiceOption
            - DHCPStatisticsService
            - DHCPUniqueIdentifier
            - DHCPVendorOption
            - DHCPVendorOptionDefinition
            - DHCPZone
            - DHCPZoneGroup
            - DHCPv4ClientClass
            - DHCPv4ClientOption
            - DHCPv4ClientOptionDefinition
            - DHCPv4CustomClientOptionDefinition
            - DHCPv4Lease
            - DHCPv4RawOption
            - DHCPv4ServiceOption
            - DHCPv4ServiceOptionDefinition
            - DHCPv4Subclass
            - DHCPv6ClientOption
            - DHCPv6ClientOptionDefinition
            - DHCPv6Lease
            - DHCPv6RawOption
            - DHCPv6ServiceOption
            - DHCPv6ServiceOptionDefinition
            - DNS64
            - DNSActivityService
            - DNSDeploymentRole
            - DNSMove
            - DNSOption
            - DNSOptionDefinition
            - DNSRawOption
            - DNSResolverService
            - DNSSECSigningPolicy
            - DNSStatisticsService
            - Dashboard
            - DefaultClientOption
            - DefaultDHCPOption
            - DefaultDHCPServiceOption
            - DefaultDNSOption
            - DenyMACPool
            - DeploymentRole
            - DeploymentRoleMove
            - DeploymentSchedule
            - Device
            - DeviceSubtype
            - DeviceType
            - DifferentialDeployment
            - DiscoveredARPEntry
            - DiscoveredHost
            - DiscoveredInterface
            - DiscoveredMACAddress
            - DiscoveredNetwork
            - DiscoveredRouter
            - DiscoveredSwitch
            - DiscoveredVLAN
            - ENUMNumberZone
            - ENUMZone
            - EntrustKeySigningKey
            - EntrustZoneSigningKey
            - Event
            - ExternalHostRecord
            - ExternalHostsZone
            - FirewallService
            - FullDeployment
            - GatewayService
            - GenericRecord
            - GlobalSettings
            - HAServer
            - HINFORecord
            - HSMConfiguration
            - HSMKeySigningKey
            - HSMServer
            - HSMZoneSigningKey
            - HostRecord
            - IPMove
            - IPServerInterface
            - IPv4Address
            - IPv4Block
            - IPv4BlockMerge
            - IPv4BlockSplit
            - IPv4DHCPRange
            - IPv4DHCPRangeMerge
            - IPv4DHCPRangeTemplateItem
            - IPv4GatewayTemplateItem
            - IPv4Group
            - IPv4GroupTemplateItem
            - IPv4HiddenTemplateItemChild
            - IPv4Network
            - IPv4NetworkMerge
            - IPv4NetworkSplit
            - IPv4Prefix
            - IPv4Range
            - IPv4ReconciliationPolicy
            - IPv4ReservedRangeTemplateItem
            - IPv4Template
            - IPv4TemplateApplication
            - IPv6Address
            - IPv6Block
            - IPv6DHCPRange
            - IPv6Network
            - IPv6Prefix
            - IPv6ReconciliationPolicy
            - IPv6Template
            - IPv6TemplateItem
            - ImportLog
            - InterfacesService
            - InternalRootZone
            - KerberosAuthenticator
            - KerberosRealm
            - KerberosServicePrincipal
            - KeyDistributionCenter
            - KeySigningKey
            - LDAPAuthenticator
            - LicenseService
            - LinkedAliasRecord
            - LinkedExternalHostRecord
            - LinkedHAServer
            - LinkedHostRecord
            - LinkedIPv4Address
            - LinkedIPv4Block
            - LinkedIPv4DHCPRange
            - LinkedIPv4Network
            - LinkedIPv6Address
            - LinkedIPv6Block
            - LinkedIPv6Network
            - LinkedLDAPGroup
            - LinkedMACAddress
            - LinkedNamingPolicy
            - LinkedNetworkInterface
            - LinkedPublishedInterface
            - LinkedResource
            - LinkedSSOGroup
            - LinkedServer
            - LinkedTACACSPlusGroup
            - LinkedTag
            - LinkedUser
            - LinkedUserGroup
            - LinkedValueObject
            - LinkedView
            - LinkedZone
            - Location
            - LocationGroup
            - LogLevelSettings
            - LoginPolicySettings
            - MACAddress
            - MACPool
            - MXRecord
            - MonitoringSettings
            - NAPTRRecord
            - NTPService
            - NamingPolicy
            - NamingPolicyConnectorValue
            - NamingPolicyIncrementalValue
            - NamingPolicyIntegerValue
            - NamingPolicyRequiredValue
            - NamingPolicyRestriction
            - NamingPolicyTextValue
            - NestedENUMZone
            - NestedIPv4Block
            - NestedIPv6Block
            - NestedLocation
            - NestedServer
            - NestedTag
            - NestedZone
            - NetworkInterface
            - NotificationGroup
            - OAuthAuthorizationServer
            - Operation
            - PasswordPolicySettings
            - Preference
            - PublishedInterface
            - QuickDeployment
            - RADIUSAuthenticator
            - RPZoneFeedCategory
            - RawOption
            - Report
            - ReportSchedule
            - Resource
            - ResourceImport
            - ResourceRecord
            - ResponsePolicy
            - ResponsePolicyItem
            - ResponsePolicyItemImport
            - ResponsePolicyZone
            - SAMLIdentityProvider
            - SAMLServiceProviderSettings
            - SNMPService
            - SRVRecord
            - SSHService
            - SSOEnforcementSettings
            - SelectiveDeployment
            - Server
            - ServerGroup
            - ServerInterface
            - ServiceOption
            - SigningKey
            - StartOfAuthority
            - StartOfAuthorityDefinition
            - SyslogService
            - SystemSettings
            - TACACSPlusAuthenticator
            - TFTPDeploymentRole
            - TFTPFile
            - TFTPFolder
            - TFTPGroup
            - TFTPNode
            - TSIGKey
            - TXTRecord
            - Tag
            - TagGroup
            - Task
            - Transaction
            - TrustRelationship
            - User
            - UserDefinedFieldDefinition
            - UserDefinedLinkDefinition
            - UserDefinedLinkedResource
            - UserGroup
            - UserSession
            - ValidationDeployment
            - VendorProfile
            - View
            - VirtualInterface
            - Widget
            - WorkflowRequest
            - X509Authenticator
            - Zone
            - ZoneSigningKey
            - ZoneTemplate
            - ZoneTemplateApplication
            type: string
          readOnly: true
          type: array
      type: object
    StartOfAuthorityDefinition:
      allOf:
      - $ref: '#/components/schemas/DeploymentOptionDefinition'
      - properties:
          type:
            description: The type of deployment option definition.
            enum:
            - StartOfAuthorityDefinition
            nullable: false
            type: string
        type: object
      type: object
    DHCPVendorOption:
      allOf:
      - $ref: '#/components/schemas/DeploymentOption'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPVendorOption
            nullable: false
            type: string
          value:
            $ref: '#/components/schemas/DHCPVendorOption_allOf_value'
          code:
            description: The vendor option code.
            readOnly: true
            type: number
          definition:
            $ref: '#/components/schemas/InlinedDHCPVendorOptionDefinition'
        type: object
      type: object
    DHCPv4ClientOption:
      allOf:
      - $ref: '#/components/schemas/DeploymentOption'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPv4ClientOption
            nullable: false
            type: string
          value:
            $ref: '#/components/schemas/DHCPVendorOption_allOf_value'
          code:
            description: The code for the DHCP option (per RFC 2132).
            example: 61
            maximum: 255
            minimum: 1
            type: number
          definition:
            $ref: '#/components/schemas/InlinedDhcpv4ClientOptionDefinition'
        type: object
      type: object
    DHCPv4RawOption:
      allOf:
      - $ref: '#/components/schemas/DeploymentOption'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPv4RawOption
            nullable: false
            type: string
          value:
            description: The deployment option value.
            pattern: ^.*\S+.*$
            type: string
        type: object
      type: object
    DHCPv4ServiceOption:
      allOf:
      - $ref: '#/components/schemas/DeploymentOption'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPv4ServiceOption
            nullable: false
            type: string
          value:
            $ref: '#/components/schemas/DHCPVendorOption_allOf_value'
          code:
            description: The code for the DHCP option (per RFC 2132).
            example: 61
            maximum: 255
            minimum: 1
            type: number
          definition:
            $ref: '#/components/schemas/InlinedDHCPv4ServiceOptionDefinition'
        type: object
      type: object
    DHCPv6ClientOption:
      allOf:
      - $ref: '#/components/schemas/DeploymentOption'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPv6ClientOption
            nullable: false
            type: string
          value:
            $ref: '#/components/schemas/DHCPVendorOption_allOf_value'
          code:
            description: The code for the DHCP option (per RFC 2132).
            example: 61
            maximum: 255
            minimum: 1
            type: number
          definition:
            $ref: '#/components/schemas/InlinedDHCPv6ClientOptionDefinition'
        type: object
      type: object
    DHCPv6RawOption:
      allOf:
      - $ref: '#/components/schemas/DeploymentOption'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPv6RawOption
            nullable: false
            type: string
          value:
            description: The deployment option value.
            pattern: ^.*\S+.*$
            type: string
        type: object
      type: object
    DHCPv6ServiceOption:
      allOf:
      - $ref: '#/components/schemas/DeploymentOption'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPv6ServiceOption
            nullable: false
            type: string
          value:
            $ref: '#/components/schemas/DHCPVendorOption_allOf_value'
          code:
            description: The code for the DHCP option (per RFC 2132).
            example: 61
            maximum: 255
            minimum: 1
            type: number
          definition:
            $ref: '#/components/schemas/InlinedDHCPv6ServiceOptionDefinition'
        type: object
      type: object
    DNSOption:
      allOf:
      - $ref: '#/components/schemas/DeploymentOption'
      - properties:
          type:
            description: The resource type.
            enum:
            - DNSOption
            nullable: false
            type: string
          value:
            $ref: '#/components/schemas/DHCPVendorOption_allOf_value'
          code:
            description: The code for the DNS option definition.
            maximum: 255
            minimum: 1
            type: number
          definition:
            $ref: '#/components/schemas/InlinedDNSOptionDefinition'
        type: object
      type: object
    DNSRawOption:
      allOf:
      - $ref: '#/components/schemas/DeploymentOption'
      - properties:
          type:
            description: The resource type.
            enum:
            - DNSRawOption
            nullable: false
            type: string
          value:
            description: The deployment option value.
            pattern: ^.*\S+.*$
            type: string
        type: object
      type: object
    DeploymentOption:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        serverScope:
          $ref: '#/components/schemas/InlinedServerScope'
      type: object
    InlinedDHCPVendorOptionDefinition:
      description: The vendor option definition resource.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          nullable: false
          type: integer
        type:
          description: The resource type.
          enum:
          - DHCPVendorOptionDefinition
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    InlinedDHCPv4ServiceOptionDefinition:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DHCPv4ServiceOptionDefinition
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    InlinedDHCPv6ClientOptionDefinition:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DHCPv6ClientOptionDefinition
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    InlinedDHCPv6ServiceOptionDefinition:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DHCPv6ServiceOptionDefinition
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    InlinedDNSOptionDefinition:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DNSOptionDefinition
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    InlinedDhcpv4ClientOptionDefinition:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    InlinedServerScope:
      description: The server or server group resource to apply the deployment option.
        A value of null applies the option to all servers in the configuration.
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          nullable: false
          type: integer
        type:
          description: The server scope resource type.
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    InlinedStartOfAuthorityDefinition:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - StartOfAuthorityDefinition
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    StartOfAuthority:
      allOf:
      - $ref: '#/components/schemas/DeploymentOption'
      - properties:
          type:
            description: The resource type.
            enum:
            - StartOfAuthority
            nullable: false
            type: string
          value:
            $ref: '#/components/schemas/DHCPVendorOption_allOf_value'
          code:
            maximum: 255
            minimum: 1
            type: number
          definition:
            allOf:
            - $ref: '#/components/schemas/InlinedStartOfAuthorityDefinition'
            required:
            - id
        type: object
      type: object
    Deployment:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        state:
          description: The current state of the deployment.
          enum:
          - PENDING
          - QUEUED
          - RUNNING
          - CANCELLED
          - CANCELLING
          - COMPLETED
          - COMPLETED_WITH_WARNINGS
          - FAILED
          - UNKNOWN
          type: string
        status:
          description: The current status of the deployment.
          enum:
          - CANCEL
          readOnly: true
          type: string
        message:
          description: The expanded status message for the deployment.
          readOnly: true
          type: string
        percentComplete:
          description: A percentage value representing the current progress of the
            deployment.
          example: 50
          format: int32
          readOnly: true
          type: integer
        startDateTime:
          description: The start time of the deployment.
          example: 2022-11-23T02:53:03Z
          format: date-time
          readOnly: true
          type: string
        completionDateTime:
          description: The completion time for the deployment.
          example: 2022-11-23T02:53:05Z
          format: date-time
          readOnly: true
          type: string
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        method:
          description: The method that triggered the deployment.
          example: SCHEDULED
          readOnly: true
          type: string
      type: object
    DifferentialDeployment:
      allOf:
      - $ref: '#/components/schemas/Deployment'
      - properties:
          type:
            description: The resource type.
            enum:
            - DifferentialDeployment
            nullable: false
            type: string
          service:
            description: The deployment service type.
            enum:
            - DHCPv4
            - DHCPv6
            - DNS
            - TFTP
            nullable: false
            type: string
        type: object
      type: object
    FullDeployment:
      allOf:
      - $ref: '#/components/schemas/Deployment'
      - properties:
          type:
            description: The resource type.
            enum:
            - FullDeployment
            nullable: false
            type: string
          service:
            description: The deployment service type.
            enum:
            - DHCPv4
            - DHCPv6
            - DNS
            - TFTP
            nullable: false
            type: string
        type: object
      type: object
    InlinedDeployableResource:
      description: A list of resource record and IP address resources to deploy.
      example:
        name: name
        id: 103307
        type: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          nullable: false
          type: integer
        type:
          description: The resource type.
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    QuickDeployment:
      allOf:
      - $ref: '#/components/schemas/Deployment'
      - properties:
          type:
            description: The resource type.
            enum:
            - QuickDeployment
            nullable: false
            type: string
        type: object
      type: object
    SelectiveDeployment:
      allOf:
      - $ref: '#/components/schemas/Deployment'
      - properties:
          type:
            description: The resource type.
            enum:
            - SelectiveDeployment
            nullable: false
            type: string
          resources:
            description: A list of resource record and IP address resources to deploy.
            items:
              $ref: '#/components/schemas/InlinedDeployableResource'
            minItems: 1
            type: array
            writeOnly: true
          batchMode:
            description: The method used for batching selective deployment tasks.
            enum:
            - DISABLED
            - BATCH_BY_SERVER
            type: string
          recordScope:
            description: Defines whether selective deployment tasks include resources
              that are related to the defined DNS records.
            enum:
            - RELATED
            - SPECIFIC
            type: string
          continueOnFailureEnabled:
            description: "Indicates the mode of operation on a failed resource record.\
              \ If false, the deployment stops when a record fails. If true, the deployment\
              \ continues when a record fails and the deployment moves to the next\
              \ record."
            type: boolean
          dynamicRecordDeploymentStrategy:
            description: Defines how dynamic records are handled with selective deployment
              tasks.
            enum:
            - ABORT
            - SKIP
            - MAKE_STATIC
            type: string
        type: object
      type: object
    ValidationDeployment:
      allOf:
      - $ref: '#/components/schemas/Deployment'
      - properties:
          type:
            description: The resource type.
            enum:
            - ValidationDeployment
            nullable: false
            type: string
          service:
            description: The deployment service type.
            enum:
            - DNS
            - DHCPv4
            - DHCPv6
            nullable: false
            type: string
        type: object
      type: object
    AbstractServer:
      description: The server the resource belongs to.
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - AbstractServer
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        profile:
          description: The profile of the server.
          enum:
          - ADONIS_XMB4
          - ADONIS_XMB3
          - ADONIS_XMB2
          - OTHER_DNS_SERVER
          - AFILIAS_DNS_SERVER
          - ADONIS_800
          - ADONIS_1200
          - ADONIS_1900
          - ADONIS_1950
          - DNS_DHCP_SERVER_20
          - DNS_DHCP_SERVER_45
          - DNS_DHCP_SERVER_60
          - DNS_DHCP_SERVER_100
          - DNS_DHCP_SERVER_100_D
          - LTM
          - GTM
          - DNS_DHCP_GEN4_7000
          - DNS_DHCP_GEN4_5000
          - DNS_DHCP_GEN4_4000
          - DNS_DHCP_GEN4_2000
          - CLOUD_DNS_SERVER
          type: string
        state:
          description: "The current state of the server, indicating whether the server\
            \ is enabled or disabled."
          enum:
          - ENABLED
          - DISABLED
          - FAILOVER
          - RESET_CONTROL
          - REPAIR
          type: string
        username:
          description: The username used to authenticate with the server.
          example: admin
          pattern: ^.*\S+.*$
          type: string
        password:
          description: The password used to authenticate with the server.
          example: "[PASSWORD]"
          pattern: ^.*\S+.*$
          type: string
        serverGroup:
          allOf:
          - $ref: '#/components/schemas/InlinedServerGroup'
          required:
          - id
        connected:
          description: Indicates whether the server is connected to Address Manager.
          type: boolean
        monitoringEnabled:
          description: Indicates whether monitoring service is enabled on the server.
          type: boolean
        snmp:
          $ref: '#/components/schemas/SnmpBean'
        interfaces:
          description: The list of network interfaces of the server.
          items:
            $ref: '#/components/schemas/NetworkInterface'
          minItems: 1
          type: array
          writeOnly: true
        location:
          allOf:
          - $ref: '#/components/schemas/InlinedLocation'
          required:
          - id
        statistics:
          additionalProperties:
            type: object
          description: Displays statistics information collected from the monitoring
            service.
          readOnly: true
          type: object
        overrideConfigurationLevelDhcpValidation:
          description: Indicates whether DHCP deployment validation settings configured
            at the configuration level are overridden at the server level.
          nullable: false
          type: boolean
        overrideConfigurationLevelDnsValidation:
          description: Indicates whether DNS deployment validation settings configured
            at the configuration level are overridden at the server level.
          nullable: false
          type: boolean
        dhcpConfigurationValidationEnabled:
          description: Indicates whether the syntax of the dhcpd.conf file is validated
            prior to deployment from Address Manager.
          nullable: false
          type: boolean
        dnsConfigurationValidationEnabled:
          description: Indicates whether the syntax of the named.conf file is validated
            prior to deployment from Address Manager.
          nullable: false
          type: boolean
        dnsZoneValidationEnabled:
          description: Indicates whether the syntax of each DNS zone file is validated
            prior to deployment from Address Manager.
          nullable: false
          type: boolean
        checkIntegrityValidation:
          description: The method for which the syntax checks of the DNS zone file
            is checked.
          enum:
          - NONE
          - LOCAL
          - LOCAL_SIBLING
          - FULL
          - FULL_SIBLING
          nullable: false
          type: string
        checkMxCnameValidation:
          description: "Checks if MX records point to a CNAME record rather than an\
            \ A or AAAA, and determines how Address Manager handles conditions found\
            \ by the check."
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkMxValidation:
          description: "Checks if MX records point to an IP address rather than an\
            \ A or AAAA, and determines how Address Manager handles conditions found\
            \ by the check."
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkNamesValidation:
          description: Checks the names within the DNS zone files and determines how
            Address Manager handles conditions found by the check.
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkNsValidation:
          description: "Checks if NS records point to an IP address rather than an\
            \ A or AAAA, and determines how Address Manager handles conditions found\
            \ by the check."
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkSrvCnameValidation:
          description: "Checks if SRV records point to a CNAME record rather than\
            \ an A or AAAA, and determines how Address Manager handles conditions\
            \ found by the check."
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkWildcardValidation:
          description: "Checks for wildcards in zone names that don't appear as the\
            \ last segment of a zone name, and determines how Address Manager handles\
            \ conditions found by the check."
          enum:
          - IGNORE
          - WARN
          nullable: false
          type: string
        privateAddress:
          description: The private IP address of the server.
          example: 10.10.10.10
          type: string
        encryptedNotificationsEnabled:
          description: Indicates whether notifications are encrypted between Address
            Manager and the DNS/DHCP Server
          type: boolean
          writeOnly: true
        managementUrl:
          description: Specifies the management URL for an F5 LTM or GTM server.
          example: 10.10.10.10
          pattern: ^.*\S+.*$
          type: string
        selfIpAddress:
          description: Specifies the self URL for an F5 GTM server.
          example: 10.10.10.10
          type: string
        haBackboneEnabled:
          description: Indicates whether a backbone is enabled between nodes of a
            high-availability pair.
          nullable: false
          type: boolean
        haPingAddress:
          description: Sets the ping address of the high-availability pair.
          example: 10.10.10.10
          type: string
        dhcpServicePrincipal:
          allOf:
          - $ref: '#/components/schemas/InlinedKerberosServicePrincipal'
          required:
          - id
        dnsServicePrincipal:
          allOf:
          - $ref: '#/components/schemas/InlinedKerberosServicePrincipal'
          required:
          - id
        _inheritedFields:
          items:
            type: string
          readOnly: true
          type: array
      type: object
    DHCPDeploymentRole:
      allOf:
      - $ref: '#/components/schemas/DeploymentRole'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPDeploymentRole
            nullable: false
            type: string
          roleType:
            enum:
            - PRIMARY
            - NONE
            nullable: false
            type: string
          interfaces:
            description: The list of server interfaces for the role.
            items:
              $ref: '#/components/schemas/InlinedDhcpRoleServerInterface'
            minItems: 1
            type: array
            writeOnly: true
        type: object
      type: object
    DNSDeploymentRole:
      allOf:
      - $ref: '#/components/schemas/DeploymentRole'
      - properties:
          type:
            description: The resource type.
            enum:
            - DNSDeploymentRole
            nullable: false
            type: string
          roleType:
            description: "The type of DNS deployment role. Roles set to NONE are not\
              \ deployed, instead clearing data from the server they are applied to."
            enum:
            - PRIMARY
            - HIDDEN_PRIMARY
            - SECONDARY
            - STEALTH_SECONDARY
            - FORWARDING
            - STUB
            - RECURSIVE
            - NONE
            nullable: false
            type: string
          view:
            allOf:
            - $ref: '#/components/schemas/InlinedView'
            required:
            - id
          nsRecordTtl:
            description: The time-to-live (TTL) value for the name server and glue
              records deployed via the deployment role.
            format: int64
            maximum: 2147483647
            minimum: 0
            type: integer
          interfaces:
            description: The server interfaces to which the DHCP deployment role is
              assigned.
            items:
              $ref: '#/components/schemas/InlinedDnsRoleServerInterface'
            minItems: 1
            type: array
            writeOnly: true
        type: object
      type: object
    DeploymentRole:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DeploymentRole
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
      type: object
    HAServer:
      allOf:
      - $ref: '#/components/schemas/AbstractServer'
      - properties:
          type:
            description: The resource type.
            enum:
            - HAServer
            nullable: false
            type: string
          name:
            description: The name of the resource.
            example: name
            pattern: ^.*\S+.*$
            type: string
          profile:
            description: The profile of the server.
            enum:
            - ADONIS_XMB4
            - ADONIS_XMB3
            - ADONIS_XMB2
            - OTHER_DNS_SERVER
            - AFILIAS_DNS_SERVER
            - ADONIS_800
            - ADONIS_1200
            - ADONIS_1900
            - ADONIS_1950
            - DNS_DHCP_SERVER_20
            - DNS_DHCP_SERVER_45
            - DNS_DHCP_SERVER_60
            - DNS_DHCP_SERVER_100
            - DNS_DHCP_SERVER_100_D
            - LTM
            - GTM
            - DNS_DHCP_GEN4_7000
            - DNS_DHCP_GEN4_5000
            - DNS_DHCP_GEN4_4000
            - DNS_DHCP_GEN4_2000
            - CLOUD_DNS_SERVER
            readOnly: true
            type: string
          interfaces:
            description: The list of network interfaces of the server.
            items:
              $ref: '#/components/schemas/HAServer_allOf_interfaces'
            minItems: 1
            type: array
            writeOnly: true
          activeServer:
            allOf:
            - $ref: '#/components/schemas/InlinedServer'
            nullable: false
            required:
            - id
            - password
            writeOnly: true
          passiveServer:
            allOf:
            - $ref: '#/components/schemas/InlinedServer'
            nullable: false
            required:
            - id
            - password
            writeOnly: true
        type: object
      type: object
    InlinedDhcpRoleServerInterface:
      description: The list of server interfaces for the role.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          nullable: false
          type: integer
        type:
          description: The resource type.
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
        deploymentRoleInterfaceType:
          description: The type of the deployment role server interface
          enum:
          - PRIMARY
          - SECONDARY
          type: string
      type: object
    InlinedDnsRoleServerInterface:
      description: The server interfaces to which the DHCP deployment role is assigned.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          nullable: false
          type: integer
        type:
          description: The resource type.
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
        deploymentRoleInterfaceType:
          description: The type of the deployment role server interface
          enum:
          - SERVICE
          - ZONE_TRANSFER
          - TARGET
          type: string
        deploymentRoleInterfaceProtocol:
          description: The internet protocol used for DNS zone transfers.
          enum:
          - IPV4
          - IPV6
          type: string
      type: object
    InlinedKerberosServicePrincipal:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - KerberosServicePrincipal
          type: string
        name:
          description: The name for the Kerberos service principal defined in the
            User Logon name field in Windows configuration section.
          example: DHCP/dhcp1.bcn.com
          pattern: ^.*\S+.*$
          type: string
      title: KerberosServicePrincipal
      type: object
    InlinedServer:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Server
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        password:
          description: The password used to authenticate with the server.
          example: "[PASSWORD]"
          pattern: ^.*\S+.*$
          type: string
      title: Server
      type: object
    InlinedServerGroup:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ServerGroup
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
      title: ServerGroup
      type: object
    KerberosServicePrincipal:
      description: The security ticket for the DNS service to use to authenticate
        keys requested by the GSS-TSIG protocol.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - KerberosServicePrincipal
          type: string
        name:
          description: The name for the Kerberos service principal defined in the
            User Logon name field in Windows configuration section.
          example: DHCP/dhcp1.bcn.com
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        keyVersionNumber:
          description: The msDS-KeyVersionNumber attribute value displayed in ADSI
            Edit on the Windows DC for the principal’s Kerberos key.
          format: int32
          minimum: 1
          nullable: false
          type: integer
        password:
          description: The principal’s Kerberos password. This is the AD user account
            password created on Windows DC.
          example: password
          pattern: ^.*\S+.*$
          type: string
      type: object
    NetworkInterface:
      allOf:
      - $ref: '#/components/schemas/ServerInterface'
      - properties:
          type:
            description: The resource type.
            enum:
            - NetworkInterface
            nullable: false
            type: string
          managementAddress:
            description: "The IP address configured on the eth0 interface in the DNS/DHCP\
              \ Administration Console. If dedicated management is enabled, The IP\
              \ address for the dedicated management interface (eth2). On a multi-interface\
              \ DNS/DHCP Server, the interface is used for all management traffic\
              \ such as CS, PSM, SNMP, and SSH."
            example: 10.10.0.1
            type: string
          servicesIpv4Address:
            description: "The IPv4 address for the services interface. On a multi-interface\
              \ DNS/DHCP Server, the interface is used for all service traffic such\
              \ as DNS, DHCP, and TFTP services."
            example: 10.10.10.1
            readOnly: true
            type: string
          servicesIpv4PrefixLength:
            description: The IPv4 prefix length for the services interface.
            example: 24
            format: int32
            maximum: 32
            minimum: 1
            readOnly: true
            type: integer
          servicesIpv6Address:
            description: The IPv6 address for the services interface.
            example: 2001:db8::1:1
            readOnly: true
            type: string
          servicesIpv6PrefixLength:
            description: The IPv6 prefix length for the services interface.
            example: 64
            format: int32
            maximum: 128
            minimum: 1
            readOnly: true
            type: integer
          haBackboneAddress:
            description: The IP address of the backbone connection if configured as
              a member of a high availability pair.
            example: 10.10.10.5
            readOnly: true
            type: string
          haBackbonePrefixLength:
            description: The subnet prefix length of the high availability backbone.
            example: 24
            format: int32
            maximum: 128
            minimum: 1
            readOnly: true
            type: integer
          redundancyEnabled:
            description: Indicates whether redundancy is enabled through port bonding.
            readOnly: true
            type: boolean
          redundancyScenario:
            description: The type of redundancy scenario configured.
            enum:
            - ACTIVE_BACKUP
            - ACTIVE_ACTIVE
            type: string
        type: object
      example:
        managementAddress: 10.10.0.1
        servicesIpv6PrefixLength: 64
        server: ""
        servicesIpv6Address: 2001:db8::1:1
        redundancyScenario: ACTIVE_BACKUP
        secondaryAddress: 10.10.10.5
        configuration: ""
        type: NetworkInterface
        servicesIpv4PrefixLength: 24
        userDefinedFields:
          key: userDefinedFields
        haBackboneAddress: 10.10.10.5
        name: name
        id: 103307
        haBackbonePrefixLength: 24
        servicesIpv4Address: 10.10.10.1
        redundancyEnabled: true
      type: object
    Server:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Server
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        profile:
          description: The profile of the server.
          enum:
          - ADONIS_XMB4
          - ADONIS_XMB3
          - ADONIS_XMB2
          - OTHER_DNS_SERVER
          - AFILIAS_DNS_SERVER
          - ADONIS_800
          - ADONIS_1200
          - ADONIS_1900
          - ADONIS_1950
          - DNS_DHCP_SERVER_20
          - DNS_DHCP_SERVER_45
          - DNS_DHCP_SERVER_60
          - DNS_DHCP_SERVER_100
          - DNS_DHCP_SERVER_100_D
          - LTM
          - GTM
          - DNS_DHCP_GEN4_7000
          - DNS_DHCP_GEN4_5000
          - DNS_DHCP_GEN4_4000
          - DNS_DHCP_GEN4_2000
          - CLOUD_DNS_SERVER
          nullable: false
          type: string
        state:
          description: "The current state of the server, indicating whether the server\
            \ is enabled or disabled."
          enum:
          - ENABLED
          - DISABLED
          - FAILOVER
          - RESET_CONTROL
          - REPAIR
          type: string
        username:
          description: The username used to authenticate with the server.
          example: admin
          pattern: ^.*\S+.*$
          type: string
        password:
          description: The password used to authenticate with the server.
          example: "[PASSWORD]"
          pattern: ^.*\S+.*$
          type: string
        serverGroup:
          allOf:
          - $ref: '#/components/schemas/InlinedServerGroup'
          required:
          - id
        connected:
          description: Indicates whether the server is connected to Address Manager.
          type: boolean
        monitoringEnabled:
          description: Indicates whether monitoring service is enabled on the server.
          type: boolean
        snmp:
          $ref: '#/components/schemas/SnmpBean'
        interfaces:
          description: The list of network interfaces of the server.
          items:
            $ref: '#/components/schemas/NetworkInterface'
          minItems: 1
          type: array
          writeOnly: true
        location:
          allOf:
          - $ref: '#/components/schemas/InlinedLocation'
          required:
          - id
        statistics:
          additionalProperties:
            type: object
          description: Displays statistics information collected from the monitoring
            service.
          readOnly: true
          type: object
        overrideConfigurationLevelDhcpValidation:
          description: Indicates whether DHCP deployment validation settings configured
            at the configuration level are overridden at the server level.
          nullable: false
          type: boolean
        overrideConfigurationLevelDnsValidation:
          description: Indicates whether DNS deployment validation settings configured
            at the configuration level are overridden at the server level.
          nullable: false
          type: boolean
        dhcpConfigurationValidationEnabled:
          description: Indicates whether the syntax of the dhcpd.conf file is validated
            prior to deployment from Address Manager.
          nullable: false
          type: boolean
        dnsConfigurationValidationEnabled:
          description: Indicates whether the syntax of the named.conf file is validated
            prior to deployment from Address Manager.
          nullable: false
          type: boolean
        dnsZoneValidationEnabled:
          description: Indicates whether the syntax of each DNS zone file is validated
            prior to deployment from Address Manager.
          nullable: false
          type: boolean
        checkIntegrityValidation:
          description: The method for which the syntax checks of the DNS zone file
            is checked.
          enum:
          - NONE
          - LOCAL
          - LOCAL_SIBLING
          - FULL
          - FULL_SIBLING
          nullable: false
          type: string
        checkMxCnameValidation:
          description: "Checks if MX records point to a CNAME record rather than an\
            \ A or AAAA, and determines how Address Manager handles conditions found\
            \ by the check."
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkMxValidation:
          description: "Checks if MX records point to an IP address rather than an\
            \ A or AAAA, and determines how Address Manager handles conditions found\
            \ by the check."
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkNamesValidation:
          description: Checks the names within the DNS zone files and determines how
            Address Manager handles conditions found by the check.
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkNsValidation:
          description: "Checks if NS records point to an IP address rather than an\
            \ A or AAAA, and determines how Address Manager handles conditions found\
            \ by the check."
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkSrvCnameValidation:
          description: "Checks if SRV records point to a CNAME record rather than\
            \ an A or AAAA, and determines how Address Manager handles conditions\
            \ found by the check."
          enum:
          - IGNORE
          - WARN
          - FAIL
          nullable: false
          type: string
        checkWildcardValidation:
          description: "Checks for wildcards in zone names that don't appear as the\
            \ last segment of a zone name, and determines how Address Manager handles\
            \ conditions found by the check."
          enum:
          - IGNORE
          - WARN
          nullable: false
          type: string
        privateAddress:
          description: The private IP address of the server.
          example: 10.10.10.10
          type: string
        encryptedNotificationsEnabled:
          description: Indicates whether notifications are encrypted between Address
            Manager and the DNS/DHCP Server
          type: boolean
          writeOnly: true
        managementUrl:
          description: Specifies the management URL for an F5 LTM or GTM server.
          example: 10.10.10.10
          pattern: ^.*\S+.*$
          type: string
        selfIpAddress:
          description: Specifies the self URL for an F5 GTM server.
          example: 10.10.10.10
          type: string
        haBackboneEnabled:
          description: Indicates whether a backbone is enabled between nodes of a
            high-availability pair.
          nullable: false
          type: boolean
        haPingAddress:
          description: Sets the ping address of the high-availability pair.
          example: 10.10.10.10
          type: string
        dhcpServicePrincipal:
          allOf:
          - $ref: '#/components/schemas/InlinedKerberosServicePrincipal'
          required:
          - id
        dnsServicePrincipal:
          allOf:
          - $ref: '#/components/schemas/InlinedKerberosServicePrincipal'
          required:
          - id
        dedicatedManagementEnabled:
          description: Indicates whether dedicated management is enabled on the server.
          nullable: false
          type: boolean
        haRole:
          enum:
          - NOT_AVAILABLE
          - PASSIVE
          - ACTIVE
          readOnly: true
          type: string
        haPeerConnectionState:
          enum:
          - DEGRADED
          - FAILOVER
          - HEALTHY
          - INITIALIZING
          - REPAIR
          - SYNCHRONIZING
          - UNKNOWN
          - UP_TO_DATE
          readOnly: true
          type: string
        haDiskState:
          enum:
          - DEGRADED
          - FAILOVER
          - HEALTHY
          - INITIALIZING
          - REPAIR
          - SYNCHRONIZING
          - UNKNOWN
          - UP_TO_DATE
          readOnly: true
          type: string
        hsmSupportEnabled:
          description: Indicates whether HSM is enabled on the server.
          nullable: false
          type: boolean
        interfaceRedundancyEnabled:
          description: Indicates whether interface redundancy is enabled on the server.
          nullable: false
          type: boolean
        _inheritedFields:
          items:
            type: string
          readOnly: true
          type: array
      type: object
    ServerGroup:
      description: The server group to which the server is linked.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ServerGroup
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
      type: object
    TFTPDeploymentRole:
      allOf:
      - $ref: '#/components/schemas/DeploymentRole'
      - properties:
          type:
            description: The resource type.
            enum:
            - TFTPDeploymentRole
            nullable: false
            type: string
          roleType:
            enum:
            - TFTP
            type: string
          server:
            allOf:
            - $ref: '#/components/schemas/InlinedServer'
            nullable: false
            required:
            - id
        type: object
      type: object
    FileInfo:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
      type: object
    TFTPFile:
      allOf:
      - $ref: '#/components/schemas/FileInfo'
      - properties:
          type:
            description: The resource type.
            enum:
            - TFTPFile
            nullable: false
            type: string
          version:
            description: The version of the TFTP file.
            example: 1.0.0
            type: string
          description:
            description: The description of the TFTP file.
            example: Initial config file
            type: string
          size:
            description: "The size of the TFTP file, in bytes."
            example: 10193
            format: int64
            readOnly: true
            type: integer
          md5Checksum:
            description: The MD5 checksum of the TFTP file.
            example: 6A6D6AC66A2970F37944B349123E0123
            readOnly: true
            type: string
        type: object
      type: object
    TFTPFolder:
      allOf:
      - $ref: '#/components/schemas/FileInfo'
      - properties:
          type:
            description: The resource type.
            enum:
            - TFTPFolder
            nullable: false
            type: string
        type: object
      type: object
    UserGroup:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - UserGroup
          type: string
        name:
          description: "The name for the user, LDAP, TACACS+, or SSO group."
          example: Test group
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        groupType:
          enum:
          - ADDRESS_MANAGER
          - LDAP
          - SSO
          - TACACS_PLUS
          nullable: false
          type: string
        description:
          description: The description of the SSO group.
          example: SSO Group 1
          pattern: ^.*\S+.*$
          type: string
        administratorPrivilege:
          description: Indicates whether the users within the group have administrative
            user privileges.
          nullable: false
          type: boolean
        authenticator:
          $ref: '#/components/schemas/InlinedAuthenticator'
      type: object
    LinkedUserGroup:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - UserGroup
          type: string
      type: object
    ResourceImport:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The type of import
          enum:
          - ResourceImport
          type: string
        fileInfo:
          nullable: false
          writeOnly: true
        fileData:
          nullable: false
          writeOnly: true
        name:
          description: The name of the import
          example: migration.zip
          readOnly: true
          type: string
        contentType:
          description: The content type of the import data
          example: application/vnd.bcn.proteus-migration+xml; v=3.0
          readOnly: true
          type: string
        size:
          description: "The size of the import, in bytes"
          example: 10193
          format: int64
          readOnly: true
          type: integer
        state:
          description: The current state of the import
          enum:
          - PENDING
          - QUEUED
          - RUNNING
          - CANCELLED
          - CANCELLING
          - COMPLETED
          - COMPLETED_WITH_WARNINGS
          - FAILED
          - UNKNOWN
          type: string
        creationDateTime:
          description: The date and time the import resource was created
          example: 2022-11-07T10:34:22Z
          format: date-time
          readOnly: true
          type: string
        startDateTime:
          description: The date and time the import was started
          example: 2022-11-07T10:38:23Z
          format: date-time
          readOnly: true
          type: string
        completionDateTime:
          description: The date and time the import completed
          example: 2022-11-07T10:47:43Z
          format: date-time
          readOnly: true
          type: string
      type: object
    ResponsePolicyItemImport:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The type of import
          enum:
          - ResponsePolicyItemImport
          readOnly: true
          type: string
        fileInfo:
          nullable: false
          writeOnly: true
        fileData:
          nullable: false
          writeOnly: true
        name:
          description: The name of the import
          example: migration.zip
          readOnly: true
          type: string
        contentType:
          description: The content type of the import data
          example: text/plain
          readOnly: true
          type: string
        size:
          description: "The size of the import, in bytes"
          example: 10193
          format: int64
          readOnly: true
          type: integer
        state:
          description: The current state of the import
          enum:
          - PENDING
          - QUEUED
          - RUNNING
          - CANCELLED
          - CANCELLING
          - COMPLETED
          - COMPLETED_WITH_WARNINGS
          - FAILED
          - UNKNOWN
          readOnly: true
          type: string
        creationDateTime:
          description: The date and time the import resource was created
          example: 2022-11-07T10:34:22Z
          format: date-time
          readOnly: true
          type: string
        startDateTime:
          description: The date and time the import was started
          example: 2022-11-07T10:38:23Z
          format: date-time
          readOnly: true
          type: string
        completionDateTime:
          description: The date and time the import completed
          example: 2022-11-07T10:47:43Z
          format: date-time
          readOnly: true
          type: string
      type: object
    PublishedInterface:
      allOf:
      - $ref: '#/components/schemas/ServerInterface'
      - properties:
          type:
            description: The resource type.
            enum:
            - PublishedInterface
            nullable: false
            type: string
          primaryAddress:
            description: The primary IP address of the published interface.
            example: 10.10.0.1
            nullable: false
            type: string
        type: object
      type: object
    ServerInterface:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ServerInterface
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        server:
          allOf:
          - $ref: '#/components/schemas/AbstractServer'
          readOnly: true
        secondaryAddress:
          description: The secondary IP address of the interface.
          example: 10.10.10.5
          type: string
      type: object
    KeyDistributionCenter:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - KeyDistributionCenter
          type: string
        name:
          description: The name of the Kerberos key distribution center.
          example: KDC-1
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        host:
          description: The IP address or hostname of the Kerberos key distribution
            center
          example: 192.168.0.10
          nullable: false
          type: string
        port:
          description: The port of the Kerberos key distribution center
          example: 88
          format: int32
          maximum: 65535
          minimum: 1
          nullable: false
          type: integer
      type: object
    MACAddress:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - MACAddress
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        address:
          description: The MAC address.
          example: 00-00-5E-00-53-AF
          nullable: false
          type: string
        macPool:
          $ref: '#/components/schemas/InlinedMacPool'
      type: object
    LinkedMACAddress:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - MACAddress
          type: string
      type: object
    AbstractMacPool:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
      type: object
    DenyMACPool:
      allOf:
      - $ref: '#/components/schemas/AbstractMacPool'
      - properties:
          type:
            description: The resource type.
            enum:
            - DenyMACPool
            nullable: false
            type: string
          instantDeploymentEnabled:
            readOnly: true
            type: boolean
        type: object
      type: object
    MACPool:
      allOf:
      - $ref: '#/components/schemas/AbstractMacPool'
      - properties:
          type:
            description: The resource type.
            enum:
            - MACPool
            nullable: false
            type: string
          instantDeploymentEnabled:
            description: Indicates whether MAC pool changes are instantly deployed
              to associated DNS/DHCP servers.
            nullable: false
            type: boolean
        type: object
      type: object
    IPv4BlockMerge:
      allOf:
      - $ref: '#/components/schemas/Merge'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4BlockMerge
            type: string
          blocks:
            items:
              $ref: '#/components/schemas/IPv4BlockMerge_allOf_blocks'
            minItems: 1
            type: array
            writeOnly: true
          destination:
            allOf:
            - $ref: '#/components/schemas/InlinedIpv4BlockMergeDestination'
            nullable: false
            required:
            - id
        type: object
      type: object
    IPv4DHCPRangeMerge:
      allOf:
      - $ref: '#/components/schemas/Merge'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4DHCPRangeMerge
            type: string
          ranges:
            items:
              $ref: '#/components/schemas/IPv4DHCPRangeMerge_allOf_ranges'
            minItems: 1
            type: array
            writeOnly: true
          destination:
            allOf:
            - $ref: '#/components/schemas/InlinedIPv4DHCPRange'
            nullable: false
            required:
            - id
        type: object
      type: object
    IPv4NetworkMerge:
      allOf:
      - $ref: '#/components/schemas/Merge'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4NetworkMerge
            type: string
          networks:
            items:
              $ref: '#/components/schemas/IPv4NetworkMerge_allOf_networks'
            minItems: 1
            type: array
            writeOnly: true
          destination:
            allOf:
            - $ref: '#/components/schemas/InlinedIPv4Network'
            nullable: false
            required:
            - id
        type: object
      type: object
    InlinedIPv4Block:
      description: The IPv4 block to be split.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          nullable: false
          type: integer
        type:
          description: The resource type.
          enum:
          - IPv4Block
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    InlinedIPv4DHCPRange:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - IPv4DHCPRange
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    InlinedIPv4Network:
      description: The IPv4 network to be split.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          nullable: false
          type: integer
        type:
          description: The resource type.
          enum:
          - IPv4Network
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    InlinedIpv4BlockMergeDestination:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          nullable: false
          type: integer
        type:
          description: The resource type.
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
      type: object
    Merge:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          type: string
      type: object
    DNSMove:
      allOf:
      - $ref: '#/components/schemas/Move'
      - properties:
          type:
            description: The resource type.
            enum:
            - DNSMove
            nullable: false
            type: string
          absoluteName:
            description: The absolute name of the destination zone resource where
              the DNS resource is to be moved.
            example: example.com
            nullable: false
            type: string
        type: object
      type: object
    DeploymentRoleMove:
      allOf:
      - $ref: '#/components/schemas/Move'
      - properties:
          type:
            description: The resource type.
            enum:
            - DeploymentRoleMove
            nullable: false
            type: string
          roleTypes:
            items:
              enum:
              - DHCPDeploymentRole
              - DNSDeploymentRole
              type: string
            minItems: 1
            type: array
          destination:
            allOf:
            - $ref: '#/components/schemas/InlinedServerInterface'
            nullable: false
            required:
            - id
        type: object
      type: object
    IPMove:
      allOf:
      - $ref: '#/components/schemas/Move'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPMove
            nullable: false
            type: string
          address:
            description: The IP address of the destination resource where the IP resource
              is to be moved.
            example: 10.0.0.0
            nullable: false
            type: string
          macAddress:
            $ref: '#/components/schemas/IPMove_allOf_macAddress'
          serversUpdated:
            type: boolean
            writeOnly: true
        type: object
      type: object
    InlinedServerInterface:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ServerInterface
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
      title: ServerInterface
      type: object
    Move:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
      type: object
    LinkedNamingPolicy:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - NamingPolicy
          type: string
        inheritanceEnabled:
          type: boolean
        appliedTypes:
          items:
            enum:
            - ACL
            - AddressManagerAuthenticator
            - AliasRecord
            - Configuration
            - DHCPClientIdentifier
            - DHCPDeploymentRole
            - DHCPForwardZone
            - DHCPReverseZone
            - DHCPUniqueIdentifier
            - DHCPVendorOption
            - DHCPVendorOptionDefinition
            - DHCPZoneGroup
            - DHCPv4ClientClass
            - DHCPv4ClientOption
            - DHCPv4ClientOptionDefinition
            - DHCPv4CustomClientOptionDefinition
            - DHCPv4RawOption
            - DHCPv4ServiceOption
            - DHCPv4ServiceOptionDefinition
            - DHCPv4Subclass
            - DHCPv6ClientOption
            - DHCPv6ClientOptionDefinition
            - DHCPv6RawOption
            - DHCPv6ServiceOption
            - DHCPv6ServiceOptionDefinition
            - DNS64
            - DNSDeploymentRole
            - DNSOption
            - DNSOptionDefinition
            - DNSRawOption
            - DNSSECSigningPolicy
            - DenyMACPool
            - DeploymentSchedule
            - Device
            - DeviceSubtype
            - DeviceType
            - ENUMNumberZone
            - ENUMZone
            - EntrustKeySigningKey
            - EntrustZoneSigningKey
            - ExternalHostRecord
            - ExternalHostsZone
            - GenericRecord
            - HAServer
            - HINFORecord
            - HSMConfiguration
            - HSMServer
            - HostRecord
            - IPv4Address
            - IPv4Block
            - IPv4DHCPRange
            - IPv4DHCPRangeTemplateItem
            - IPv4GatewayTemplateItem
            - IPv4Group
            - IPv4GroupTemplateItem
            - IPv4Network
            - IPv4ReconciliationPolicy
            - IPv4ReservedRangeTemplateItem
            - IPv4Template
            - IPv6Address
            - IPv6Block
            - IPv6DHCPRange
            - IPv6Network
            - IPv6ReconciliationPolicy
            - InternalRootZone
            - KerberosAuthenticator
            - KerberosRealm
            - KerberosServicePrincipal
            - KeyDistributionCenter
            - KeySigningKey
            - LDAPAuthenticator
            - Location
            - MACAddress
            - MACPool
            - MXRecord
            - NAPTRRecord
            - NamingPolicy
            - NamingPolicyConnectorValue
            - NamingPolicyIncrementalValue
            - NamingPolicyIntegerValue
            - NamingPolicyRequiredValue
            - NamingPolicyRestriction
            - NamingPolicyTextValue
            - NetworkInterface
            - NotificationGroup
            - OAuthAuthorizationServer
            - PublishedInterface
            - RADIUSAuthenticator
            - Report
            - ReportSchedule
            - ResponsePolicy
            - ResponsePolicyZone
            - SAMLIdentityProvider
            - SRVRecord
            - Server
            - ServerGroup
            - StartOfAuthority
            - StartOfAuthorityDefinition
            - TACACSPlusAuthenticator
            - TFTPDeploymentRole
            - TFTPFile
            - TFTPFolder
            - TFTPGroup
            - TSIGKey
            - TXTRecord
            - Tag
            - TagGroup
            - Task
            - User
            - UserGroup
            - VendorProfile
            - View
            - VirtualInterface
            - X509Authenticator
            - Zone
            - ZoneSigningKey
            - ZoneTemplate
            type: string
          type: array
      type: object
    NamingPolicy:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - NamingPolicy
          type: string
        name:
          description: The name of the naming policy.
          example: naming policy name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        policyValues:
          items:
            $ref: '#/components/schemas/NamingPolicyValue'
          type: array
          writeOnly: true
        policyRestrictions:
          items:
            $ref: '#/components/schemas/NamingPolicyRestriction'
          type: array
          writeOnly: true
      type: object
    NamingPolicyConnectorValue:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyValue'
      - properties:
          type:
            description: The resource type.
            enum:
            - NamingPolicyConnectorValue
            nullable: false
            readOnly: true
            type: string
          connector:
            description: "A character used to separate elements in a filename; typically,\
              \ - (hyphen) or _ (underscore) are used."
            example: "-"
            nullable: false
            type: string
        type: object
      type: object
    NamingPolicyIncrementalValue:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyValue'
      - properties:
          type:
            description: The resource type.
            enum:
            - NamingPolicyIncrementalValue
            nullable: false
            readOnly: true
            type: string
          incrementalRole:
            description: "The incremental counter type. The value can be Counter to\
              \ make the value a sequential counter or Unique Name to use the value\
              \ to ensure that the names are unique. When you select Counter, the\
              \ value starts at a specified value and increments each time the naming\
              \ policy creates a name. When you select Unique Name, the value increments\
              \ only to ensure that generated names are unique."
            enum:
            - UNIQUE_NAME
            - COUNTER
            nullable: false
            type: string
          incrementType:
            description: The number system for the incremental value.
            enum:
            - DECIMAL
            - HEXADECIMAL
            nullable: false
            type: string
          paddingType:
            description: The padding that is added to the incremental value. Simple
              padding pads the incremental value with a fixed number of leading zeros.
              Global padding pads the incremental value with leading zeros to make
              the entire name generated by the policy a specific length.
            enum:
            - NONE
            - SIMPLE
            - GLOBAL
            nullable: false
            type: string
          sequenceStart:
            description: The starting value for the incremental value.
            example: 10
            format: int32
            type: integer
          sequenceIncrement:
            description: The amount by which to increment the value each time it's
              used.
            example: 5
            format: int32
            type: integer
          paddingLength:
            description: "The length of the padding. For simple padding, the value\
              \ determines how many digits are used for the incremental value. For\
              \ global padding, the value determines the overall length of the name\
              \ generated by the naming policy."
            example: 5
            format: int32
            type: integer
          missingValueReuseEnabled:
            description: Determines whether the naming policy reuses numeric values
              if they're available.
            type: boolean
        type: object
      type: object
    NamingPolicyIntegerValue:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyValue'
      - properties:
          type:
            description: The resource type.
            enum:
            - NamingPolicyIntegerValue
            nullable: false
            readOnly: true
            type: string
          min:
            description: The start value for the numeric range.
            example: 1
            format: int32
            maximum: 2147483647
            minimum: 0
            type: integer
          max:
            description: The end value for the numeric range. A value of 0 indicates
              that the range is unbounded.
            example: 0
            format: int32
            maximum: 2147483647
            minimum: 0
            type: integer
        type: object
      type: object
    NamingPolicyRequiredValue:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyValue'
      - properties:
          type:
            description: The resource type.
            enum:
            - NamingPolicyRequiredValue
            nullable: false
            readOnly: true
            type: string
          elements:
            items:
              $ref: '#/components/schemas/NameValuePairBean'
            minItems: 1
            type: array
        type: object
      type: object
    NamingPolicyRestriction:
      example:
        name: name
        restrictions:
        - matchType: Exact
          value: host
        - matchType: Exact
          value: host
        id: 103307
        type: NamingPolicyRestriction
        userDefinedFields:
          key: userDefinedFields
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - NamingPolicyRestriction
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        restrictions:
          items:
            $ref: '#/components/schemas/ValueMatchTypePairBean'
          minItems: 1
          type: array
      type: object
    NamingPolicyTextValue:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyValue'
      - properties:
          type:
            description: The resource type.
            enum:
            - NamingPolicyTextValue
            nullable: false
            readOnly: true
            type: string
          textType:
            enum:
            - LENGTH
            - REGULAR_EXPRESSION
            nullable: false
            type: string
          minLength:
            description: "The shortest string allowed in the name. When set of 0,\
              \ the text string is optional."
            example: 0
            format: int32
            maximum: 2147483647
            minimum: 0
            type: integer
          maxLength:
            description: "The longest string allowed in the name. When set of 0, the\
              \ range is unbound."
            example: 0
            format: int32
            maximum: 2147483647
            minimum: 0
            type: integer
          regularExpression:
            description: The regular expression to restrict the text string.
            example: "[a-z][0-9]"
            type: string
        type: object
      type: object
    NamingPolicyValue:
      discriminator:
        propertyName: type
      example:
        name: naming policy value name
        id: 103307
        type: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          readOnly: true
          type: string
        name:
          description: The name of the naming policy value.
          example: naming policy value name
          pattern: ^.*\S+.*$
          type: string
      type: object
    ValueMatchTypePairBean:
      example:
        matchType: Exact
        value: host
      properties:
        value:
          description: The value to match.
          example: host
          pattern: ^.*\S+.*$
          type: string
        matchType:
          description: The match type applied.
          enum:
          - Exact
          - Any
          nullable: false
          type: string
      type: object
    IPv4Network:
      allOf:
      - $ref: '#/components/schemas/Network'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4Network
            nullable: false
            type: string
          gateway:
            description: The gateway address for the IPv4 network.
            type: string
          template:
            allOf:
            - $ref: '#/components/schemas/InlinedIPv4Template'
            required:
            - id
          routerPortInfo:
            description: Connected router port information for the IPv4 network.
            readOnly: true
            type: string
          defaultView:
            allOf:
            - $ref: '#/components/schemas/InlinedView'
            required:
            - id
          sharedNetworkTag:
            allOf:
            - $ref: '#/components/schemas/InlinedTag'
            required:
            - id
          duplicateHostnamesAllowed:
            description: "Indicates whether duplicate hostnames are allowed in the\
              \ network. If enabled, duplicate hostnames will be allowed. If not set\
              \ explicitly, this value will be inherited from the parent block."
            type: boolean
          pingBeforeAssignEnabled:
            description: Indicates whether Address Manager will ping IP addresses
              before assigning them. Unavailable addresses will not be assigned.
            type: boolean
          defaultZonesInherited:
            description: Indicates whether the IPv4 network will inherit the parent
              resource's default domains if configured.
            nullable: false
            type: boolean
          defaultZones:
            items:
              $ref: '#/components/schemas/IPv4Network_allOf_defaultZones'
            type: array
            writeOnly: true
          restrictedZonesInherited:
            description: Indicates whether the IPv4 network will inherit the parent
              resource's restricted views and zones if configured.
            nullable: false
            type: boolean
          restrictedZones:
            items:
              $ref: '#/components/schemas/IPv4Network_allOf_restrictedZones'
            type: array
            writeOnly: true
          lowWaterMark:
            description: A DHCP alert is triggered when usage falls below this percentage
              (when too few addresses are in use).
            example: 15
            format: int32
            maximum: 100
            minimum: 0
            type: integer
          highWaterMark:
            description: A DHCP alert is triggered when usage exceeds this percentage
              (when too many addresses are in use).
            example: 95
            format: int32
            maximum: 100
            minimum: 0
            type: integer
          reverseZoneSigned:
            description: Indicates whether the reverse zone associated with the IPv4
              network will be signed according to the DNSSEC signing policy in reverseZoneSigningPolicy.
            nullable: false
            type: boolean
          reverseZoneSigningPolicy:
            allOf:
            - $ref: '#/components/schemas/InlinedDNSSECSigningPolicy'
            required:
            - id
          usage:
            additionalProperties:
              description: "Values indicating the current amount of static, DHCP allocated,\
                \ DHCP abandoned, DHCP reserved, reserved, gateway, and unassigned\
                \ IP addresses within the network."
              format: int64
              type: integer
            description: "Values indicating the current amount of static, DHCP allocated,\
              \ DHCP abandoned, DHCP reserved, reserved, gateway, and unassigned IP\
              \ addresses within the network."
            readOnly: true
            type: object
        type: object
      type: object
    IPv6Network:
      allOf:
      - $ref: '#/components/schemas/Network'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv6Network
            nullable: false
            type: string
        type: object
      type: object
    InlinedTag:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Tag
          type: string
        name:
          description: The name of the tag.
          example: UK Office
          pattern: ^.*\S+.*$
          type: string
      title: Tag
      type: object
    Network:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        range:
          description: The IP address range for the network. The range can be provided
            in CIDR (e.g. 10.0.0.0/16) or address range format (e.g. 10.0.0.0-10.0.255.255).
          nullable: false
          type: string
        location:
          allOf:
          - $ref: '#/components/schemas/InlinedLocation'
          required:
          - id
        _inheritedFields:
          items:
            type: string
          readOnly: true
          type: array
      type: object
    Tag:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Tag
          type: string
        name:
          description: The name of the tag.
          example: UK Office
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
      type: object
    ResponsePolicyItem:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ResponsePolicyItem
          type: string
        name:
          description: The fully qualified domain name to be blocked or redirected
            by the responsepolicy.
          example: host.example.com
          pattern: ^.*\S+.*$
          type: string
      type: object
    IPv4DHCPRange:
      allOf:
      - $ref: '#/components/schemas/Range'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4DHCPRange
            nullable: false
            type: string
          template:
            allOf:
            - $ref: '#/components/schemas/InlinedIPv4Template'
            required:
            - id
          splitAroundStaticAddresses:
            description: "Indicates whether the DHCP range will automatically be split\
              \ around any static, reserved, and gateway addresses in the network\
              \ that are within the DHCP range."
            nullable: false
            type: boolean
          exclusionRanges:
            description: The exclusion ranges for the DHCP range. Addresses in each
              exclusion range will not be dynamically assigned.
            items:
              description: The exclusion ranges for the DHCP range. Addresses in each
                exclusion range will not be dynamically assigned.
              type: string
            nullable: false
            type: array
          lowWaterMark:
            description: A DHCP alert is triggered when usage falls below this percentage
              (when too few addresses are in use).
            example: 15
            format: int32
            minimum: 0
            type: integer
          highWaterMark:
            description: A DHCP alert is triggered when usage exceeds this percentage
              (when too many addresses are in use).
            example: 95
            format: int32
            minimum: 0
            type: integer
        type: object
      type: object
    IPv6DHCPRange:
      allOf:
      - $ref: '#/components/schemas/Range'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv6DHCPRange
            nullable: false
            type: string
        type: object
      type: object
    Range:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        range:
          description: The address range for the DHCP range.
          nullable: false
          type: string
        usage:
          additionalProperties:
            description: "Values indicating the current amount of DHCP allocated,\
              \ DHCP abandoned, DHCP reserved, and unassigned IP addresses within\
              \ the range."
            format: int64
            type: integer
          description: "Values indicating the current amount of DHCP allocated, DHCP\
            \ abandoned, DHCP reserved, and unassigned IP addresses within the range."
          readOnly: true
          type: object
        _inheritedFields:
          items:
            type: string
          readOnly: true
          type: array
      type: object
    KerberosRealm:
      description: The Kerberos realm.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - KerberosRealm
          type: string
        name:
          description: The name for the Kerberos realm.
          example: example.company.net
          nullable: false
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        domain:
          description: The donamin name for the Kerberos realm.
          example: EXAMPLE.COMPANY.NET
          nullable: false
          type: string
      type: object
    IPv4ReconciliationPolicy:
      allOf:
      - $ref: '#/components/schemas/ReconciliationPolicy'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4ReconciliationPolicy
            nullable: false
            type: string
          discoveryMethod:
            description: The discovery method for the reconciliation policy.
            enum:
            - SNMP
            - PINGSWEEP
            - SNMP_PINGSWEEP
            - NO_DISCOVERY
            nullable: false
            type: string
          networkBoundaries:
            description: The IPv4 range(s) in CIDR format for the reconciliation policy
              to search.
            items:
              description: The IPv4 range(s) in CIDR format for the reconciliation
                policy to search.
              type: string
            type: array
          pingSweepNetworkGaps:
            description: The IPv4 address ranges in CIDR format for which ping sweep
              sends an ICMP echo request.
            items:
              description: The IPv4 address ranges in CIDR format for which ping sweep
                sends an ICMP echo request.
              type: string
            type: array
          overrides:
            description: "The IPv4 addresses and ranges for the reconciliation policy\
              \ to ignore. The list of overrides can contain single addresses, ranges\
              \ in CIDR format (e.g. 10.0.0.0/16), or ranges in address range format\
              \ (e.g. 10.0.0.0-10.0.255.255)."
            items:
              description: "The IPv4 addresses and ranges for the reconciliation policy\
                \ to ignore. The list of overrides can contain single addresses, ranges\
                \ in CIDR format (e.g. 10.0.0.0/16), or ranges in address range format\
                \ (e.g. 10.0.0.0-10.0.255.255)."
              type: string
            type: array
          reclaimAcceptanceAge:
            description: The age parameter for automatic reconciliation of reclaimable
              addresses. Reconciliation will be applied to reclaimable IP addresses
              older than this value. Reclaimable addresses are addresses that exist
              in Address Manager but are not found on the physical network.
            example: PT1H
            type: string
          unknownAcceptanceAge:
            description: The age parameter for automatic reconciliation of unknown
              addresses. Reconciliation will be applied to unknown IP addresses older
              than this value. Unknown addresses are addresses that exist on the physical
              network but do not exist in Address Manager.
            example: PT1H
            type: string
          mismatchAcceptanceAge:
            description: "The age parameter for automatic reconciliation of mismatched\
              \ addresses. Reconciliation will be applied to mismatched IP addresses\
              \ older than this value. Mismatched addresses are addresses that exist\
              \ in both Address Manager and the physical network, but do not match\
              \ in either the MAC address, DNS host name info, VLAN info, or connect\
              \ switch port info."
            example: PT1H
            type: string
          view:
            allOf:
            - $ref: '#/components/schemas/InlinedView'
            required:
            - id
        type: object
      type: object
    IPv6ReconciliationPolicy:
      allOf:
      - $ref: '#/components/schemas/ReconciliationPolicy'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv6ReconciliationPolicy
            nullable: false
            type: string
          discoveryMethod:
            description: The discovery method for the reconciliation policy.
            enum:
            - SNMP
            - NO_DISCOVERY
            nullable: false
            type: string
        type: object
      type: object
    ReconciliationPolicy:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        enabled:
          description: Indicates whether the reconciliation policy will run at the
            scheduled time.
          nullable: false
          type: boolean
        discoveryMethod:
          description: The discovery method for the reconciliation policy.
          enum:
          - SNMP
          - PINGSWEEP
          - SNMP_PINGSWEEP
          - NO_DISCOVERY
          type: string
        seedRouterAddresses:
          description: The IP address or addresses of the router or layer 3 switch
            where the network discovery operation is to start.
          items:
            description: The IP address or addresses of the router or layer 3 switch
              where the network discovery operation is to start.
            type: string
          type: array
        snmp:
          $ref: '#/components/schemas/SnmpBean'
        skipFqdnEnabled:
          description: Indicates whether the Address Manager discovery engine will
            skip FQDN and reverse DNS lookups.
          nullable: false
          type: boolean
        dnsServers:
          description: The IP address or addresses for the DNS server(s) that the
            discovery engine will use to perform FQDN and reverse DNS lookups.
          items:
            description: The IP address or addresses for the DNS server(s) that the
              discovery engine will use to perform FQDN and reverse DNS lookups.
            type: string
          type: array
        blackHoleVlan:
          description: The VLAN ID for the black hole VLAN. The black hole VLAN is
            used as a default VLAN for all unused ports.
          format: int32
          maximum: 4096
          minimum: 1
          nullable: false
          type: integer
        trunkDefaultVlan:
          description: The VLAN ID assigned to a trunk as a native/default VLAN to
            protect controlled traffic from being spoofed.
          format: int32
          maximum: 4096
          minimum: 1
          nullable: false
          type: integer
        startDateTime:
          description: The start time for the reconciliation policy discovery.
          example: 2022-11-17T20:11:00Z
          format: date-time
          nullable: false
          type: string
        frequency:
          description: The recurring frequency for reconciliation policy discovery.
          example: PT1H
          type: string
      type: object
    ResponsePolicy:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ResponsePolicy
          type: string
        name:
          description: The name of the response policy
          example: Block Response Policy
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        policyType:
          description: The type of response policy configured.
          enum:
          - ALLOWLIST
          - BLACKHOLE
          - BLOCKLIST
          - REDIRECT
          nullable: false
          type: string
        ttl:
          description: "The TTL value for each type of response policy, in seconds."
          example: 3600
          format: int64
          maximum: 2147483647
          minimum: 0
          type: integer
        redirectTarget:
          description: "For response policies configured as REDIRECT policies, the\
            \ fully qualified domain name to which users will be redirected."
          example: domain.example.corp
          type: string
      type: object
    LinkedIPv4Block:
      allOf:
      - $ref: '#/components/schemas/LinkedIpv4Prefix'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4Block
            type: string
        type: object
      type: object
    LinkedIPv4Network:
      allOf:
      - $ref: '#/components/schemas/LinkedIpv4Prefix'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4Network
            type: string
        type: object
      type: object
    LinkedIpv4Prefix:
      allOf:
      - $ref: '#/components/schemas/LinkedPrefix'
      discriminator:
        propertyName: type
      type: object
    LinkedAbstractServer:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          type: string
      type: object
    LinkedHAServer:
      allOf:
      - $ref: '#/components/schemas/LinkedAbstractServer'
      - properties:
          type:
            description: The resource type.
            enum:
            - HAServer
            type: string
        type: object
      type: object
    LinkedServer:
      allOf:
      - $ref: '#/components/schemas/LinkedAbstractServer'
      - properties:
          type:
            description: The resource type.
            enum:
            - Server
            type: string
        type: object
      type: object
    AnycastService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - AnycastService
            nullable: false
            type: string
          enabled:
            description: Indicates whether the Anycast service is enabled.
            nullable: false
            type: boolean
          manualOverrideEnabled:
            description: Indicates whether the Anycast service configuration has been
              manually overridden.
            readOnly: true
            type: boolean
          addresses:
            description: The Anycast IP addresses.
            items:
              description: The Anycast IP addresses.
              type: string
            minItems: 1
            type: array
          routing:
            $ref: '#/components/schemas/RoutingProtocolBean'
        type: object
      type: object
    ArcSightServerBean:
      allOf:
      - $ref: '#/components/schemas/SyslogRedirectionServerBean'
      type: object
    BgpNeighborBean:
      properties:
        autonomousSystemNumber:
          format: int64
          maximum: 4294967295
          minimum: 1
          nullable: false
          type: integer
        address:
          nullable: false
          type: string
        authenticationPassword:
          pattern: ^.*\S+.*$
          type: string
        hopLimit:
          format: int32
          maximum: 255
          minimum: 1
          type: integer
        announceNextHopSelfEnabled:
          type: boolean
      type: object
    BgpPrefixFilterBean:
      properties:
        filterType:
          description: The type of BGP prefix filter.
          enum:
          - INPUTv4
          - OUTPUTv4
          - INPUTv6
          - OUTPUTv6
          nullable: false
          type: string
        action:
          description: The action to take on the filtered prefixes.
          enum:
          - PERMIT
          - DENY
          nullable: false
          type: string
        prefix:
          description: The IP address prefix to filter.
          example: 192.168.0.0/24
          nullable: false
          type: string
      type: object
    BgpRoutingProtocolBean:
      allOf:
      - $ref: '#/components/schemas/RoutingProtocolBean'
      - properties:
          autonomousSystemNumber:
            format: int64
            maximum: 4294967295
            minimum: 1
            nullable: false
            type: integer
          routerId:
            type: string
          commandLineInterfaceEnabled:
            nullable: false
            type: boolean
          commandLineInterfacePassword:
            type: string
          keepAliveInterval:
            nullable: false
            type: string
          holdTimeInterval:
            nullable: false
            type: string
          neighbors:
            items:
              $ref: '#/components/schemas/BgpNeighborBean'
            minItems: 1
            type: array
          prefixFilters:
            items:
              $ref: '#/components/schemas/BgpPrefixFilterBean'
            nullable: false
            type: array
        type: object
      type: object
    ContainerMountPointBean:
      description: The directories to bind mount to the Gateway container.
      properties:
        source:
          description: The DNS/DHCP Server directory that is bind mounted to the container.
          pattern: ^.*\S+.*$
          type: string
        containerPath:
          description: The container directory that is mapped to the DNS/DHCP Server
            directory.
          pattern: ^.*\S+.*$
          type: string
      type: object
    ContainerPortMappingBean:
      description: The list of ports to map between the DNS/DHCP Server service host
        and the Gateway container.
      properties:
        hostPort:
          description: The DNS/DHCP Server port that is mapped to the container port.
          format: int32
          maximum: 65535
          minimum: 1
          nullable: false
          type: integer
        containerPort:
          description: The host container port that is mapped to the DNS/DHCP Server
            port.
          format: int32
          maximum: 65535
          minimum: 1
          nullable: false
          type: integer
      type: object
    DHCPActivityService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPActivityService
            nullable: false
            type: string
          enabled:
            description: Indicates whether the health telemetry service is enabled.
            nullable: false
            type: boolean
          maximumBufferedEvents:
            description: The maximum number of events to be stored in the memory buffer
            format: int64
            maximum: 101588000
            minimum: 1
            nullable: false
            type: integer
          destination:
            $ref: '#/components/schemas/SinkBean'
          dhcpv4Enabled:
            nullable: false
            type: boolean
          dhcpv6Enabled:
            nullable: false
            type: boolean
        type: object
      type: object
    DHCPStatisticsService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPStatisticsService
            nullable: false
            type: string
          enabled:
            description: Indicates whether the health telemetry service is enabled.
            nullable: false
            type: boolean
          maximumBufferedEvents:
            description: The maximum number of events to be stored in the memory buffer
            format: int64
            maximum: 188235000
            minimum: 1
            nullable: false
            type: integer
          destination:
            $ref: '#/components/schemas/SinkBean'
          dhcpv4Enabled:
            nullable: false
            type: boolean
          dhcpv6Enabled:
            nullable: false
            type: boolean
        type: object
      type: object
    DNSActivityService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - DNSActivityService
            nullable: false
            type: string
          enabled:
            description: Indicates whether the health telemetry service is enabled.
            nullable: false
            type: boolean
          maximumBufferedEvents:
            description: The maximum number of events to be stored in the memory buffer
            format: int64
            maximum: 64000000
            minimum: 1
            nullable: false
            type: integer
          destination:
            $ref: '#/components/schemas/SinkBean'
          filters:
            items:
              $ref: '#/components/schemas/DnsActivityFilterBean'
            nullable: false
            type: array
        type: object
      type: object
    DNSResolverService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - DNSResolverService
            nullable: false
            type: string
          servers:
            description: The list of IP addresses of DNS resolvers.
            items:
              description: The list of IP addresses of DNS resolvers.
              type: string
            nullable: false
            type: array
        type: object
      type: object
    DNSStatisticsService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - DNSStatisticsService
            nullable: false
            type: string
          enabled:
            description: Indicates whether the health telemetry service is enabled.
            nullable: false
            type: boolean
          maximumBufferedEvents:
            description: The maximum number of events to be stored in the memory buffer
            format: int64
            maximum: 36436000
            minimum: 1
            nullable: false
            type: integer
          destination:
            $ref: '#/components/schemas/SinkBean'
          pollingInterval:
            nullable: false
            type: string
        type: object
      type: object
    DnsActivityDomainNameFilterBean:
      allOf:
      - $ref: '#/components/schemas/DnsActivityFilterBean'
      - properties:
          value:
            description: The pattern that matches domain names to exclude
            example: '*-host.example.com'
            nullable: false
            type: string
        type: object
      type: object
    DnsActivityFilterBean:
      discriminator:
        propertyName: category
      properties:
        category:
          description: The category of DNS events to exclude from logging
          enum:
          - DOMAIN_NAME
          - QUERY
          - RESPONSE
          - SOURCE_ADDRESS
          nullable: false
          type: string
      type: object
    DnsActivityQueryFilterBean:
      allOf:
      - $ref: '#/components/schemas/DnsActivityFilterBean'
      - properties:
          value:
            description: The DNS message type that is excluded
            enum:
            - ALL
            - CLIENT
            - AUTH
            - RESOLVER
            - FORWARDER
            - UPDATE
            nullable: false
            type: string
        type: object
      type: object
    DnsActivityResponseFilterBean:
      allOf:
      - $ref: '#/components/schemas/DnsActivityFilterBean'
      - properties:
          value:
            description: The DNS message type that is excluded
            enum:
            - ALL
            - CLIENT
            - AUTH
            - RESOLVER
            - FORWARDER
            - UPDATE
            nullable: false
            type: string
        type: object
      type: object
    DnsActivitySourceAddressFilterBean:
      allOf:
      - $ref: '#/components/schemas/DnsActivityFilterBean'
      - properties:
          value:
            description: The IPv4 or IPv6 block to be excluded from being logged
            example: 192.0.2.0/24
            nullable: false
            type: string
        type: object
      type: object
    ElasticsearchSinkBean:
      allOf:
      - $ref: '#/components/schemas/SinkBean'
      - properties:
          url:
            nullable: false
            type: string
          index:
            pattern: ^.*\S+.*$
            type: string
          username:
            pattern: ^.*\S+.*$
            type: string
          password:
            pattern: ^.*\S+.*$
            type: string
        type: object
      type: object
    FirewallService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - FirewallService
            nullable: false
            type: string
          enabled:
            description: Indicates whether the firewall service is enabled.
            nullable: false
            type: boolean
          pingAllowed:
            description: Indicates whether the server responds to the ping command.
            nullable: false
            type: boolean
        type: object
      type: object
    GatewayContainerBean:
      description: The Gateway container deployed to the DNS/DHCP Server.
      properties:
        name:
          description: The name of the Gateway instance deployed to the DNS/DHCP Server.
          readOnly: true
          type: string
        image:
          description: The Gateway image deployed on the DNS/DHCP Server.
          pattern: ^.*\S+.*$
          type: string
        environmentVariables:
          description: The environment variables to set for the container during startup.
          items:
            $ref: '#/components/schemas/NameValuePairBean'
          minItems: 1
          type: array
        portMappings:
          description: The list of ports to map between the DNS/DHCP Server service
            host and the Gateway container.
          items:
            $ref: '#/components/schemas/ContainerPortMappingBean'
          minItems: 1
          type: array
        mountPoints:
          description: The directories to bind mount to the Gateway container.
          items:
            $ref: '#/components/schemas/ContainerMountPointBean'
          minItems: 1
          type: array
      type: object
    GatewayService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - GatewayService
            nullable: false
            type: string
          enabled:
            description: Indicates whether the Gateway service is enabled.
            nullable: false
            type: boolean
          state:
            description: The status of the Gateway service running on the DNS/DHCP
              Server.
            enum:
            - RUNNING
            - STOPPED
            - DISABLED
            - UNKNOWN
            type: string
          container:
            $ref: '#/components/schemas/GatewayContainerBean'
          repositoryUsername:
            description: The docker username used to pull the Gateway image from the
              container repository.
            pattern: ^.*\S+.*$
            type: string
          repositoryPassword:
            description: The docker password used to pull the image from a private
              repository.
            pattern: ^.*\S+.*$
            type: string
          deleteImageOnDisable:
            description: Indicates whether the Gateway image is removed upon disabling
              the Gateway service.
            type: boolean
          deleteMountPointsOnDisable:
            description: Indicates whether the local volumes and the mounted data
              and log directories are removed upon disabling the Gateway service.
            type: boolean
        type: object
      type: object
    HttpSinkBean:
      allOf:
      - $ref: '#/components/schemas/SinkBean'
      - properties:
          url:
            nullable: false
            type: string
          token:
            pattern: ^.*\S+.*$
            type: string
          healthCheckUrl:
            type: string
        type: object
      type: object
    InterfaceBean:
      properties:
        interfaceType:
          enum:
          - LOOPBACK
          - PHYSICAL
          - VLAN
          - BOND
          nullable: false
          type: string
        name:
          readOnly: true
          type: string
        enabled:
          nullable: false
          type: boolean
        description:
          type: string
        addresses:
          items:
            $ref: '#/components/schemas/IpAddressAndPrefixBean'
          nullable: false
          type: array
        vlanId:
          format: int32
          maximum: 4096
          minimum: 1
          type: integer
        redundancyScenario:
          enum:
          - ACTIVE_BACKUP
          - ACTIVE_ACTIVE
          type: string
      type: object
    InterfacesService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - InterfacesService
            nullable: false
            type: string
          dedicatedManagementEnabled:
            nullable: false
            type: boolean
          interfaces:
            items:
              $ref: '#/components/schemas/InterfaceBean'
            nullable: false
            type: array
          routes:
            items:
              $ref: '#/components/schemas/RouteBean'
            nullable: false
            type: array
        type: object
      type: object
    IpAddressAndPrefixBean:
      properties:
        address:
          nullable: false
          type: string
        prefixLength:
          format: int32
          maximum: 128
          minimum: 0
          nullable: false
          type: integer
        prefix:
          format: int32
          type: integer
          writeOnly: true
      type: object
    KafkaSinkBean:
      allOf:
      - $ref: '#/components/schemas/SinkBean'
      - properties:
          hosts:
            items:
              type: string
            minItems: 1
            type: array
          topic:
            pattern: ^.*\S+.*$
            type: string
          keyField:
            pattern: ^.*\S+.*$
            type: string
        type: object
      type: object
    LicenseService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - LicenseService
            nullable: false
            type: string
          clientId:
            pattern: ^.*\S+.*$
            type: string
          key:
            pattern: ^.*\S+.*$
            type: string
        type: object
      type: object
    NTPService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - NTPService
            nullable: false
            type: string
          enabled:
            description: Indicates whether the NTP service is enabled.
            nullable: false
            type: boolean
          manualOverrideEnabled:
            description: Indicates whether the NTP service configuration has been
              manually overridden.
            readOnly: true
            type: boolean
          servers:
            description: The list of NTP servers to synchronize with.
            items:
              $ref: '#/components/schemas/NtpServerBean'
            nullable: false
            type: array
        type: object
      type: object
    NtpServerBean:
      description: The list of NTP servers to synchronize with.
      properties:
        server:
          description: The FQDN or IP address of the remote NTP server.
          example: 10.10.10.10
          nullable: false
          type: string
        stratum:
          description: "The stratum value for the NTP server. The value will be associated\
            \ to an individual NTP server. Stratum values indicate the hierarchy level\
            \ for the NTP server, which is the number of servers to a reference clock\
            \ used to avoid synchronization loops by preferring servers with a lower\
            \ stratum."
          example: 2
          format: int32
          maximum: 15
          minimum: 1
          type: integer
      type: object
    OspfRoutingProtocolBean:
      allOf:
      - $ref: '#/components/schemas/RoutingProtocolBean'
      - properties:
          authenticationEnabled:
            description: Indicates whether authentication is enabled.
            nullable: false
            type: boolean
          authenticationPassword:
            description: The password for authentication.
            example: P@ssw0rd
            pattern: ^.*\S+.*$
            type: string
          authenticationKey:
            description: The authentication key used for OSPF. The authentication
              key is used to compute the MD5 hash that is used to authenticate OSPF
              packets.
            example: 0SPFauthKey
            pattern: ^.*\S+.*$
            type: string
          deadInterval:
            description: The length of time that the peer/neighbor router will maintain
              a route to the primary router in the absence of hello messages.
            example: PT1M
            type: string
          helloInterval:
            description: The length of time that the primary router contacts its peer/neighbor
              to indicate that it's still active.
            example: PT20S
            type: string
          areaId:
            description: The OSPF area ID.
            example: 0.0.0.1
            nullable: false
            type: string
          stubArea:
            description: Indicates whether an OSPF subnet is used.
            nullable: false
            type: boolean
          password:
            type: string
            writeOnly: true
        type: object
      type: object
    QradarServerBean:
      allOf:
      - $ref: '#/components/schemas/SyslogRedirectionServerBean'
      type: object
    RipRoutingProtocolBean:
      allOf:
      - $ref: '#/components/schemas/RoutingProtocolBean'
      - properties:
          authenticationEnabled:
            description: Indicates whether authentication is enabled.
            nullable: false
            type: boolean
          authenticationPassword:
            description: The authentication for authentication.
            pattern: ^.*\S+.*$
            type: string
        type: object
      type: object
    RouteBean:
      properties:
        gateway:
          nullable: false
          type: string
        network:
          type: string
        prefixLength:
          format: int32
          maximum: 128
          minimum: 0
          nullable: false
          type: integer
      type: object
    RoutingProtocolBean:
      discriminator:
        propertyName: protocol
      properties:
        protocol:
          description: The Anycast routing protocol.
          enum:
          - OSPF
          - RIP
          - BGP
          nullable: false
          type: string
      type: object
    SNMPService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - SNMPService
            nullable: false
            type: string
          enabled:
            description: Indicates whether the SNMP service is enabled.
            nullable: false
            type: boolean
          manualOverrideEnabled:
            description: Indicates whether the SNMP service configuration has been
              manually overridden.
            readOnly: true
            type: boolean
          contactName:
            description: The system name to be reported through SNMP.
            example: BlueCat
            pattern: ^.*\S+.*$
            type: string
          contactEmail:
            description: The email address for the system contact to be reported through
              SNMP.
            example: admin@examplecorp.com
            pattern: ^.*\S+.*$
            type: string
          location:
            description: The description of the system's location to be reported through
              SNMP.
            example: Toronto Office
            pattern: ^.*\S+.*$
            type: string
          description:
            description: The description of the system to be reported through SNMP.
            example: IT department
            pattern: ^.*\S+.*$
            type: string
          pollingInterval:
            description: "The SNMP polling interval, in ISO 8601 duration format,\
              \ that determines the frequency that SNMP values are refreshed on the\
              \ system."
            example: PT30S
            type: string
          logLevel:
            description: The logging level for SNMP events.
            enum:
            - CRITICAL
            - ERROR
            - WARNING
            - INFO
            - DEBUG
            nullable: false
            type: string
          snmpv1:
            $ref: '#/components/schemas/Snmpv1Bean'
          snmpv2c:
            $ref: '#/components/schemas/Snmpv2cBean'
          snmpv3:
            $ref: '#/components/schemas/Snmpv3Bean'
          trapServers:
            items:
              $ref: '#/components/schemas/SnmpTrapServerBean'
            nullable: false
            type: array
        type: object
      type: object
    SSHService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - SSHService
            nullable: false
            type: string
          enabled:
            description: Indicates whether the SSH service is enabled.
            nullable: false
            type: boolean
          tacacsPlusAuthentication:
            $ref: '#/components/schemas/TacacsPlusAuthenticationBean'
        type: object
      type: object
    Service:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        serverVersion:
          readOnly: true
          type: string
      type: object
    SinkBean:
      discriminator:
        propertyName: sinkType
      properties:
        sinkType:
          description: The output sink type.
          enum:
          - ELASTICSEARCH
          - HTTP
          - KAFKA
          - SPLUNK
          nullable: false
          type: string
        healthCheckEnabled:
          description: Indicates whether health check service is enabled on the downstream
            sink server.
          nullable: false
          type: boolean
        caCertificate:
          description: The CA certificate used to authenticate with the remote host.
          type: string
        certificateVerificationEnabled:
          description: Indicates whether the server attempts a TLS handshake using
            the uploaded CA certificate with the remote host's TLS server certificate.
          nullable: false
          type: boolean
        hostnameVerificationEnabled:
          description: Indicates whether the server validates the hostname part of
            the URI against the CN (Common Name) or SAN (Subject Alternative Name)
            of the server certificate during the TLS handshake.
          nullable: false
          type: boolean
      type: object
    SnmpTrapServerBean:
      properties:
        enabled:
          description: Indicates whether the SNMP trap server is enabled.
          nullable: false
          type: boolean
        address:
          description: The IP address of the SNMP trap server.
          example: 10.10.10.10
          nullable: false
          type: string
        port:
          description: The SNMP trap server port.
          example: 334
          format: int32
          maximum: 65536
          minimum: 1
          nullable: false
          type: integer
        snmp:
          $ref: '#/components/schemas/SnmpBean'
      type: object
    SplunkSinkBean:
      allOf:
      - $ref: '#/components/schemas/SinkBean'
      - properties:
          url:
            description: The URI of the Splunk HEC host.
            example: https://10.10.10.10:8432
            nullable: false
            type: string
          token:
            description: The Splunk HEC token.
            example: ABCD0123-4567-890A-BCDE-F0123456789A
            pattern: ^.*\S+.*$
            type: string
        type: object
      type: object
    SyslogRedirectionServerBean:
      description: The list of servers to redirect syslog messages to.
      discriminator:
        propertyName: serverType
      properties:
        serverType:
          description: The syslog redirection server type.
          enum:
          - SYSLOG
          - ARC_SIGHT
          - QRADAR
          nullable: false
          type: string
        address:
          description: The IP address of the syslog server.
          nullable: false
          type: string
      type: object
    SyslogServerBean:
      allOf:
      - $ref: '#/components/schemas/SyslogRedirectionServerBean'
      - properties:
          port:
            description: The port used to connect to the syslog server.
            format: int32
            maximum: 65535
            minimum: 0
            nullable: false
            type: integer
          syslogProtocol:
            description: The syslog protocol used to format syslog messages.
            enum:
            - RFC_5424
            - RFC_3164
            type: string
          severityLevel:
            description: The severity level of messages that are sent to the syslog
              server.
            enum:
            - EMERGENCY
            - ALERT
            - CRITICAL
            - ERROR
            - WARNING
            - NOTICE
            - INFORMATIONAL
            nullable: false
            type: string
          transport:
            $ref: '#/components/schemas/SyslogTransportBean'
          iso8601TimestampsEnabled:
            description: Indicates whether the ISO 8601 timestamp format is used for
              syslog messages.
            type: boolean
          serviceTypes:
            description: The services for which syslog messages are generated.
            items:
              description: The services for which syslog messages are generated.
              enum:
              - DNS
              - DHCP
              - APIV1
              - RESTV2
              - OTHERS
              type: string
            minItems: 1
            type: array
        type: object
      type: object
    SyslogService:
      allOf:
      - $ref: '#/components/schemas/Service'
      - properties:
          type:
            description: The resource type.
            enum:
            - SyslogService
            nullable: false
            type: string
          manualOverrideEnabled:
            description: Indicates whether the syslog redirection service configuration
              has been manually overridden.
            readOnly: true
            type: boolean
          iso8601TimestampsEnabled:
            description: Indicates whether the ISO 8601 date time format is used when
              logging timestamps.
            type: boolean
          servers:
            description: The list of servers to redirect syslog messages to.
            items:
              $ref: '#/components/schemas/SyslogRedirectionServerBean'
            nullable: false
            type: array
        type: object
      type: object
    SyslogTransportBean:
      description: The transport settings used to connect to the syslog server.
      discriminator:
        propertyName: protocol
      properties:
        protocol:
          description: The syslog transport protocol.
          enum:
          - UDP
          - TCP
          - TLS
          nullable: false
          type: string
      type: object
    TacacsGroupBean:
      properties:
        name:
          description: The name of the TACACS+ group.
          example: global
          pattern: ^.*\S+.*$
          type: string
        executables:
          items:
            description: The path to a command that is granted to the TACACS+ group.
            example: /usr/bin/tail
            type: string
          nullable: false
          type: array
      type: object
    TacacsPlusAuthenticationBean:
      properties:
        enabled:
          description: Indicates whether TACACS+ authentication is enabled.
          nullable: false
          type: boolean
        server:
          description: The hostname or IP address of the TACACS+ server used for authentication.
          example: host1.example.com
          type: string
        sharedSecret:
          description: The shared secret used to encrypt and decrypt the patckets
            between the client and the server.
          example: Shar3dS3cret!
          pattern: ^.*\S+.*$
          type: string
        users:
          items:
            $ref: '#/components/schemas/TacacsUserBean'
          nullable: false
          type: array
        groups:
          items:
            $ref: '#/components/schemas/TacacsGroupBean'
          nullable: false
          type: array
      type: object
    TacacsUserBean:
      properties:
        name:
          description: The name of the TACACS+ user.
          example: user1
          pattern: ^.*\S+.*$
          type: string
        memberOf:
          description: The name of the TACACS+ group that the user is a member of.
          example: global
          pattern: ^.*\S+.*$
          type: string
        executables:
          items:
            description: The path to a command that is granted to the TACACS+ user.
            example: /usr/bin/tail
            type: string
          nullable: false
          type: array
      type: object
    TcpSyslogTransportBean:
      allOf:
      - $ref: '#/components/schemas/SyslogTransportBean'
      type: object
    TlsSyslogTransportBean:
      allOf:
      - $ref: '#/components/schemas/SyslogTransportBean'
      - properties:
          peerVerify:
            enum:
            - REQUIRED_TRUSTED
            - REQUIRED_UNTRUSTED
            - OPTIONAL_TRUSTED
            - OPTIONAL_UNTRUSTED
            nullable: false
            type: string
          caCertificate:
            type: string
          certificate:
            type: string
          privateKey:
            type: string
        type: object
      type: object
    UdpSyslogTransportBean:
      allOf:
      - $ref: '#/components/schemas/SyslogTransportBean'
      type: object
    UserSession:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - UserSession
          type: string
        username:
          description: The username used to initiate the session.
          example: admin
          pattern: ^.*\S+.*$
          type: string
          writeOnly: true
        password:
          description: The associated password for the username used to initiate the
            session.
          example: password
          pattern: ^.*\S+.*$
          type: string
          writeOnly: true
        apiToken:
          description: The API token of the user session.
          example: VZoO2Z0BjBaJyvuhE4vNJRWqI9upwDHk70UNi0Ez
          readOnly: true
          type: string
        apiTokenExpirationDateTime:
          description: The timestamp of the API token expiration.
          example: 2022-09-15T17:52:07Z
          format: date-time
          readOnly: true
          type: string
        remoteAddress:
          description: The IP address of the device that initiated the user session.
          example: 192.168.1.1
          readOnly: true
          type: string
        readOnly:
          description: "Indicates whether the initiated session is a read-only session.\
            \ When database replication is configured between Address Manager servers,\
            \ you can initiate a read-only session to call API methods with read-only\
            \ support and retrieve information from the Secondary or Tertiary Address\
            \ Manager server."
          type: boolean
        loginDateTime:
          description: A timestamp of when the session was initiated.
          example: 2022-09-14T17:45:03Z
          format: date-time
          readOnly: true
          type: string
        logoutDateTime:
          description: A timestamp of when the session was terminated.
          example: 2022-09-14T19:45:03Z
          format: date-time
          readOnly: true
          type: string
        state:
          description: The state of the user session.
          enum:
          - LOGGED_IN
          - LOGGED_OUT
          - TIMED_OUT
          - EXPIRED
          - LOGIN_FAIL
          - TERMINATED
          type: string
        response:
          description: The response from the authenticated user session.
          example: "Authentication Error: Ensure that your username and password are\
            \ correct."
          type: string
        user:
          $ref: '#/components/schemas/User'
        authenticator:
          $ref: '#/components/schemas/Authenticator'
      type: object
    AddressManagerMonitoringBean:
      description: The Address Manager monitoring service settings.
      properties:
        enabled:
          description: Indicates whether Address Manager monitoring service is enabled.
          nullable: false
          type: boolean
        address:
          description: The IP address or fully-qualified domain name of the monitoring
            server.
          type: string
        pollingInterval:
          description: The time between polls performed by the monitoring service
            to Address Manager.
          nullable: false
          type: string
        snmp:
          $ref: '#/components/schemas/SnmpBean'
      type: object
    AuditDataSettings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - properties:
          type:
            description: The resource type.
            enum:
            - AuditDataSettings
            nullable: false
            type: string
          administrativeHistoryRetentionPeriod:
            description: The number of days to retain the administrative history records.
              A null retention period indicates that the data will be retained indefinitely.
            example: PT360H
            type: string
          sessionAndEventsRetentionPeriod:
            description: The number of days to retain the session and event history
              records. A null retention period indicates that the data will be retained
              indefinitely.
            example: PT360H
            type: string
          dhcpTransactionRetentionPeriod:
            description: The number of days to retain the DHCP transaction history
              records. A null retention period indicates that the data will be retained
              indefinitely. A retention period of 0 seconds indicates that the data
              wil not be retained.
            example: PT360H
            type: string
          ddnsTransactionRetentionPeriod:
            description: The number of days to retain the DDNS transaction history
              records. A null retention period indicates that the data will be retained
              indefinitely. A retention period of 0 seconds indicates that the data
              wil not be retained.
            example: PT360H
            type: string
          exportEnabled:
            description: Indicates if the audit data export service is enabled.
            nullable: false
            type: boolean
          destination:
            $ref: '#/components/schemas/SinkBean'
        type: object
      type: object
    F5ServerMonitoringBean:
      description: The BIG-IP DNS/LTM monitoring service settings.
      properties:
        enabled:
          description: Indicates whether BIG-IP DNS/LTM monitoring service is enabled.
          nullable: false
          type: boolean
        pollingInterval:
          description: The time between polls performed by the monitoring service
            to the BIG-IP DNS/LTM server.
          nullable: false
          type: string
      type: object
    GlobalSettings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - properties:
          type:
            description: The resource type.
            enum:
            - GlobalSettings
            nullable: false
            type: string
          mandatoryCommentsEnabled:
            description: "Indicates whether users must provide a change control comment\
              \ when creating, editing, or deleting resources."
            nullable: false
            type: boolean
          rememberLastAddressEnabled:
            description: Indicates whether the Address Manager UI Quick Actions widget
              will automatically provide the subsequent IPv4 address when adding host
              records.
            nullable: false
            type: boolean
          sessionTimeout:
            description: The maximum time period of user inactivity before a session
              is terminated.
            example: PT20M
            nullable: false
            type: string
          disclaimerEnabled:
            description: Indicates whether a disclaimer will display on the Address
              Manager UI login page with the contents of disclaimerText.
            nullable: false
            type: boolean
          disclaimerText:
            description: "The disclaimer text or HTML for display on the Address Manager\
              \ UI login page. If adding or editing disclaimer HTML through JSON,\
              \ ensure that reserved characters are escaped."
            example: Example UI disclaimer message.
            pattern: ^.*\S+.*$
            type: string
          customReverseZoneFormatsAllowed:
            description: Indicates whether users can set a custom reverse zone name
              format in DNS deployment options.
            nullable: false
            type: boolean
        type: object
      type: object
    LogLevelSettings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - properties:
          type:
            description: The resource type.
            enum:
            - LogLevelSettings
            nullable: false
            type: string
          addressManager:
            enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
            nullable: false
            type: string
          restV2:
            enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
            nullable: false
            type: string
          zoneImport:
            enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
            nullable: false
            type: string
          reconciliationService:
            enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
            nullable: false
            type: string
          discoveryEngine:
            enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
            nullable: false
            type: string
          snmpClient:
            enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
            nullable: false
            type: string
          monitoringService:
            enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
            nullable: false
            type: string
          rrdTool:
            enum:
            - "OFF"
            - FATAL
            - ERROR
            - WARN
            - INFO
            - DEBUG
            - TRACE
            - ALL
            nullable: false
            type: string
        type: object
      type: object
    LoginPolicySettings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - properties:
          type:
            description: The resource type.
            enum:
            - LoginPolicySettings
            nullable: false
            type: string
          enabled:
            description: Indicates whether a custom login policy is enabled.
            nullable: false
            type: boolean
          failureLimit:
            description: The limit for consecutive failed login attempts that results
              in a login delay.
            format: int32
            maximum: 100
            minimum: 1
            nullable: false
            type: integer
          failureLimitPeriod:
            description: The timespan in which consecutive failed login attempts count
              towards the failure limit.
            nullable: false
            type: string
          delayDuration:
            description: The amount of time that a user must wait before they can
              attempt to log in after exceeding the login policy failure conditions.
            nullable: false
            type: string
        type: object
      type: object
    MonitoringSettings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - properties:
          type:
            description: The resource type.
            enum:
            - MonitoringSettings
            nullable: false
            type: string
          addressManagerMonitoring:
            $ref: '#/components/schemas/AddressManagerMonitoringBean'
          serverMonitoring:
            $ref: '#/components/schemas/ServerMonitoringBean'
          f5ServerMonitoring:
            $ref: '#/components/schemas/F5ServerMonitoringBean'
        type: object
      type: object
    PasswordPolicySettings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - properties:
          type:
            description: The resource type.
            enum:
            - PasswordPolicySettings
            nullable: false
            type: string
          enabled:
            description: Indicates whether a custom password policy is enabled.
            nullable: false
            type: boolean
          minLength:
            description: The minimum length that the password must be.
            example: 8
            format: int32
            minimum: 1
            type: integer
          maxLength:
            description: The maximum length that the password can be.
            example: 32
            format: int32
            minimum: 1
            type: integer
          digitRequired:
            description: Indicates whether the password must contain at least one
              digit.
            nullable: false
            type: boolean
          mixedCaseRequired:
            description: Indicates whether the password must contain mixed case letters.
            nullable: false
            type: boolean
          specialCharacterRequired:
            description: Indicates whether the password must contain at least one
              special character.
            nullable: false
            type: boolean
        type: object
      type: object
    SAMLServiceProviderSettings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - properties:
          type:
            description: The resource type.
            enum:
            - SAMLServiceProviderSettings
            nullable: false
            type: string
          addressManagerFqdn:
            description: The fully qualified domain name of the Address Manager server.
            example: example.com
            nullable: false
            type: string
          metadataUrl:
            description: The identifier of the service provider entity.
            example: https://example.com/sso/metadata
            readOnly: true
            type: string
          consumeUrl:
            description: The URL location where the response from the IdP will be
              returned to the service provider.
            example: https://example.com/sso/consume
            readOnly: true
            type: string
          logoutUrl:
            description: The URL location where the logout response message will be
              returned to the service provider.
            example: https://example.com/sso/logout
            readOnly: true
            type: string
          nameIdFormat:
            description: The specified constraints on the name identifier format used
              to represent the requested subject.
            enum:
            - UNSPECIFIED
            - EMAIL_ADDRESS
            - ENTITY
            - TRANSIENT
            - PERSISTENT
            - ENCRYPTED
            - X509_SUBJECTNAME
            - WIN_QUALIFIED_NAME
            - KERBEROS
            nullable: false
            type: string
          signingEnabled:
            description: Indicates whether the message sent by the service provider
              will be signed.
            nullable: false
            type: boolean
          encryptionEnabled:
            description: Indicates the requirement for assertions received by the
              service provider to be encrypted.
            nullable: false
            type: boolean
          pkcs12:
            pattern: ^.*\S+.*$
            type: string
            writeOnly: true
          password:
            pattern: ^.*\S+.*$
            type: string
            writeOnly: true
          organizationName:
            description: The organization associated with the service provider.
            example: Example Org.
            pattern: ^.*\S+.*$
            type: string
          organizationUrl:
            description: The website URL for the organization associated with the
              service provider.
            example: en.example.org
            pattern: ^.*\S+.*$
            type: string
          contactName:
            description: The name of the contact for the organization associated with
              the service provider.
            example: Example Org Support
            type: string
          contactEmail:
            description: The contact email for the organization associated with the
              service provider.
            example: support@example.org
            type: string
        type: object
      type: object
    SSOEnforcementSettings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - properties:
          type:
            description: The resource type.
            enum:
            - SSOEnforcementSettings
            nullable: false
            type: string
          enabled:
            nullable: false
            type: boolean
          samlIdentityProviderEnabled:
            readOnly: true
            type: boolean
          nonSsoAuthenticatorCount:
            format: int32
            readOnly: true
            type: integer
          nonSsoGroupCount:
            format: int32
            readOnly: true
            type: integer
          localAdminUserCount:
            format: int32
            readOnly: true
            type: integer
          localNonAdminUserCount:
            format: int32
            readOnly: true
            type: integer
        type: object
      type: object
    ServerMonitoringBean:
      description: The DNS/DHCP Server monitoring service settings.
      properties:
        enabled:
          description: Indicates whether DNS/DHCP Server monitoring service is enabled.
          nullable: false
          type: boolean
        pollingInterval:
          description: The time between polls performed by the monitoring service
            to the DNS/DHCP Server.
          nullable: false
          type: string
        statusRefreshInterval:
          description: The interval at which Address Manager updates monitoring information
            in the Address Manager user interface.
          nullable: false
          type: string
        failureDetectionThreshold:
          description: The number of consecutive failures permitted before a problem
            affects the monitoring statistics.
          format: int64
          maximum: 2147483647
          minimum: 1
          nullable: false
          type: integer
      type: object
    Settings:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
      type: object
    SystemSettings:
      allOf:
      - $ref: '#/components/schemas/Settings'
      - properties:
          type:
            description: The resource type.
            enum:
            - SystemSettings
            nullable: false
            type: string
          hostname:
            description: The hostname of the Address Manager server.
            example: new
            readOnly: true
            type: string
          version:
            description: The Address Manager server version.
            example: 9.5.0-500.GA.bcn
            readOnly: true
            type: string
          address:
            description: The management IP address of the Address Manager server.
            example: 192.168.1.2
            readOnly: true
            type: string
          interfaceRedundancyEnabled:
            description: Indicates whether Address Manager Active/Backup (eth0/eth1)
              bonding mode is active.
            nullable: false
            type: boolean
          activeSessions:
            description: The current number of active Address Manager sessions.
            example: 2
            format: int32
            readOnly: true
            type: integer
        type: object
      type: object
    KeySigningKey:
      allOf:
      - $ref: '#/components/schemas/SigningKey'
      - properties:
          type:
            description: The resource type.
            enum:
            - KeySigningKey
            nullable: false
            type: string
          algorithm:
            description: The algorithm used to sign the key.
            enum:
            - ECDSAP256SHA256
            - ECDSAP384SHA384
            - ED25519
            - ED448
            - RSAMD5
            - RSANSEC3SHA256
            - RSANSEC3SHA512
            - RSASHA1
            - RSASHA1NSEC3SHA1
            - RSASHA256
            - RSASHA512
            type: string
          keyStartDateTime:
            description: The date and time for the beginning of the key's validity
              period.
            example: 2023-01-06T16:34:49.797Z
            format: date-time
            type: string
          keyExpirationDateTime:
            description: The date and time at which the key expires.
            example: 2023-07-06T16:34:49.797Z
            format: date-time
            type: string
          ttl:
            description: The TTL (time to live) for the key if an override TTL is
              specified when the key is created.
            example: 2023-07-06T16:34:49.797Z
            type: string
          keyTag:
            description: The key tag value for the key. The key tag is used during
              DNSSEC validation and when signing and re-signing zones.
            example: 55071
            format: int32
            type: integer
          publicKey:
            description: The public key text.
            example: 256 3 5 AwEAAa4vLiQZyucs+bbOGqrT+oqjc2xiJR/ODJtze3Vp1B27M2DWZjs7yOgLcSMNVQm7m
            type: string
          flags:
            description: The flag used to verify the DNS record signature for resource
              records.
            example: 257
            format: int32
            type: integer
        type: object
      type: object
    SigningKey:
      description: The TSIG key used to sign DDNS updates.
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - SigningKey
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        length:
          description: "The key length, in bits."
          example: 1024
          format: int32
          type: integer
        state:
          description: The state of the key.
          enum:
          - GENERATED
          - NOT_GENERATED
          - REGENERATE
          type: string
        keyGenerationDateTime:
          description: The date and time that they key was generated.
          example: 2023-01-06T16:34:49.797Z
          format: date-time
          readOnly: true
          type: string
        privateKey:
          description: The private key.
          type: string
      type: object
    TSIGKey:
      allOf:
      - $ref: '#/components/schemas/SigningKey'
      - properties:
          type:
            description: The resource type.
            enum:
            - TSIGKey
            nullable: false
            type: string
          name:
            description: The name of the resource.
            example: name
            pattern: ^.*\S+.*$
            type: string
          length:
            description: "The key length, in bits."
            example: 1024
            format: int32
            nullable: false
            type: integer
          algorithm:
            description: The algorithm used to sign the key.
            enum:
            - MD5
            - SHA1
            - SHA256
            - SHA512
            nullable: false
            type: string
        type: object
      type: object
    ZoneSigningKey:
      allOf:
      - $ref: '#/components/schemas/SigningKey'
      - properties:
          type:
            description: The resource type.
            enum:
            - ZoneSigningKey
            nullable: false
            type: string
          algorithm:
            description: The algorithm used to sign the key.
            enum:
            - ECDSAP256SHA256
            - ECDSAP384SHA384
            - ED25519
            - ED448
            - RSAMD5
            - RSANSEC3SHA256
            - RSANSEC3SHA512
            - RSASHA1
            - RSASHA1NSEC3SHA1
            - RSASHA256
            - RSASHA512
            type: string
          keyStartDateTime:
            description: The date and time for the beginning of the key's validity
              period.
            example: 2023-01-06T16:34:49.797Z
            format: date-time
            type: string
          keyExpirationDateTime:
            description: The date and time at which the key expires.
            example: 2023-07-06T16:34:49.797Z
            format: date-time
            type: string
          ttl:
            description: The TTL (time to live) for the key if an override TTL is
              specified when the key is created.
            example: 2023-07-06T16:34:49.797Z
            type: string
          keyTag:
            description: The key tag value for the key. The key tag is used during
              DNSSEC validation and when signing and re-signing zones.
            example: 55071
            format: int32
            type: integer
          publicKey:
            description: The public key text.
            example: 256 3 5 AwEAAa4vLiQZyucs+bbOGqrT+oqjc2xiJR/ODJtze3Vp1B27M2DWZjs7yOgLcSMNVQm7m
            type: string
          flags:
            description: The flag used to verify the DNS record signature for resource
              records.
            example: 257
            format: int32
            type: integer
        type: object
      type: object
    IPv4BlockSplit:
      allOf:
      - $ref: '#/components/schemas/Split'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4BlockSplit
            nullable: false
            type: string
          block:
            $ref: '#/components/schemas/InlinedIPv4Block'
          splitPointAddress:
            description: The IP address of the point at which you would like to split
              the block.
            type: string
        type: object
      type: object
    IPv4NetworkSplit:
      allOf:
      - $ref: '#/components/schemas/Split'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4NetworkSplit
            nullable: false
            type: string
          network:
            $ref: '#/components/schemas/InlinedIPv4Network'
          networkCount:
            description: The number of resultant sub-networks after the split.
            format: int32
            maximum: 1024
            minimum: 2
            nullable: false
            type: integer
          gatewayPreserved:
            description: Indicates whether the gateway address of the original network
              is kept.
            type: boolean
            writeOnly: true
          defaultGatewayAssigned:
            description: Indicates whether the first IP address after the network
              ID is assigned as the default gateway address.
            type: boolean
            writeOnly: true
          conflictResolutionStrategy:
            description: The method used to resolve conflicts between template items
              and the resource the template is applied to.
            enum:
            - USE_EXISTING
            - OVERWRITE
            type: string
            writeOnly: true
          template:
            allOf:
            - $ref: '#/components/schemas/InlinedIPv4Template'
            required:
            - id
            writeOnly: true
        type: object
      type: object
    Split:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
      type: object
    DHCPv4Subclass:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DHCPv4Subclass
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        description:
          description: The description for the DHCP subclass value.
          type: string
        value:
          description: The DHCP subclass value.
          pattern: ^.*\S+.*$
          type: string
      type: object
    LinkedTag:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Tag
          type: string
      type: object
    Task:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Task
          type: string
        name:
          description: The name or description for the task.
          example: task1
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        priority:
          description: The priority level of the task.
          enum:
          - ALL
          - LOW
          - NORMAL
          - HIGH
          nullable: false
          type: string
        state:
          description: The current status of the task.
          enum:
          - NOT_STARTED
          - IN_PROGRESS
          - COMPLETED
          - WAITING_FOR_OTHER
          - DEFERRED
          nullable: false
          type: string
        percentComplete:
          description: The current progress percentage of the task.
          format: int32
          maximum: 100
          minimum: 0
          nullable: false
          type: integer
        startDateTime:
          description: The start date for the task.
          example: 2022-01-15T00:00:00Z
          format: date-time
          type: string
        dueDateTime:
          description: The due date for the task.
          example: 2022-01-25T00:00:00Z
          format: date-time
          type: string
        comment:
          description: Custom comments for the task.
          example: A custom comment.
          type: string
      type: object
    IPv4TemplateApplication:
      allOf:
      - $ref: '#/components/schemas/TemplateApplication'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4TemplateApplication
            nullable: false
            type: string
          deploymentOptionsApplied:
            description: Indicates whether deployment options set in the template
              are applied.
            type: boolean
          gatewayItemApplied:
            description: Indicates whether the template settings for the gateway address
              are applied.
            type: boolean
          reservedRangeItemsApplied:
            description: Indicates whether the reserved address ranges set in the
              template are applied.
            type: boolean
          dhcpRangeItemsApplied:
            description: Indicates whether the DHCP reserved address ranges set in
              the template are applied.
            type: boolean
          ipGroupItemsApplied:
            description: Indicates whether the IP groups set in the template are applied.
            type: boolean
          orphanedAddressConversionStrategy:
            description: Determines whether orphaned DHCP allocated IPv4 addresses
              are converted into another assignment type and the type of host record
              assigned to the orphaned record.
            enum:
            - STATIC
            - DHCP_RESERVED
            - UNASSIGNED
            type: string
        type: object
      type: object
    TemplateApplication:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        state:
          description: The state of the template application operation.
          enum:
          - PENDING
          - QUEUED
          - RUNNING
          - CANCELLED
          - CANCELLING
          - COMPLETED
          - COMPLETED_WITH_WARNINGS
          - FAILED
          - UNKNOWN
          readOnly: true
          type: string
        startDateTime:
          description: The date and time that the template application operation started.
          example: 2022-11-15T15:41:34Z
          format: date-time
          readOnly: true
          type: string
        completionDateTime:
          description: The date and time that the template application operation completed.
          example: 2022-11-15T15:41:40Z
          format: date-time
          readOnly: true
          type: string
        conflictResolutionStrategy:
          description: The method used to resolve conflicts between template items
            and the resource the template is applied to.
          enum:
          - USE_EXISTING
          - OVERWRITE
          - ABORT
          type: string
      type: object
    ZoneTemplateApplication:
      allOf:
      - $ref: '#/components/schemas/TemplateApplication'
      - properties:
          type:
            description: The resource type.
            enum:
            - ZoneTemplateApplication
            nullable: false
            type: string
        type: object
      type: object
    IPv4DHCPRangeTemplateItem:
      allOf:
      - $ref: '#/components/schemas/Ipv4TemplateItem'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4DHCPRangeTemplateItem
            nullable: false
            type: string
          rangeDefinitionFormat:
            description: The type of method that will be used to create a DHCP range.
            enum:
            - OFFSET_SIZE_FROM_START
            - OFFSET_SIZE_FROM_END
            - OFFSETS
            - OFFSET_PERCENTAGE_FROM_START
            - OFFSET_PERCENTAGE_FROM_END
            nullable: false
            type: string
          endOffset:
            description: The starting or ending position of the DHCP range.
            example: 10
            format: int64
            maximum: 9223372036854775807
            minimum: 1
            type: integer
          size:
            description: "The size of the DHCP range. When the method is OFFSETS_AND_SIZE,\
              \ the value is the size of the DHCP range. When the method is OFFSETS_AND_PERCENTAGE,\
              \ the value is the size of the DHCP range proportional to the parent\
              \ network size as a percentage."
            example: 20
            format: int64
            maximum: 9223372036854775807
            minimum: 1
            type: integer
          splitAroundStaticAddresses:
            description: "Indicates whether the DHCP range will automatically be split\
              \ around any static, reserved, and gateway addresses in the network\
              \ that are within the DHCP range."
            nullable: false
            type: boolean
        type: object
      type: object
    IPv4GatewayTemplateItem:
      allOf:
      - $ref: '#/components/schemas/Ipv4TemplateItem'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4GatewayTemplateItem
            nullable: false
            type: string
          name:
            description: The name of the template item.
            readOnly: true
            type: string
          rangeDefinitionFormat:
            description: The type of method that will be used to create the gateway
              template.
            enum:
            - OFFSET_SIZE_FROM_START
            - OFFSET_SIZE_FROM_END
            nullable: false
            type: string
        type: object
      type: object
    IPv4GroupTemplateItem:
      allOf:
      - $ref: '#/components/schemas/Ipv4TemplateItem'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4GroupTemplateItem
            nullable: false
            type: string
          name:
            description: The name of the IPv4 group.
            example: Example IPv4 Group
            pattern: ^.*\S+.*$
            type: string
          rangeDefinitionFormat:
            enum:
            - OFFSET_SIZE_FROM_START
            - OFFSET_SIZE_FROM_END
            nullable: false
            type: string
          size:
            format: int64
            maximum: 9223372036854775807
            minimum: 1
            nullable: false
            type: integer
        type: object
      type: object
    IPv4ReservedRangeTemplateItem:
      allOf:
      - $ref: '#/components/schemas/Ipv4TemplateItem'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv4ReservedRangeTemplateItem
            nullable: false
            type: string
          rangeDefinitionFormat:
            description: The method that will be used to create the reserved address
              range of the IPv4 template.
            enum:
            - OFFSET_SIZE_FROM_START
            - OFFSET_SIZE_FROM_END
            nullable: false
            type: string
          size:
            description: The number of addresses in the address block.
            example: 10
            format: int64
            maximum: 9223372036854775807
            minimum: 1
            nullable: false
            type: integer
        type: object
      type: object
    Ipv4TemplateItem:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        startOffset:
          description: The start offset of the IPv4 template item.
          example: 10
          format: int64
          maximum: 9223372036854775807
          minimum: 1
          nullable: false
          type: integer
        name:
          description: The name of the template item.
          type: string
      type: object
    Template:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
      type: object
    ZoneTemplate:
      description: Lists the name of the zone template assigned to the zone.
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ZoneTemplate
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/Configuration'
          readOnly: true
      type: object
    TFTPGroup:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - TFTPGroup
          type: string
        name:
          description: The name of the TFTP group.
          example: TFTP GROUP 1
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
      type: object
    Transaction:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Transaction
          type: string
        transactionType:
          description: The type of transaction performed.
          enum:
          - UNDO
          nullable: false
          type: string
        operation:
          description: The operation performed.
          enum:
          - ADD_AAAA_RECORD
          - ADD_ACCESS_RIGHT
          - ADD_ACL
          - ADD_ADMINISTRATIVE_ACCESS_RIGHTS
          - ADD_ALIAS_RECORD
          - ADD_A_RECORD
          - ADD_CONFIGURATION
          - ADD_CUSTOM_DHCPV4_CLIENT_OPTION
          - ADD_CUSTOM_DHCPV4_CLIENT_OPTION_DEFINITION
          - ADD_DEPLOYMENT_OPTION_VALUE
          - ADD_DEPLOYMENT_SCHEDULER
          - ADD_DEVICE
          - ADD_DEVICE_INSTANCE
          - ADD_DEVICE_SUBTYPE
          - ADD_DEVICE_TYPE
          - ADD_DHCPV4_CLIENT_CLASS
          - ADD_DHCPV4_CLIENT_OPTION
          - ADD_DHCPV4_CLIENT_SUBCLASS
          - ADD_DHCPV4_RAW_OPTION
          - ADD_DHCPV4_SERVICE_OPTION
          - ADD_DHCPV6_CLIENT_OPTION
          - ADD_DHCPV6_RAW_OPTION
          - ADD_DHCPV6_SERVICE_OPTION
          - ADD_DHCP_DEPLOYMENT_ROLE
          - ADD_DHCP_ZONE_GROUP
          - ADD_DNS64
          - ADD_DNSSEC_SIGNING_POLICY
          - ADD_DNS_DEPLOYMENT_ROLE
          - ADD_DNS_OPTION
          - ADD_DNS_RAW_OPTION
          - ADD_E164_ZONE
          - ADD_EXTERNAL_HOST_RECORD
          - ADD_FORWARD_DHCP_ZONE
          - ADD_GENERIC_RECORD
          - ADD_GTM_SERVER
          - ADD_HA_SERVER
          - ADD_HINFO_RECORD
          - ADD_HOST_RECORD
          - ADD_HSM_CONFIGURATION
          - ADD_HSM_SERVER
          - ADD_INTERNAL_ROOT_ZONE
          - ADD_IPV4_BLOCK
          - ADD_IPV4_DHCP_RANGE
          - ADD_IPV4_GROUP
          - ADD_IPV4_NETWORK
          - ADD_IPV4_PARENT
          - ADD_IPV4_RECONCILIATION_POLICY
          - ADD_IPV4_TEMPLATE
          - ADD_IPV6_ADDRESS
          - ADD_IPV6_ADDRESS_HOST
          - ADD_IPV6_DHCP_RANGE
          - ADD_IPV6_GLOBAL_ADDRESS_BLOCK
          - ADD_IPV6_NETWORK
          - ADD_IPV6_PARENT
          - ADD_IPV6_RECONCILIATION_POLICY
          - ADD_IPV6_TEMPLATE
          - ADD_KDC
          - ADD_KERBEROS_AUTHENTICATOR
          - ADD_KERBEROS_REALM
          - ADD_KEY_SIGNING_KEY
          - ADD_LDAP_AUTHENTICATOR
          - ADD_LDAP_GROUP
          - ADD_LOCATION
          - ADD_LTM_SERVER
          - ADD_MAC_ADDRESS
          - ADD_MAC_ADDRESS_TO_MAC_POOL
          - ADD_MAC_POOL
          - ADD_MX_RECORD
          - ADD_NAMING_POLICY
          - ADD_NAMING_POLICY_VALUE_CONNECTOR
          - ADD_NAMING_POLICY_VALUE_INCREMENTAL
          - ADD_NAMING_POLICY_VALUE_INTEGER
          - ADD_NAMING_POLICY_VALUE_REQUIRED
          - ADD_NAMING_POLICY_VALUE_TEXT
          - ADD_NAMING_RESTRICTION
          - ADD_NAPTR_RECORD
          - ADD_NAPTR_RECORD_GROUP
          - ADD_NOTIFICATION_GROUP
          - ADD_OAUTH_SERVER
          - ADD_RADIUS_AUTHENTICATOR
          - ADD_REPORT
          - ADD_REPORT_SCHEDULER
          - ADD_RESOURCE
          - ADD_RESOURCE_COLLECTOR
          - ADD_RESOURCE_LINK
          - ADD_RESPONSE_POLICY
          - ADD_RESPONSE_POLICY_ZONE
          - ADD_REVERSE_DHCP_ZONE
          - ADD_SAML_IDENTITY_PROVIDER
          - ADD_SAML_SERVICE_PROVIDER
          - ADD_SAML_SERVICE_PROVIDER_METADATA
          - ADD_SERVER
          - ADD_SERVER_GROUP
          - ADD_SERVER_NETWORK_INTERFACE
          - ADD_SERVER_PATCH_HISTORY
          - ADD_SERVER_PATCH_INFO
          - ADD_SERVER_PUBLISHED_INTERFACE
          - ADD_SERVER_TO_GTM_SERVER_RESOURCE_POOL
          - ADD_SERVER_TO_LTM_SERVER_RESOURCE_POOL
          - ADD_SERVER_TO_SERVER_GROUP
          - ADD_SERVER_VERSION_HISTORY
          - ADD_SERVER_VIRTUAL_INTERFACE
          - ADD_SERVICE_PRINCIPAL
          - ADD_SRV_RECORD
          - ADD_SSO_GROUP
          - ADD_START_OF_AUTHORITY
          - ADD_TACACSPLUS_AUTHENTICATOR
          - ADD_TACACSPLUS_GROUP
          - ADD_TAG
          - ADD_TAG_GROUP
          - ADD_TAG_LINKS
          - ADD_TASK
          - ADD_TFTP_DEPLOYMENT_ROLE
          - ADD_TFTP_FILE
          - ADD_TFTP_FOLDER
          - ADD_TFTP_GROUP
          - ADD_TSIG_KEY
          - ADD_TXT_RECORD
          - ADD_USER
          - ADD_USERS_TO_GROUPS
          - ADD_USER_DEFINED_FIELD_DEFINITION
          - ADD_USER_DEFINED_LINK_DEFINITION
          - ADD_USER_GROUP
          - ADD_USER_MAC_POOL
          - ADD_VENDOR_CLIENT_OPTION
          - ADD_VENDOR_OPTION_DEFINITION
          - ADD_VENDOR_PROFILE
          - ADD_VIEW
          - ADD_WINDOWS_DHCP_FAILOVER_DEPLOYMENT_ROLE
          - ADD_X509_AUTHENTICATOR
          - ADD_ZONE
          - ADD_ZONE_SIGNING_KEY
          - ADD_ZONE_TEMPLATE
          - APPLY_ADDRESS_MANAGER_UPDATE
          - APPLY_IPV4_TEMPLATE
          - APPLY_NAMING_POLICY
          - APPLY_SIGNING_POLICY
          - APPROVE_ADD_ALIAS_RECORD
          - APPROVE_ADD_HOST_RECORD
          - APPROVE_ADD_IPV4_NETWORK
          - APPROVE_ADD_RESOURCE_RECORD
          - APPROVE_ADD_ZONE
          - APPROVE_ASSIGN_IPV4_ADDRESS
          - APPROVE_ASSIGN_IPV4_ADDRESS_WITH_PTR
          - APPROVE_CHANGE_IPV4_STATE
          - APPROVE_DELETE_RESOURCE
          - APPROVE_RENAME_RESOURCE_RECORD
          - APPROVE_UPDATE_ALIAS_RECORD
          - APPROVE_UPDATE_HOST_RECORD
          - APPROVE_UPDATE_IPV4_ADDRESS
          - APPROVE_UPDATE_IPV4_NETWORK
          - APPROVE_UPDATE_READONLY_IPV4_NETWORK
          - APPROVE_UPDATE_RESOURCE_RECORD
          - APPROVE_UPDATE_ZONE
          - ASSIGN_IPV4_ADDRESS
          - ASSIGN_IPV4_TEMPLATE
          - ASSIGN_IPV6_ADDRESS
          - ASSIGN_NEXT_AVAILABLE_IPV4_ADDRESS
          - BREAK_HA_SERVER
          - BULK_DNS_UPDATE
          - CHANGE_IPV4_ADDRESS_STATE
          - CLEANUP_DHCP_DEPLOYMENT_ROLE
          - CLEANUP_DHCP_SETTINGS
          - CLEANUP_MISMATCHED_RESOURCES
          - CLEAR_IPV6_ADDRESS_ASSIGNMENT
          - CLEAR_SERVER_DNS_CACHE
          - CLEAR_SERVER_DNS_CACHE_DOMAIN_ONLY
          - CLEAR_SERVER_DNS_CACHE_HOSTNAME_ONLY
          - CONFIGURE_ADDRESS_MANAGER_NTP_SERVICE
          - CONFIGURE_ADDRESS_MANAGER_SNMP_SERVICE
          - CONFIGURE_ADDRESS_MANAGER_SYSLOG_SERVICE
          - CONFIGURE_SERVER_ADDITIONAL_IP_ADDRESSES_SERVICE
          - CONFIGURE_SERVER_ANYCAST_SERVICE
          - CONFIGURE_SERVER_COLLECTOR_SERVICE
          - CONFIGURE_SERVER_FIREWALL_SERVICE
          - CONFIGURE_SERVER_NTP_SERVICE
          - CONFIGURE_SERVER_SNMP_SERVICE
          - CONFIGURE_SERVER_SSH_SERVICE
          - CONFIGURE_SERVER_SYSLOG_SERVICE
          - CONNECT_SERVER
          - COPY_RESOURCES
          - DATA_ARCHIVE_OR_PURGE_TASK
          - DELETE_AAAA_RECORD
          - DELETE_ACCESS_RIGHT
          - DELETE_ACL
          - DELETE_ADMINISTRATIVE_ACCESS_RIGHT
          - DELETE_ALIAS_RECORD
          - DELETE_APPROVED_AND_DENIED_WORKFLOW_REQUESTS
          - DELETE_A_RECORD
          - DELETE_COLLECTOR
          - DELETE_CONFIGURATION
          - DELETE_CUSTOM_DHCPV4_CLIENT_OPTION_DEFINITION
          - DELETE_DEPLOYMENT_SCHEDULER
          - DELETE_DEVICE
          - DELETE_DEVICE_INSTANCE
          - DELETE_DEVICE_SUBTYPE
          - DELETE_DEVICE_TYPE
          - DELETE_DHCPV4_CLIENT_CLASS
          - DELETE_DHCPV4_CLIENT_OPTION
          - DELETE_DHCPV4_CLIENT_SUBCLASS
          - DELETE_DHCPV4_RAW_OPTION
          - DELETE_DHCPV4_SERVICE_OPTION
          - DELETE_DHCPV6_CLIENT_OPTION
          - DELETE_DHCPV6_RAW_OPTION
          - DELETE_DHCPV6_SERVICE_OPTION
          - DELETE_DHCP_DEPLOYMENT_ROLE
          - DELETE_DHCP_ZONE_GROUP
          - DELETE_DNS64
          - DELETE_DNSSEC_SIGNING_POLICY
          - DELETE_DNS_DEPLOYMENT_ROLE
          - DELETE_DNS_OPTION
          - DELETE_DNS_RAW_OPTION
          - DELETE_DYNAMIC_ALIAS_RECORD
          - DELETE_DYNAMIC_GENERIC_RECORD
          - DELETE_DYNAMIC_HINFO_RECORD
          - DELETE_DYNAMIC_HOST_RECORD
          - DELETE_DYNAMIC_MX_RECORD
          - DELETE_DYNAMIC_NAPTR_RECORD
          - DELETE_DYNAMIC_RECORD
          - DELETE_DYNAMIC_SRV_RECORD
          - DELETE_DYNAMIC_TXT_RECORD
          - DELETE_E164_ZONE
          - DELETE_ENTRUST_KEY_SIGNING_KEY
          - DELETE_ENTRUST_ZONE_SIGNING_KEY
          - DELETE_ERROR_ENTRY
          - DELETE_EXTERNAL_HOST_RECORD
          - DELETE_FORWARD_DHCP_ZONE
          - DELETE_GENERIC_RECORD
          - DELETE_GTM_SERVER
          - DELETE_HINFO_RECORD
          - DELETE_HOST_RECORD
          - DELETE_HSM_CONFIGURATION
          - DELETE_HSM_SERVER
          - DELETE_INTERNAL_ROOT_ZONE
          - DELETE_IPV4_ADDRESS
          - DELETE_IPV4_BLOCK
          - DELETE_IPV4_DHCP_RANGE
          - DELETE_IPV4_GROUP
          - DELETE_IPV4_NETWORK
          - DELETE_IPV4_RECONCILIATION_ADDRESSES
          - DELETE_IPV4_RECONCILIATION_POLICY
          - DELETE_IPV4_TEMPLATE
          - DELETE_IPV6_ADDRESS
          - DELETE_IPV6_BLOCK
          - DELETE_IPV6_DHCP_RANGE
          - DELETE_IPV6_NETWORK
          - DELETE_IPV6_RECONCILIATION_ADDRESSES
          - DELETE_IPV6_RECONCILIATION_POLICY
          - DELETE_IPV6_TEMPLATE
          - DELETE_KDC
          - DELETE_KERBEROS_AUTHENTICATOR
          - DELETE_KERBEROS_REALM
          - DELETE_KEY_SIGNING_KEY
          - DELETE_LDAP_AUTHENTICATOR
          - DELETE_LOCATION
          - DELETE_LTM_SERVER
          - DELETE_MAC_ADDRESS
          - DELETE_MAC_ADDRESS_FROM_MAC_POOL
          - DELETE_MX_RECORD
          - DELETE_NAMING_POLICY
          - DELETE_NAMING_POLICY_VALUE_CONNECTOR
          - DELETE_NAMING_POLICY_VALUE_INCREMENTAL
          - DELETE_NAMING_POLICY_VALUE_INTEGER
          - DELETE_NAMING_POLICY_VALUE_REQUIRED
          - DELETE_NAMING_POLICY_VALUE_TEXT
          - DELETE_NAMING_RESTRICTION
          - DELETE_NAPTR_RECORD
          - DELETE_NAPTR_RECORD_GROUP
          - DELETE_NOTIFICATION_GROUP
          - DELETE_RADIUS_AUTHENTICATOR
          - DELETE_REPORT
          - DELETE_REPORT_SCHEDULER
          - DELETE_RESOURCE
          - DELETE_RESOURCE_LINK
          - DELETE_RESPONSE_POLICY
          - DELETE_RESPONSE_POLICY_ZONE
          - DELETE_REVERSE_DHCP_ZONE
          - DELETE_SERVER
          - DELETE_SERVER_FROM_SERVER_GROUP
          - DELETE_SERVER_GROUP
          - DELETE_SERVER_PUBLISHED_INTERFACE
          - DELETE_SERVICE_PRINCIPAL
          - DELETE_SRV_RECORD
          - DELETE_START_OF_AUTHORITY
          - DELETE_TACACSPLUS_AUTHENTICATOR
          - DELETE_TAG
          - DELETE_TAG_GROUP
          - DELETE_TASK
          - DELETE_TFTP_DEPLOYMENT_ROLE
          - DELETE_TFTP_FILE
          - DELETE_TFTP_FOLDER
          - DELETE_TFTP_GROUP
          - DELETE_TSIG_KEY
          - DELETE_TXT_RECORD
          - DELETE_UNIMPORTED_ZONES
          - DELETE_USER
          - DELETE_USER_DEFINED_FIELD_DEFINITION
          - DELETE_USER_DEFINED_LINK_DEFINITION
          - DELETE_USER_FROM_GROUP
          - DELETE_USER_GROUP
          - DELETE_USER_MAC_POOL
          - DELETE_VENDOR_CLIENT_OPTION
          - DELETE_VENDOR_OPTION_DEFINITION
          - DELETE_VENDOR_PROFILE
          - DELETE_VIEW
          - DELETE_WORKFLOW_REQUEST
          - DELETE_X509_AUTHENTICATOR
          - DELETE_ZONE
          - DELETE_ZONE_SIGNING_KEY
          - DELETE_ZONE_TEMPLATE
          - DENY_ADD_ALIAS_RECORD
          - DENY_ADD_HOST_RECORD
          - DENY_ADD_IPV4_NETWORK
          - DENY_ADD_RESOURCE_RECORD
          - DENY_ADD_ZONE
          - DENY_ASSIGN_IPV4_ADDRESS
          - DENY_ASSIGN_IPV4_ADDRESS_WITH_PTR
          - DENY_CHANGE_IPV4_STATE
          - DENY_DELETE_RESOURCE
          - DENY_RENAME_RESOURCE_RECORD
          - DENY_UPDATE_ALIAS_RECORD
          - DENY_UPDATE_HOST_RECORD
          - DENY_UPDATE_IPV4_ADDRESS
          - DENY_UPDATE_IPV4_NETWORK
          - DENY_UPDATE_READONLY_IPV4_NETWORK
          - DENY_UPDATE_RESOURCE_RECORD
          - DENY_UPDATE_ZONE
          - DEPLOY_SERVER
          - DHCP_DYNAMIC_UPDATE_OPERATION
          - DISABLE_AUTOVACUUM_SERVICE
          - DNS_DYNAMIC_ADD_OPERATION
          - DNS_DYNAMIC_DELETE_OPERATION
          - DNS_DYNAMIC_UPDATE_OPERATION
          - DUPLICATE_FORWARD_DHCP_ZONE
          - DUPLICATE_IPV4_BLOCK
          - DUPLICATE_IPV4_NETWORK
          - DUPLICATE_RESOURCE_RECORD
          - DUPLICATE_REVERSE_DHCP_ZONE
          - ELECT_AD_PRIMARY_DEPLOYMENT_ROLES
          - ENABLE_AUTOVACUUM_SERVICE
          - ENABLE_HSM_SUPPORT
          - FAILOVER_HA_SERVER
          - GENERATE_DNSSEC_KEY
          - GET_HA_SERVER_STATUS
          - GET_SERVER_INFO
          - IMPORT_CONFIGURATION
          - IMPORT_ENTITIES
          - IMPORT_ZONE
          - INITIALIZE_ADDRESS_MANAGER
          - INITIALIZE_ADDRESS_MANAGER_LOCALES
          - JOIN_SECURITY_WORLD
          - LOCK_OUT_USER
          - LOCK_OUT_USER_ROLLBACK
          - MERGE_DUPLICATE_HOST_RECORDS
          - MERGE_IPV4_BLOCKS
          - MERGE_IPV4_BLOCK_WITH_PARENT
          - MERGE_IPV4_DHCP_RANGES
          - MERGE_IPV4_NETWORKS
          - MOVE_DEPLOYMENT_ROLES
          - MOVE_IPV4_ADDRESS
          - MOVE_IPV4_BLOCK
          - MOVE_IPV4_NETWORK
          - MOVE_IPV6_ADDRESS_ASSIGNMENT
          - MOVE_IPV6_BLOCK
          - MOVE_IPV6_NETWORK
          - MOVE_RESOURCE_RECORD
          - MOVE_TFTP_FILE_OR_FOLDER
          - MOVE_ZONE
          - PARTITION_IPV6_BLOCK
          - PARTITION_TO_BLOCKS
          - PARTITION_TO_NETWORKS
          - PATCH_ADDRESS_MANAGER
          - PATCH_SERVER
          - POPULATE_ZONE
          - PROCESS_OAUTH_TOKEN
          - PROCESS_SAML_RESPONSE
          - QUERY_SERVER_FOR_HOSTNAME
          - REAPPLY_IPV4_TEMPLATE
          - REAPPLY_ZONE_TEMPLATE
          - RECONCILE_IPV4_ADDRESSES
          - RECONCILE_IPV4_DHCP_RANGE
          - RECONCILE_IPV4_NETWORK
          - RECONCILE_IPV6_ADDRESSES
          - RECONCILE_SERVER
          - RECONCILE_VIEW
          - RECONCILE_ZONE
          - RECORD_SERVER_DEPLOYMENT_EVENT
          - REMOVE_DNSSEC_SIGNING_POLICY
          - REMOVE_DUID_FROM_IPV6_ADDRESS
          - REMOVE_RESOURCE_LINK
          - REMOVE_RESOURCE_LOCATION
          - REMOVE_TAG
          - RENAME_ALIAS_RECORD
          - RENAME_GENERIC_RECORD
          - RENAME_HINFO_RECORD
          - RENAME_HOST_RECORD
          - RENAME_MX_RECORD
          - RENAME_NAPTR_RECORD
          - RENAME_SRV_RECORD
          - RENAME_TXT_RECORD
          - REPAIR_HA_SERVER
          - REPLACE_SERVER
          - REPLACE_TFTP_FILE
          - REQUEST_ADD_ALIAS_RECORD
          - REQUEST_ADD_HOST_RECORD
          - REQUEST_ADD_IPV4_NETWORK
          - REQUEST_ADD_RESOURCE_RECORD
          - REQUEST_ADD_ZONE
          - REQUEST_ASSIGN_IPV4_ADDRESS
          - REQUEST_ASSIGN_IPV4_ADDRESS_WITH_PTR
          - REQUEST_ASSIGN_NEXT_AVAILABLE_IPV4_ADDRESS
          - REQUEST_CHANGE_IPV4_STATE
          - REQUEST_DELETE_RESOURCE
          - REQUEST_RENAME_RESOURCE_RECORD
          - REQUEST_UPDATE_ALIAS_RECORD
          - REQUEST_UPDATE_HOST_RECORD
          - REQUEST_UPDATE_IPV4_ADDRESS
          - REQUEST_UPDATE_IPV4_NETWORK
          - REQUEST_UPDATE_READONLY_IPV4_NETWORK
          - REQUEST_UPDATE_RESOURCE_RECORD
          - REQUEST_UPDATE_ZONE
          - RESET_SERVER_PASSWORD
          - RESIZE_IPV4_BLOCK
          - RESIZE_IPV4_NETWORK
          - RESIZE_IPV6_BLOCK
          - RESIZE_IPV6_NETWORK
          - RESTORE_RESOURCE
          - SPLIT_IPV4_BLOCK
          - SPLIT_IPV4_NETWORK
          - SPLIT_IPV6_BLOCK
          - SPLIT_IPV6_NETWORK
          - START_WINDOWS_READONLY_DNS_DEPLOYMENT
          - UNASSIGN_IPV4_TEMPLATE
          - UPDATE_ACCESS_RIGHT
          - UPDATE_ACL
          - UPDATE_ADMINISTRATIVE_ACCESS_RIGHT
          - UPDATE_ALIAS_RECORD
          - UPDATE_COLLECTOR
          - UPDATE_CONFIGURATION
          - UPDATE_CONFIGURATION_DNS_OPTION_INHERITANCE_SETTINGS
          - UPDATE_CUSTOM_DHCPV4_CLIENT_OPTION_DEFINITION
          - UPDATE_DEPLOYMENT_SCHEDULER
          - UPDATE_DEVICE
          - UPDATE_DEVICE_SUBTYPE
          - UPDATE_DEVICE_TYPE
          - UPDATE_DHCPV4_CLIENT_CLASS
          - UPDATE_DHCPV4_CLIENT_OPTION
          - UPDATE_DHCPV4_CLIENT_SUBCLASS
          - UPDATE_DHCPV4_RAW_OPTION
          - UPDATE_DHCPV4_SERVICE_OPTION
          - UPDATE_DHCPV6_CLIENT_OPTION
          - UPDATE_DHCPV6_RAW_OPTION
          - UPDATE_DHCPV6_SERVICE_OPTION
          - UPDATE_DHCP_DEPLOYMENT_ROLE
          - UPDATE_DHCP_RECONCILIATION
          - UPDATE_DHCP_ZONE_GROUP
          - UPDATE_DNS64
          - UPDATE_DNSSEC_SIGNING_POLICY
          - UPDATE_DNS_DEPLOYMENT_ROLE
          - UPDATE_DNS_OPTION
          - UPDATE_DNS_RAW_OPTION
          - UPDATE_DYNAMIC_ALIAS_RECORD
          - UPDATE_DYNAMIC_HINFO_RECORD
          - UPDATE_DYNAMIC_MX_RECORD
          - UPDATE_DYNAMIC_NAPTR_RECORD
          - UPDATE_DYNAMIC_SRV_RECORD
          - UPDATE_DYNAMIC_TXT_RECORD
          - UPDATE_E164_ZONE
          - UPDATE_ENTRUST_KEY_SIGNING_KEY
          - UPDATE_ENTRUST_ZONE_SIGNING_KEY
          - UPDATE_EXTERNAL_HOST_RECORD
          - UPDATE_FORWARD_DHCP_ZONE
          - UPDATE_GENERIC_RECORD
          - UPDATE_GLOBAL_SETTINGS
          - UPDATE_GTM_SERVER
          - UPDATE_GTM_SERVER_RESOURCE_GROUP
          - UPDATE_HA_SERVER
          - UPDATE_HINFO_RECORD
          - UPDATE_HOST_RECORD
          - UPDATE_HSM_CONFIGURATION
          - UPDATE_HSM_SERVER
          - UPDATE_INTERNAL_ROOT_ZONE
          - UPDATE_IPV4_ADDRESS
          - UPDATE_IPV4_BLOCK
          - UPDATE_IPV4_DHCP_RANGE
          - UPDATE_IPV4_GROUP
          - UPDATE_IPV4_NETWORK
          - UPDATE_IPV4_RECONCILIATION_POLICY
          - UPDATE_IPV4_TEMPLATE
          - UPDATE_IPV6_ADDRESS
          - UPDATE_IPV6_ADDRESS_DUID
          - UPDATE_IPV6_BLOCK
          - UPDATE_IPV6_DHCP_RANGE
          - UPDATE_IPV6_NETWORK
          - UPDATE_IPV6_RECONCILIATION_POLICY
          - UPDATE_IPV6_TEMPLATE
          - UPDATE_IP_ADDRESS
          - UPDATE_IP_OVERLAP_SETTINGS
          - UPDATE_KERBEROS_AUTHENTICATOR
          - UPDATE_KERBEROS_DOMAIN_CONTROLLER
          - UPDATE_KERBEROS_REALM
          - UPDATE_KEY_SIGNING_KEY
          - UPDATE_LDAP_AUTHENTICATOR
          - UPDATE_LOCATION
          - UPDATE_LOGIN_SECURITY_SETTINGS
          - UPDATE_LTM_SERVER
          - UPDATE_LTM_SERVER_RESOURCE_GROUP
          - UPDATE_MAC_ADDRESS
          - UPDATE_MAC_POOL
          - UPDATE_MX_RECORD
          - UPDATE_NAMING_POLICY
          - UPDATE_NAMING_POLICY_VALUE_CONNECTOR
          - UPDATE_NAMING_POLICY_VALUE_INCREMENTAL
          - UPDATE_NAMING_POLICY_VALUE_INTEGER
          - UPDATE_NAMING_POLICY_VALUE_REQUIRED
          - UPDATE_NAMING_POLICY_VALUE_TEXT
          - UPDATE_NAMING_RESTRICTION
          - UPDATE_NAPTR_RECORD
          - UPDATE_NAPTR_RECORD_GROUP
          - UPDATE_NOTIFICATION_GROUP
          - UPDATE_OAUTH_SERVER
          - UPDATE_RADIUS_AUTHENTICATOR
          - UPDATE_READONLY_IPV4_NETWORK
          - UPDATE_REPORT
          - UPDATE_REPORT_SCHEDULER
          - UPDATE_REPORT_SCHEDULERS_STATUS
          - UPDATE_RESOURCE
          - UPDATE_RESOURCE_LOCATION
          - UPDATE_RESPONSE_POLICY
          - UPDATE_RESPONSE_POLICY_ZONE
          - UPDATE_REVERSE_DHCP_ZONE
          - UPDATE_SAML_IDENTITY_PROVIDER
          - UPDATE_SAML_SERVICE_PROVIDER
          - UPDATE_SAML_SERVICE_PROVIDER_KEY_STORE
          - UPDATE_SAML_SERVICE_PROVIDER_METADATA
          - UPDATE_SCHEDULED_DEPLOYMENT
          - UPDATE_SERVER
          - UPDATE_SERVER_GROUP
          - UPDATE_SERVER_INTERFACE
          - UPDATE_SERVER_MONITORING_SETTINGS
          - UPDATE_SERVER_PASSWORD_SERVER
          - UPDATE_SERVER_PUBLISHED_INTERFACE
          - UPDATE_SERVICE_PRINCIPAL
          - UPDATE_SRV_RECORD
          - UPDATE_START_OF_AUTHORITY
          - UPDATE_TACACSPLUS_AUTHENTICATOR
          - UPDATE_TAG
          - UPDATE_TAG_GROUP
          - UPDATE_TASK
          - UPDATE_TFTP_DEPLOYMENT_ROLE
          - UPDATE_TFTP_FILE
          - UPDATE_TFTP_FOLDER
          - UPDATE_TFTP_GROUP
          - UPDATE_TSIG_KEY
          - UPDATE_TXT_RECORD
          - UPDATE_USER
          - UPDATE_USER_DEFINED_FIELD_DEFINITION
          - UPDATE_USER_DEFINED_LINK_DEFINITION
          - UPDATE_USER_GROUP
          - UPDATE_USER_MAC_POOL
          - UPDATE_USER_PASSWORD
          - UPDATE_USER_PASSWORD_POLICY
          - UPDATE_VENDOR_CLIENT_OPTION
          - UPDATE_VENDOR_OPTION_DEFINITION
          - UPDATE_VENDOR_PROFILE
          - UPDATE_VIEW
          - UPDATE_WINDOWS_DHCP_FAILOVER_DEPLOYMENT_ROLE
          - UPDATE_X509_AUTHENTICATOR
          - UPDATE_ZONE
          - UPDATE_ZONE_SIGNING_KEY
          - UPDATE_ZONE_TEMPLATE
          - VERIFY_ADDRESS_MANAGER_UPDATE
          readOnly: true
          type: string
        description:
          description: The description of the operation performed.
          example: Zone was moved
          type: string
        comment:
          description: The change control comment of the transaction.
          example: Moved zone to a new view.
          type: string
        creationDateTime:
          description: The date and time of the transaction.
          example: 2022-11-15T19:48:05Z
          type: string
        transactionId:
          description: The unique ID of the transaction performed.
          example: 3149
          format: int64
          minimum: 1
          nullable: false
          type: integer
          writeOnly: true
        user:
          $ref: '#/components/schemas/User'
        revertingTransaction:
          allOf:
          - $ref: '#/components/schemas/Transaction'
          readOnly: true
      type: object
    TrustRelationship:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - TrustRelationship
          type: string
        address:
          description: The IP address of the remote Address Manager server that is
            part of the trust relationship.
          example: 192.168.1.1
          nullable: false
          type: string
        username:
          description: The API username of the remote Address Manager server that
            is used to establish the trust relationship.
          example: apiUser
          pattern: ^.*\S+.*$
          type: string
          writeOnly: true
        password:
          description: The password of the API user that is used to establish the
            trust relationship with the remote Address Manager server.
          example: apiPassword
          pattern: ^.*\S+.*$
          type: string
          writeOnly: true
        keyGenerationDateTime:
          description: The timestamp of when the SSH key was created for exchange
            with the remote Address Manager server to establish the trust relationship.
          example: 2022-09-14T19:35:37Z
          format: date-time
          readOnly: true
          type: string
        state:
          description: The state of the trust relationship.
          enum:
          - TRUSTED
          - UNTRUSTED
          - REFRESH_KEYS
          type: string
      type: object
    UserDefinedFieldDefinition:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - UserDefinedFieldDefinition
          type: string
        name:
          description: The name of the user defined field.
          example: BlueCatGateway
          pattern: ^.*\S+.*$
          type: string
        displayName:
          description: The display name of the user defined field.
          example: BlueCat Gateway
          pattern: ^.*\S+.*$
          type: string
        resourceType:
          description: The resource type that the user defined field is applied to.
          enum:
          - ACL
          - AbstractKeySigningKey
          - AbstractNetworkInterface
          - AbstractServer
          - AbstractZoneSigningKey
          - AddressManagerAuthenticator
          - AliasRecord
          - Authenticator
          - Configuration
          - DHCPClientOption
          - DHCPDeploymentRole
          - DHCPForwardZone
          - DHCPReverseZone
          - DHCPServiceOption
          - DHCPUniqueIdentifier
          - DHCPVendorOption
          - DHCPVendorOptionDefinition
          - DHCPZone
          - DHCPZoneGroup
          - DHCPv4ClientClass
          - DHCPv4ClientOption
          - DHCPv4CustomClientOptionDefinition
          - DHCPv4RawOption
          - DHCPv4ServiceOption
          - DHCPv4Subclass
          - DHCPv6ClientOption
          - DHCPv6RawOption
          - DHCPv6ServiceOption
          - DNS64
          - DNSDeploymentRole
          - DNSOption
          - DNSRawOption
          - DNSSECSigningPolicy
          - DefaultClientOption
          - DefaultDHCPOption
          - DefaultDHCPServiceOption
          - DefaultDNSOption
          - DeploymentRole
          - DeploymentSchedule
          - Device
          - DeviceSubtype
          - DeviceType
          - ENUMNumberZone
          - ENUMZone
          - EntrustKeySigningKey
          - EntrustZoneSigningKey
          - ExternalHostRecord
          - GenericRecord
          - HAServer
          - HINFORecord
          - HSMConfiguration
          - HSMKeySigningKey
          - HSMServer
          - HSMZoneSigningKey
          - HostRecord
          - IPServerInterface
          - IPv4Address
          - IPv4Block
          - IPv4DHCPRange
          - IPv4Group
          - IPv4Network
          - IPv4Prefix
          - IPv4Range
          - IPv4ReconciliationPolicy
          - IPv4Template
          - IPv6Address
          - IPv6Block
          - IPv6DHCPRange
          - IPv6Network
          - IPv6Prefix
          - IPv6ReconciliationPolicy
          - InternalRootZone
          - KerberosAuthenticator
          - KerberosRealm
          - KerberosServicePrincipal
          - KeyDistributionCenter
          - KeySigningKey
          - LDAPAuthenticator
          - Location
          - LoginPolicySettings
          - MACAddress
          - MACPool
          - MXRecord
          - NAPTRRecord
          - NamingPolicy
          - NamingPolicyRestriction
          - NetworkInterface
          - NotificationGroup
          - OAuthAuthorizationServer
          - PasswordPolicySettings
          - PublishedInterface
          - RADIUSAuthenticator
          - RawOption
          - Report
          - ReportSchedule
          - ResourceRecord
          - ResponsePolicy
          - ResponsePolicyZone
          - SAMLIdentityProvider
          - SAMLServiceProviderSettings
          - SRVRecord
          - Server
          - ServerGroup
          - ServerInterface
          - ServiceOption
          - SigningKey
          - StartOfAuthority
          - TACACSPlusAuthenticator
          - TFTPDeploymentRole
          - TFTPFile
          - TFTPFolder
          - TFTPGroup
          - TFTPNode
          - TSIGKey
          - TXTRecord
          - Tag
          - TagGroup
          - Task
          - User
          - UserGroup
          - VendorProfile
          - View
          - VirtualInterface
          - X509Authenticator
          - Zone
          - ZoneSigningKey
          - ZoneTemplate
          nullable: false
          type: string
        dataType:
          description: The data type of the user defined field.
          enum:
          - BOOLEAN
          - DATE
          - EMAIL
          - INTEGER
          - LONG
          - TEXT
          - URL
          - WORKFLOW
          nullable: false
          type: string
        defaultValue:
          description: The default value of the user defined field.
          example: all
          type: string
        required:
          description: Indicates whether the user defined field is required or optional
            for the resource.
          type: boolean
        predefinedValues:
          items:
            type: string
          type: array
        validationProperties:
          $ref: '#/components/schemas/UserDefinedFieldDefinition_validationProperties'
      type: object
    UserDefinedLinkDefinition:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - UserDefinedLinkDefinition
          type: string
        name:
          description: The name of the user-defined link definition.
          example: UDL IP4Addr to IP4Block
          pattern: ^.*\S+.*$
          type: string
        displayName:
          description: The display name of the user-defined link definition.
          example: UDL IP4Addr to IP4Block
          pattern: ^.*\S+.*$
          type: string
        description:
          description: The description of the user-defined link definition.
          example: A UDL to link IPv4 Addresses to IPv4 Blocks.
          type: string
        sourceTypes:
          description: The source entity types of the user-defined link definition.
          items:
            description: The source entity types of the user-defined link definition.
            enum:
            - DenyMACPool
            - Device
            - IPv4Address
            - IPv4Block
            - IPv4DHCPRange
            - IPv4Group
            - IPv4Network
            - IPv6Address
            - IPv6Block
            - IPv6DHCPRange
            - IPv6Network
            - MACAddress
            - MACPool
            - Server
            - ServerGroup
            - View
            - Zone
            type: string
          nullable: false
          type: array
        destinationTypes:
          description: The destination entity types of the user-defined link definition.
          items:
            description: The destination entity types of the user-defined link definition.
            enum:
            - DenyMACPool
            - Device
            - IPv4Address
            - IPv4Block
            - IPv4DHCPRange
            - IPv4Group
            - IPv4Network
            - IPv6Address
            - IPv6Block
            - IPv6DHCPRange
            - IPv6Network
            - MACAddress
            - MACPool
            - Server
            - ServerGroup
            - View
            - Zone
            type: string
          nullable: false
          type: array
      type: object
    InlinedUserDefinedLinkDefinition:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - UserDefinedLinkDefinition
          type: string
        name:
          description: The name of the user-defined link definition.
          example: UDL IP4Addr to IP4Block
          pattern: ^.*\S+.*$
          type: string
      title: UserDefinedLinkDefinition
      type: object
    UserDefinedLinkedResource:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - UserDefinedLinkedResource
          type: string
        linkDescription:
          description: The description for the user-defined link.
          example: Sample description.
          type: string
        linkDefinition:
          $ref: '#/components/schemas/UserDefinedLinkedResource_linkDefinition'
      type: object
    LinkedUser:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - User
          type: string
      type: object
    VendorProfile:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - VendorProfile
          type: string
        name:
          description: The name of the DHCP vendor profile.
          example: Cisco IP phones
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        identifier:
          description: The Vendor Class Identifier.
          example: "Cisco Systems, Inc. IP Phone CP-7940G"
          pattern: ^.*\S+.*$
          type: string
        description:
          description: The description of the DHCP vendor profile.
          example: Vendor profile for Cisco IP phones
          pattern: ^.*\S+.*$
          type: string
      type: object
    DHCPForwardZone:
      allOf:
      - $ref: '#/components/schemas/DhcpZone'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPForwardZone
            nullable: false
            type: string
          zone:
            $ref: '#/components/schemas/DHCPForwardZone_allOf_zone'
        type: object
      type: object
    DHCPReverseZone:
      allOf:
      - $ref: '#/components/schemas/DhcpZone'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPReverseZone
            nullable: false
            type: string
          prefix:
            $ref: '#/components/schemas/DHCPReverseZone_allOf_prefix'
        type: object
      type: object
    DhcpZone:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          readOnly: true
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        primaryDnsServerAddress:
          description: The IP address of the zone's primary DNS server.
          example: 10.10.10.10
          nullable: false
          type: string
        secondaryDnsServerAddress:
          description: The IP address of the zone's secondary DNS server.
          example: 10.10.10.20
          type: string
        dynamicUpdateSigningKeyType:
          description: The type of key used to sign DDNS updates.
          enum:
          - NONE
          - TSIG
          - GSS_TSIG
          nullable: false
          type: string
        dynamicUpdateSigningKey:
          allOf:
          - $ref: '#/components/schemas/InlinedSigningKey'
          required:
          - id
        dynamicUpdateSigningKeyRealm:
          allOf:
          - $ref: '#/components/schemas/InlinedKerberosRealm'
          required:
          - id
      type: object
    InlinedKerberosRealm:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - KerberosRealm
          type: string
        name:
          description: The name for the Kerberos realm.
          example: example.company.net
          nullable: false
          type: string
      title: KerberosRealm
      type: object
    InlinedLinkedPrefix:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          type: string
        range:
          description: The address range for the IP block or network.
          type: string
      title: Prefix
      type: object
    InlinedSigningKey:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - SigningKey
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
      title: SigningKey
      type: object
    InlinedZone:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Zone
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
        absoluteName:
          description: The fully qualified name of the zone.
          example: example.corp
          type: string
      title: Zone
      type: object
    InlinedZoneTemplate:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ZoneTemplate
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          pattern: ^.*\S+.*$
          type: string
      title: ZoneTemplate
      type: object
    LinkedIPv6Block:
      allOf:
      - $ref: '#/components/schemas/LinkedPrefix'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv6Block
            type: string
        type: object
      type: object
    LinkedIPv6Network:
      allOf:
      - $ref: '#/components/schemas/LinkedPrefix'
      - properties:
          type:
            description: The resource type.
            enum:
            - IPv6Network
            type: string
        type: object
      type: object
    LinkedPrefix:
      description: The block or network for the reverse zone declaration.
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          type: string
        range:
          description: The address range for the IP block or network.
          type: string
      type: object
    Zone:
      allOf:
      - $ref: '#/components/schemas/AbstractZone'
      - properties:
          type:
            description: The resource type.
            enum:
            - Zone
            nullable: false
            type: string
          name:
            description: The name of the resource.
            example: name
            pattern: ^.*\S+.*$
            type: string
          deploymentEnabled:
            description: Indicates whether the zone is deployable.
            nullable: false
            type: boolean
          dynamicUpdateEnabled:
            description: "Indicates whether the dynamic update feature is enabled\
              \ on the zone. When enabled, any resource records that are added, updated,\
              \ or deleted within the zone will be automatically deployed to the primary\
              \ DNS/DHCP Server of that zone using selective deployment."
            nullable: false
            type: boolean
          template:
            allOf:
            - $ref: '#/components/schemas/InlinedZoneTemplate'
            required:
            - id
          signed:
            description: Indicates if the zone is currently signed using a DNSSEC
              Signing Policy.
            nullable: false
            type: boolean
          signingPolicy:
            allOf:
            - $ref: '#/components/schemas/InlinedDNSSECSigningPolicy'
            required:
            - id
          absoluteName:
            description: The fully qualified name of the zone.
            example: example.corp
            type: string
        type: object
      type: object
    DHCPZoneGroup:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - DHCPZoneGroup
          type: string
        name:
          description: The name of the DHCP zone group.
          example: Zone Group 1
          pattern: ^.*\S+.*$
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
      type: object
    AbstractZone:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
        view:
          allOf:
          - $ref: '#/components/schemas/View'
          readOnly: true
      type: object
    ENUMNumberZone:
      allOf:
      - $ref: '#/components/schemas/AbstractZone'
      - properties:
          type:
            description: The resource type.
            enum:
            - ENUMNumberZone
            nullable: false
            type: string
          name:
            description: The name of the resource.
            example: name
            pattern: ^.*\S+.*$
            type: string
          numberName:
            pattern: ^.*\S+.*$
            type: string
          absoluteName:
            readOnly: true
            type: string
        type: object
      type: object
    ENUMZone:
      allOf:
      - $ref: '#/components/schemas/AbstractZone'
      - properties:
          type:
            description: The resource type.
            enum:
            - ENUMZone
            nullable: false
            type: string
          name:
            description: The name of the resource.
            example: name
            pattern: ^.*\S+.*$
            type: string
          deploymentEnabled:
            nullable: false
            type: boolean
          absoluteName:
            readOnly: true
            type: string
        type: object
      type: object
    ExternalHostsZone:
      allOf:
      - $ref: '#/components/schemas/AbstractZone'
      - properties:
          type:
            description: The resource type.
            enum:
            - ExternalHostsZone
            nullable: false
            type: string
        type: object
      type: object
    InlinedResponsePolicy:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ResponsePolicy
          type: string
        name:
          description: The name of the response policy
          example: Block Response Policy
          pattern: ^.*\S+.*$
          type: string
      title: ResponsePolicy
      type: object
    InternalRootZone:
      allOf:
      - $ref: '#/components/schemas/AbstractZone'
      - properties:
          type:
            description: The resource type.
            enum:
            - InternalRootZone
            nullable: false
            type: string
          name:
            description: The name of the resource.
            example: name
            readOnly: true
            type: string
          deploymentEnabled:
            nullable: false
            type: boolean
        type: object
      type: object
    ResponsePolicyZone:
      allOf:
      - $ref: '#/components/schemas/AbstractZone'
      - properties:
          type:
            description: The resource type.
            enum:
            - ResponsePolicyZone
            nullable: false
            type: string
          name:
            description: The name of the resource.
            example: name
            pattern: ^.*\S+.*$
            type: string
          responsePolicyZoneType:
            description: The type of response policy zone.
            enum:
            - LOCAL
            - FEED
            - EXTERNAL
            nullable: false
            type: string
          responsePolicy:
            allOf:
            - $ref: '#/components/schemas/InlinedResponsePolicy'
            required:
            - id
          overridePolicyType:
            description: The response policy type set for BlueCat Security Feed.
            enum:
            - ALLOWLIST
            - BLACKHOLE
            - BLOCKLIST
            - REDIRECT
            type: string
          overrideRefreshTime:
            description: "The custom refresh time interval set for BlueCat Security\
              \ Feed, in seconds."
            type: string
          redirectTarget:
            description: The target FQDN to which all undesirable connection attemps
              are redirected.
            type: string
          feedCategories:
            items:
              type: string
            type: array
        type: object
      type: object
    BadRequestError:
      example:
        reason: Bad Request
        code: ActiveServerConfigurationError
        message: message
        status: 1
      properties:
        status:
          enum:
          - 400
          format: int32
          nullable: false
          readOnly: true
          type: integer
        reason:
          enum:
          - Bad Request
          nullable: false
          readOnly: true
          type: string
        code:
          enum:
          - ActiveServerConfigurationError
          - ActiveServerMissingHaBackbone
          - ActiveServerNotConnected
          - AddressIsBroadcastAddress
          - AddressIsNetworkId
          - AddressIsNetworkRouterAnycast
          - AddressIsReserved
          - AddressNotInNetwork
          - AddressNotRestrictedRanges
          - ArrayFieldTooBig
          - AuthenticatorMismatch
          - BlankFieldValue
          - BrokenMandatoryDependency
          - BrokenOptionalDependency
          - CannotAssociateServerAssignedOption
          - CannotConnectToServer
          - CannotEnableSso
          - CannotFailoverWhileNodesDisconnected
          - CannotFetchGroupsFromLdapAuthenticator
          - ConflictingFieldsList
          - ConflictingResourceFieldValues
          - DatabaseNotInReplicatedState
          - DatabaseReplicationInProgress
          - DeleteAuthenticatorNotAllowed
          - DeleteLastLinkNotAllowed
          - DeploymentFailedToStart
          - DhcpDeploymentValidationNotEnabled
          - DnsDeploymentValidationNotEnabled
          - DuplicateFieldValue
          - DuplicateFilterField
          - DuplicateOrderByField
          - DurationValueNotDivisibleBy
          - DurationValueOutsideRange
          - EmptyFieldValue
          - EmptyRequestBody
          - FailoverTargetAlreadyPrimaryServer
          - FieldsParseError
          - FieldsTokenError
          - FieldHasPatchOnlyUpdate
          - FieldNotPatchable
          - FieldValueTooSmall
          - FilterNeedsRefinement
          - FilterParseError
          - FilterTokenError
          - ImportInProgress
          - IncompatibleServerProfile
          - IncompatibleServerVersion
          - InterfaceRedundancyConfigurationError
          - InvalidAnycastAddress
          - InvalidDateValue
          - InvalidDnsFeedLicense
          - InvalidDuidValue
          - InvalidDurationValue
          - InvalidEmailAddress
          - InvalidEnumValue
          - InvalidEnumZoneAbsoluteNameLength
          - InvalidEnumZoneName
          - InvalidFieldName
          - InvalidFileCharacterEncoding
          - InvalidFileDataValue
          - InvalidFilterAddress
          - InvalidFilterAddressRange
          - InvalidFilterAddressRangeSize
          - InvalidFilterCountsAndPercentages
          - InvalidFilterDate
          - InvalidFilterEnumValue
          - InvalidFilterField
          - InvalidFilterPartialAddress
          - InvalidFilterPercentage
          - InvalidFilterValue
          - InvalidFilterValueType
          - InvalidFullyQualifiedDomainName
          - InvalidGatewayMountPointValue
          - InvalidHeaderValue
          - InvalidInlinedResource
          - InvalidIpv4AddressState
          - InvalidIpv4AddressValue
          - InvalidIpv4LoopbackPrefixLength
          - InvalidIpv4RangeValue
          - InvalidIpv6AddressState
          - InvalidIpv6AddressValue
          - InvalidIpv6BlockPrefixLength
          - InvalidIpv6LoopbackPrefixLength
          - InvalidIpv6NetworkPrefixLength
          - InvalidIpv6RangeValue
          - InvalidIpAddressValue
          - InvalidIpAddressOrFullyQualifiedDomainNameValue
          - InvalidIpBlockValue
          - InvalidIpRangeValue
          - InvalidLdapGroupName
          - InvalidLimitParameterValue
          - InvalidLocationCode
          - InvalidLocationName
          - InvalidMacAddressFilter
          - InvalidMacAddressValue
          - InvalidMatchCriteria
          - InvalidMoveDestination
          - InvalidNumberZoneAbsoluteNameLength
          - InvalidNtpServerAddressForStratum
          - InvalidOffsetParameterValue
          - InvalidPaginationParameter
          - InvalidPartialMacAddressFilter
          - InvalidPolicyItemNameValue
          - InvalidPrivateKeyValue
          - InvalidQueryParameterValue
          - InvalidRegularExpression
          - InvalidResourceFieldValue
          - InvalidResourceId
          - InvalidResourceRecordData
          - InvalidResourceType
          - InvalidRetentionRestrictions
          - InvalidSharedNetworkTagValue
          - InvalidStartEndDates
          - InvalidStringFieldPrefix
          - InvalidStringLength
          - InvalidTrustRelationshipCredentials
          - InvalidTopLevelMerge
          - InvalidTtlValue
          - InvalidUdfDateValue
          - InvalidUdfDefaultValue
          - InvalidUdfEmailValue
          - InvalidUdfNumberValue
          - InvalidUdfPredefinedValue
          - InvalidUdfPredefinedValues
          - InvalidUdfUrlValue
          - InvalidUdfValidationProperties
          - InvalidUdfValue
          - InvalidUidValue
          - InvalidUndoTransactionId
          - InvalidUrlScheme
          - InvalidUrlValue
          - InvalidX509CertificateValue
          - InvalidZoneName
          - IpRangeBroadcastOrNetworkIdAssigned
          - IpRangeDoesNotOverlap
          - IpRangeExcludesAssignedAddresses
          - IpRangeExcludesGateway
          - IpRangeIncludesGateway
          - IpRangeNotAlignedOnRangeBoundary
          - IpRangeOutsideParent
          - IpRangeOverlapsSiblings
          - IpRangeOverlapsRangeInOtherConfiguration
          - IpRangeTooSmall
          - JsonDeserializationError
          - JsonParseError
          - MacAddressInUse
          - MismatchedLocationCodeParent
          - MismatchedManagmentAndServicesInterfaces
          - MismatchedMergerTypes
          - MissingMandatoryChangeControlComment
          - MissingMergeDestinationInSiblings
          - MissingPatchableField
          - MissingRequiredDeploymenetRoleInterface
          - MissingQueryParameter
          - MissingRequiredField
          - MissingRequiredFilterField
          - MoveAddressUnsupportedState
          - MoveRolesWithOptionsOnServer
          - MultipleBgpNeighborsNotSupported
          - MultipleQueryParameterValues
          - MultipleValuesNotAllowed
          - NamingPolicyViolation
          - NamingPolicyRestrictionViolation
          - NothingToDeployForUser
          - NoAssignedDnsDeploymentRoles
          - NoHsmConfiguration
          - NoKeyDistributionCentersInRealm
          - NoPreviousFullDeploymentForDifferential
          - NoSpaceForAddress
          - NoSpaceForBlock
          - NoSpaceForNetwork
          - NoSpaceForRange
          - PaginationNotSupported
          - PassiveServerConfigurationError
          - PassiveServerIsF5PoolMember
          - PassiveServerMissingHaBackbone
          - PassiveServerNotConnected
          - PasswordFailedRequirements
          - RedirectPolicyTypeDisabled
          - ReplicatedServerLimitReached
          - ReplicationOperationNotAllowed
          - ResourceHasCircularReference
          - ResourceNotInConfiguration
          - ServerCommandError
          - ServerControlResetRequired
          - ServerIsDeploying
          - ServerIsNotStandAloneServer
          - ServerManagementAddressProtocolMismatch
          - ServerNotActive
          - ServerNotConnected
          - ServerNotDisabled
          - ServerNotManaged
          - ServerNotTrusted
          - ServerServiceInterfaceNotConnected
          - ServerSslHandshakeError
          - SigningPolicyInUse
          - SsoEnforcementRequirementsUnmet
          - TemplateApplicationFailedToStart
          - TemplateNotAssigned
          - TotalCountNotSupported
          - TrustRelationshipLimitReached
          - UdfPredefinedValueInUse
          - UdfValidationPropertiesInUse
          - UdfValueExceedsMaximumLength
          - UdfValueLessThanMinimum
          - UdfValueLessThanMinimumLength
          - UdfValueOutsideRange
          - UnsupportedDeploymentOptionScope
          - UnsupportedDeploymentRoleInterfaceType
          - UnsupportedEmbeddableCollection
          - UnsupportedEmbeddableResource
          - UnsupportedFieldsOperatorForMediaType
          - UnsupportedFilterOperator
          - UnsupportedFilterOperatorForNullValue
          - UnsupportedHeaderEncoding
          - UnsupportedImportFileType
          - UnsupportedOrderByField
          - UnsupportedOrderByOperator
          - UnsupportedResourceFieldValue
          - UnsupportedResourceType
          - UnsupportedServerCommand
          - ValueLessThanMinimum
          - ValueOutsideRange
          - WorkflowRequestNotPending
          - WrongResourceType
          nullable: false
          readOnly: true
          type: string
        message:
          nullable: false
          readOnly: true
          type: string
      type: object
    UnauthorizedError:
      example:
        reason: Unauthorized
        code: InvalidAuthorizationCredentials
        message: message
        status: 5
      properties:
        status:
          enum:
          - 401
          format: int32
          nullable: false
          readOnly: true
          type: integer
        reason:
          enum:
          - Unauthorized
          nullable: false
          readOnly: true
          type: string
        code:
          enum:
          - InvalidAuthorizationCredentials
          - InvalidServerPassword
          - InvalidUsernameOrPassword
          nullable: false
          readOnly: true
          type: string
        message:
          nullable: false
          readOnly: true
          type: string
      type: object
    ForbiddenError:
      example:
        reason: Forbidden
        code: AccessDenied
        message: message
        status: 5
      properties:
        status:
          enum:
          - 403
          format: int32
          nullable: false
          readOnly: true
          type: integer
        reason:
          enum:
          - Forbidden
          nullable: false
          readOnly: true
          type: string
        code:
          enum:
          - AccessDenied
          - DeleteNotAllowed
          - FieldUpdateNotAllowed
          - InvalidAuthorizationScheme
          - OperationNotPermitted
          - ReadOnlySession
          - ReadOnlySessionOnPrimary
          - ResourceInUse
          - ServerInReplication
          - UpdateNotAllowed
          nullable: false
          readOnly: true
          type: string
        message:
          nullable: false
          readOnly: true
          type: string
      type: object
    NotFoundError:
      example:
        reason: Not Found
        code: InlinedResourceNotFound
        message: message
        status: 2
      properties:
        status:
          enum:
          - 404
          format: int32
          nullable: false
          readOnly: true
          type: integer
        reason:
          enum:
          - Not Found
          nullable: false
          readOnly: true
          type: string
        code:
          enum:
          - InlinedResourceNotFound
          - NetworkNotFoundForAddress
          - ResourceNotFound
          - WrongResourceCollection
          nullable: false
          readOnly: true
          type: string
        message:
          nullable: false
          readOnly: true
          type: string
      type: object
    ResourceLinks:
      additionalProperties:
        $ref: '#/components/schemas/ResourceLinks_self'
      example:
        self:
          href: href
      nullable: false
      properties:
        self:
          $ref: '#/components/schemas/ResourceLinks_self'
      readOnly: true
      type: object
    CollectionHalLinks:
      example:
        next:
          href: href
        prev:
          href: href
      nullable: false
      properties:
        next:
          $ref: '#/components/schemas/ResourceLinks_self'
        prev:
          $ref: '#/components/schemas/ResourceLinks_self'
      readOnly: true
      type: object
    CollectionCount:
      format: int32
      nullable: false
      readOnly: true
      type: integer
    CollectionTotalCount:
      format: int32
      nullable: false
      readOnly: true
      type: integer
    ACLPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/ACL'
      example:
        configuration: ""
        matchElements:
        - matchElements
        - matchElements
        name: name
        id: 103307
        type: ACL
        predefined: true
        userDefinedFields:
          key: userDefinedFields
      required:
      - matchElements
      - name
    ConflictError:
      example:
        reason: Conflict
        code: ResourceAlreadyExists
        message: message
        status: 0
      properties:
        status:
          enum:
          - 409
          format: int32
          nullable: false
          readOnly: true
          type: integer
        reason:
          enum:
          - Conflict
          nullable: false
          readOnly: true
          type: string
        code:
          enum:
          - ResourceAlreadyExists
          - ResourceConflictsWithOther
          - StaleResourceState
          nullable: false
          readOnly: true
          type: string
        message:
          nullable: false
          readOnly: true
          type: string
      type: object
    ACLPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/ACL'
      example:
        configuration: ""
        matchElements:
        - matchElements
        - matchElements
        name: name
        id: 103307
        type: ACL
        predefined: true
        userDefinedFields:
          key: userDefinedFields
      required:
      - matchElements
      - name
    AccessRightPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/AccessRight'
      example:
        selectiveDeploymentsAllowed: true
        accessOverrides:
        - accessLevel: HIDE
          resourceType: ACL
        - accessLevel: HIDE
          resourceType: ACL
        userScope: ""
        resource: ""
        id: 103307
        workflowLevel: NONE
        type: AccessRight
        defaultAccessLevel: HIDE
        deploymentsAllowed: true
        quickDeploymentsAllowed: true
      required:
      - defaultAccessLevel
      - userScope
    AccessRightPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/AccessRight'
      example:
        selectiveDeploymentsAllowed: true
        accessOverrides:
        - accessLevel: HIDE
          resourceType: ACL
        - accessLevel: HIDE
          resourceType: ACL
        userScope: ""
        resource: ""
        id: 103307
        workflowLevel: NONE
        type: AccessRight
        defaultAccessLevel: HIDE
        deploymentsAllowed: true
        quickDeploymentsAllowed: true
      required:
      - accessOverrides
      - defaultAccessLevel
      - deploymentsAllowed
      - quickDeploymentsAllowed
      - selectiveDeploymentsAllowed
      - workflowLevel
    LinkedIPv4AddressPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedIPv4Address'
      required:
      - id
    LinkedIPv6AddressPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedIPv6Address'
      required:
      - id
    IPv4AddressPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4Address'
      required:
      - state
      - type
    IPv6AddressPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv6Address'
      required:
      - state
      - type
    IPv4AddressPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4Address'
      required:
      - state
      - type
    IPv6AddressPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv6Address'
      required:
      - state
      - type
    LinkedResourcePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedResource'
      example:
        id: 103307
        type: ACL
      required:
      - id
    KerberosAuthenticatorPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/KerberosAuthenticator'
      required:
      - hostname
      - name
      - realm
      - type
    LDAPAuthenticatorPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LDAPAuthenticator'
      required:
      - adminDn
      - adminPassword
      - aliasDereferencePolicy
      - hostname
      - name
      - referralPolicy
      - schemaType
      - searchBase
      - type
    OAuthAuthorizationServerPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/OAuthAuthorizationServer'
      required:
      - emailClaim
      - groupClaim
      - name
      - type
      - userClaim
      - validationMethod
    RADIUSAuthenticatorPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/RADIUSAuthenticator'
      required:
      - authenticationProtocol
      - hostname
      - name
      - sharedSecret
      - type
    SAMLIdentityProviderPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/SAMLIdentityProvider'
      required:
      - entityId
      - name
      - signOnUrl
      - signingCertificate
      - type
    TACACSPlusAuthenticatorPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/TACACSPlusAuthenticator'
      required:
      - authenticationProtocol
      - hostname
      - name
      - sharedSecret
      - type
    KerberosAuthenticatorPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/KerberosAuthenticator'
      required:
      - hostname
      - name
      - realm
      - type
    LDAPAuthenticatorPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/LDAPAuthenticator'
      required:
      - adminDn
      - aliasDereferencePolicy
      - emailPrefix
      - groupObjectClass
      - hostname
      - memberOfPrefix
      - name
      - port
      - referralPolicy
      - schemaType
      - searchBase
      - sslEnabled
      - type
      - userObjectClass
      - userPrefix
    OAuthAuthorizationServerPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/OAuthAuthorizationServer'
      required:
      - emailClaim
      - enabled
      - groupClaim
      - name
      - type
      - userClaim
      - validationMethod
    RADIUSAuthenticatorPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/RADIUSAuthenticator'
      required:
      - authenticationProtocol
      - hostname
      - name
      - port
      - retries
      - timeout
      - type
    SAMLIdentityProviderPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/SAMLIdentityProvider'
      required:
      - emailAttribute
      - enabled
      - entityId
      - groupAttribute
      - name
      - signOnUrl
      - signingCertificate
      - type
    TACACSPlusAuthenticatorPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/TACACSPlusAuthenticator'
      required:
      - attributes
      - authenticationProtocol
      - hostname
      - name
      - port
      - timeout
      - type
    IPv4BlockPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4Block'
      example:
        template: ""
        pingBeforeAssignEnabled: true
        configuration: ""
        restrictedZones:
        - id: 103307
          type: type
        - id: 103307
          type: type
        range: range
        type: IPv4Block
        reverseZoneSigned: true
        userDefinedFields:
          key: userDefinedFields
        _inheritedFields:
        - _inheritedFields
        - _inheritedFields
        defaultView: ""
        defaultZones:
        - id: 103307
          type: Zone
        - id: 103307
          type: Zone
        reverseZoneSigningPolicy: ""
        name: name
        lowWaterMark: 15
        usagePercentage:
          key: 0
        location: ""
        id: 103307
        defaultZonesInherited: true
        restrictedZonesInherited: true
        highWaterMark: 95
        duplicateHostnamesAllowed: true
      required:
      - range
      - type
    IPv6BlockPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv6Block'
      required:
      - range
      - type
    IPv4BlockPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4Block'
      required:
      - defaultZonesInherited
      - range
      - restrictedZonesInherited
      - reverseZoneSigned
      - type
    IPv6BlockPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv6Block'
      required:
      - range
      - type
    DHCPv4ClientClassPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv4ClientClass'
      example:
        matchExpression: if a > b
        configuration: ""
        matchOffset: 1
        name: mc1
        description: custom description
        id: 103307
        type: DHCPv4ClientClass
        matchLength: 2
        userDefinedFields:
          key: userDefinedFields
        option: hardware
      required:
      - name
    DHCPv4ClientClassPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv4ClientClass'
      example:
        matchExpression: if a > b
        configuration: ""
        matchOffset: 1
        name: mc1
        description: custom description
        id: 103307
        type: DHCPv4ClientClass
        matchLength: 2
        userDefinedFields:
          key: userDefinedFields
        option: hardware
      required:
      - name
    ClientIdentifier:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          nullable: false
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        configuration:
          allOf:
          - $ref: '#/components/schemas/InlinedConfiguration'
          readOnly: true
          required:
          - id
      type: object
    ConfigurationPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/Configuration'
      example:
        checkWildcardValidation: IGNORE
        checkMxValidation: IGNORE
        checkNamesValidation: IGNORE
        checkNsValidation: IGNORE
        dnsFeedEnabled: true
        dnsFeedLicense: License Feed information
        description: Main configuration
        snmp:
          port: 161
          version: v1
          enabled: true
        checkMxCnameValidation: IGNORE
        type: Configuration
        checkIntegrityValidation: NONE
        sharedNetworkTagGroup: ""
        userDefinedFields:
          key: userDefinedFields
        dnsOptionInheritanceEnabled: true
        configurationGroup: Test Configuration Group
        checkSrvCnameValidation: IGNORE
        dnsZoneValidationEnabled: true
        keyAutoRegenerationEnabled: true
        name: name
        dnsConfigurationValidationEnabled: true
        id: 103307
        blockUsageCalculation: ADDRESS_ALLOCATION
        serverMonitoringEnabled: true
        dhcpConfigurationValidationEnabled: true
      required:
      - name
    ConfigurationPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/Configuration'
      example:
        checkWildcardValidation: IGNORE
        checkMxValidation: IGNORE
        checkNamesValidation: IGNORE
        checkNsValidation: IGNORE
        dnsFeedEnabled: true
        dnsFeedLicense: License Feed information
        description: Main configuration
        snmp:
          port: 161
          version: v1
          enabled: true
        checkMxCnameValidation: IGNORE
        type: Configuration
        checkIntegrityValidation: NONE
        sharedNetworkTagGroup: ""
        userDefinedFields:
          key: userDefinedFields
        dnsOptionInheritanceEnabled: true
        configurationGroup: Test Configuration Group
        checkSrvCnameValidation: IGNORE
        dnsZoneValidationEnabled: true
        keyAutoRegenerationEnabled: true
        name: name
        dnsConfigurationValidationEnabled: true
        id: 103307
        blockUsageCalculation: ADDRESS_ALLOCATION
        serverMonitoringEnabled: true
        dhcpConfigurationValidationEnabled: true
      required:
      - blockUsageCalculation
      - checkIntegrityValidation
      - checkMxCnameValidation
      - checkMxValidation
      - checkNamesValidation
      - checkNsValidation
      - checkSrvCnameValidation
      - checkWildcardValidation
      - dhcpConfigurationValidationEnabled
      - dnsConfigurationValidationEnabled
      - dnsFeedEnabled
      - dnsOptionInheritanceEnabled
      - dnsZoneValidationEnabled
      - keyAutoRegenerationEnabled
      - name
      - serverMonitoringEnabled
    AddressManagerDatabasePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/AddressManagerDatabase'
      example:
        compressionEnabled: true
        replicationStatus: ENROLLING
        type: AddressManagerDatabase
        replicationEnabled: true
        replicationRole: STANDALONE
        servers:
        - address: 10.10.10.10
          name: dns2
          enrollmentPercentComplete: 75
          replicationStatus: DISABLED
          id: 103307
          state: STANDALONE
          type: AddressManagerServer
          replicationLatency: PTS60
        - address: 10.10.10.10
          name: dns2
          enrollmentPercentComplete: 75
          replicationStatus: DISABLED
          id: 103307
          state: STANDALONE
          type: AddressManagerServer
          replicationLatency: PTS60
        entityCount: 100881
        size: 70169135
        activeSessions: 1
        latencyCriticalThreshold: P1D
        id: 103307
        state: STANDALONE
        lastBackupDateTime: 2022-09-09T15:16:50Z
        latencyWarningThreshold: PT1H
      required:
      - replicationEnabled
      - type
    LinkedZonePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedZone'
      example:
        id: 103307
        type: Zone
      required:
      - id
    DHCPv4CustomClientOptionDefinitionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
      required:
      - code
      - description
      - displayName
      - name
      - type
      - valueFormat
    DHCPVendorOptionDefinitionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
      required:
      - code
      - description
      - displayName
      - name
      - type
      - valueFormat
    DHCPv4CustomClientOptionDefinitionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
      required:
      - description
      - displayName
      - name
      - type
    DHCPVendorOptionDefinitionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
      required:
      - description
      - displayName
      - name
      - type
    DHCPv4ClientOptionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv4ClientOption'
      required:
      - type
    DHCPv4RawOptionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv4RawOption'
      required:
      - type
      - value
    DHCPv4ServiceOptionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv4ServiceOption'
      required:
      - type
    DHCPv6ClientOptionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv6ClientOption'
      required:
      - type
    DHCPv6RawOptionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv6RawOption'
      required:
      - type
      - value
    DHCPv6ServiceOptionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv6ServiceOption'
      required:
      - type
    DNSOptionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DNSOption'
      required:
      - type
    DNSRawOptionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DNSRawOption'
      required:
      - type
      - value
    StartOfAuthorityPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/StartOfAuthority'
      required:
      - type
    DHCPVendorOptionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPVendorOption'
      required:
      - definition
      - type
    DHCPv4ClientOptionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv4ClientOption'
      required:
      - type
    DHCPv4RawOptionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv4RawOption'
      required:
      - type
      - value
    DHCPv4ServiceOptionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv4ServiceOption'
      required:
      - type
    DHCPv6ClientOptionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv6ClientOption'
      required:
      - type
    DHCPv6RawOptionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv6RawOption'
      required:
      - type
      - value
    DHCPv6ServiceOptionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv6ServiceOption'
      required:
      - type
    DNSOptionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DNSOption'
      required:
      - type
    DNSRawOptionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DNSRawOption'
      required:
      - type
      - value
    StartOfAuthorityPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/StartOfAuthority'
      required:
      - type
    DHCPVendorOptionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPVendorOption'
      required:
      - type
    FullDeploymentPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/FullDeployment'
      required:
      - service
      - type
    DifferentialDeploymentPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DifferentialDeployment'
      required:
      - service
      - type
    QuickDeploymentPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/QuickDeployment'
      required:
      - type
    ValidationDeploymentPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/ValidationDeployment'
      required:
      - service
      - type
    SelectiveDeploymentPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/SelectiveDeployment'
      example:
        continueOnFailureEnabled: true
        method: SCHEDULED
        resources:
        - name: name
          id: 103307
          type: type
        - name: name
          id: 103307
          type: type
        percentComplete: 50
        type: SelectiveDeployment
        message: message
        dynamicRecordDeploymentStrategy: ABORT
        startDateTime: 2022-11-23T02:53:03Z
        recordScope: RELATED
        completionDateTime: 2022-11-23T02:53:05Z
        batchMode: DISABLED
        id: 103307
        state: PENDING
        user: ""
        status: CANCEL
      required:
      - resources
      - type
    DHCPDeploymentRolePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPDeploymentRole'
      required:
      - interfaces
      - roleType
      - type
    DNSDeploymentRolePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DNSDeploymentRole'
      required:
      - interfaces
      - roleType
      - type
    TFTPDeploymentRolePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/TFTPDeploymentRole'
      required:
      - server
      - type
    DHCPDeploymentRolePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPDeploymentRole'
      required:
      - roleType
      - type
    DNSDeploymentRolePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DNSDeploymentRole'
      required:
      - roleType
      - type
    TFTPDeploymentRolePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/TFTPDeploymentRole'
      required:
      - server
      - type
    DevicePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/Device'
      example:
        deviceType: ""
        addresses:
        - ""
        - ""
        configuration: ""
        deviceSubtype: ""
        name: name
        id: 103307
        type: Device
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    DevicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/Device'
      example:
        deviceType: ""
        addresses:
        - ""
        - ""
        configuration: ""
        deviceSubtype: ""
        name: name
        id: 103307
        type: Device
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    DeviceSubtypePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DeviceSubtype'
      example:
        name: name
        id: 103307
        type: DeviceSubtype
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    DeviceSubtypePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DeviceSubtype'
      example:
        name: name
        id: 103307
        type: DeviceSubtype
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    DeviceTypePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DeviceType'
      example:
        name: name
        id: 103307
        type: DeviceType
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    DeviceTypePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DeviceType'
      example:
        name: name
        id: 103307
        type: DeviceType
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    DiscoveredARPEntry:
      allOf:
      - $ref: '#/components/schemas/DiscoveredDevice'
      - properties:
          type:
            description: The resource type.
            enum:
            - DiscoveredARPEntry
            readOnly: true
            type: string
          device:
            allOf:
            - $ref: '#/components/schemas/DiscoveredDevice'
            readOnly: true
          address:
            readOnly: true
            type: string
          macAddress:
            readOnly: true
            type: string
          interface:
            allOf:
            - $ref: '#/components/schemas/DiscoveredInterface'
            readOnly: true
        type: object
      type: object
    DiscoveredDevice:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          readOnly: true
          type: string
      type: object
    DiscoveredHost:
      allOf:
      - $ref: '#/components/schemas/DiscoveredDevice'
      - properties:
          type:
            description: The resource type.
            enum:
            - DiscoveredHost
            readOnly: true
            type: string
          device:
            allOf:
            - $ref: '#/components/schemas/DiscoveredDevice'
            readOnly: true
          address:
            readOnly: true
            type: string
          macAddress:
            readOnly: true
            type: string
          interface:
            allOf:
            - $ref: '#/components/schemas/DiscoveredInterface'
            readOnly: true
        type: object
      type: object
    DiscoveredInterface:
      allOf:
      - $ref: '#/components/schemas/DiscoveredDevice'
      - properties:
          type:
            description: The resource type.
            enum:
            - DiscoveredInterface
            readOnly: true
            type: string
          device:
            allOf:
            - $ref: '#/components/schemas/DiscoveredDevice'
            readOnly: true
          name:
            readOnly: true
            type: string
          description:
            readOnly: true
            type: string
          interfaceIndex:
            format: int32
            readOnly: true
            type: integer
          macAddress:
            readOnly: true
            type: string
          speed:
            format: int32
            readOnly: true
            type: integer
          connector:
            readOnly: true
            type: string
          alias:
            readOnly: true
            type: string
        type: object
      type: object
    DiscoveredMACAddress:
      allOf:
      - $ref: '#/components/schemas/DiscoveredDevice'
      - properties:
          type:
            description: The resource type.
            enum:
            - DiscoveredMACAddress
            readOnly: true
            type: string
          device:
            allOf:
            - $ref: '#/components/schemas/DiscoveredDevice'
            readOnly: true
          macAddress:
            readOnly: true
            type: string
          portMode:
            enum:
            - TRUNK
            - ACCESS
            readOnly: true
            type: string
          interface:
            allOf:
            - $ref: '#/components/schemas/DiscoveredInterface'
            readOnly: true
        type: object
      type: object
    DiscoveredNetwork:
      allOf:
      - $ref: '#/components/schemas/DiscoveredDevice'
      - properties:
          type:
            description: The resource type.
            enum:
            - DiscoveredNetwork
            readOnly: true
            type: string
          device:
            allOf:
            - $ref: '#/components/schemas/DiscoveredDevice'
            readOnly: true
          range:
            readOnly: true
            type: string
          interface:
            allOf:
            - $ref: '#/components/schemas/DiscoveredInterface'
            readOnly: true
        type: object
      type: object
    DiscoveredRouter:
      allOf:
      - $ref: '#/components/schemas/DiscoveredDevice'
      - properties:
          type:
            description: The resource type.
            enum:
            - DiscoveredRouter
            readOnly: true
            type: string
          name:
            readOnly: true
            type: string
          description:
            readOnly: true
            type: string
          address:
            readOnly: true
            type: string
          location:
            readOnly: true
            type: string
        type: object
      type: object
    DiscoveredSwitch:
      allOf:
      - $ref: '#/components/schemas/DiscoveredDevice'
      - properties:
          type:
            description: The resource type.
            enum:
            - DiscoveredSwitch
            readOnly: true
            type: string
          name:
            readOnly: true
            type: string
          description:
            readOnly: true
            type: string
          address:
            readOnly: true
            type: string
          location:
            readOnly: true
            type: string
        type: object
      type: object
    DiscoveredVLAN:
      allOf:
      - $ref: '#/components/schemas/DiscoveredDevice'
      - properties:
          type:
            description: The resource type.
            enum:
            - DiscoveredVLAN
            readOnly: true
            type: string
          device:
            allOf:
            - $ref: '#/components/schemas/DiscoveredDevice'
            readOnly: true
          name:
            readOnly: true
            type: string
          vlanId:
            format: int32
            readOnly: true
            type: integer
          interface:
            allOf:
            - $ref: '#/components/schemas/DiscoveredInterface'
            readOnly: true
        type: object
      type: object
    Event:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Event
          type: string
        eventType:
          description: The log level of the event.
          enum:
          - INFO
          - WARNING
          - ERROR
          - SUCCESS
          - FAILED
          - NOT_DEPLOYED
          - INVALID
          - NO_ROLE
          - RESPONSE_POLICY_ZONES_NOT_DEPLOYED
          - VALID
          type: string
        category:
          description: "The classification of the event, such as an APPLICATION or\
            \ DEPLOYMENT event."
          enum:
          - APPLICATION
          - DATABASE_MAINTENANCE
          - DATA_CHECKER
          - DATA_COLLECTION
          - DDNS_NOTIFICATION
          - DEPLOYMENT
          - DEPLOYMENT_DATA_VALIDATION
          - DHCP_ALERT
          - DHCP_LEASE_SYNCHRONIZATION
          - DNSSEC_KEY_EXPIRATION
          - IP_RECONCILIATION
          - IP_TEMPLATE
          - MIGRATION
          - REPORT_SCHEDULER
          - SERVER_HIGH_AVAILABILITY
          - SERVER_MONITORING
          - SOFTWARE_UPDATE
          - SSO_MANAGEMENT
          - SYSTEM_MAINTENANCE
          - TRUST_RELATIONSHIP
          - WORKFLOW_REQUEST
          - ZONE_TEMPLATE
          type: string
        subcategory:
          description: The subcategory classification of the event.
          enum:
          - DNS
          - DHCPv4
          - DHCPv6
          - TFTP
          type: string
        source:
          $ref: '#/components/schemas/Resource'
        sourceName:
          description: The name of the software component involved in the event.
          type: string
        message:
          description: The message describing the event.
          type: string
        dateTime:
          description: The date and time that the event occurred.
          format: date-time
          type: string
        details:
          type: object
        taskId:
          description: The ID of the task performed.
          format: uuid
          type: string
        payload:
          description: The payload associated with the task.
          type: string
        user:
          $ref: '#/components/schemas/User'
      type: object
    FileInfoPostRequestBody:
      type: object
    TFTPFilePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/TFTPFile'
      required:
      - name
      - type
    TFTPFolderPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/TFTPFolder'
      required:
      - name
      - type
    TFTPFilePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/TFTPFile'
      required:
      - name
      - type
    TFTPFolderPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/TFTPFolder'
      required:
      - name
      - type
    UserGroupPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/UserGroup'
      example:
        groupType: ADDRESS_MANAGER
        administratorPrivilege: true
        name: Test group
        description: SSO Group 1
        id: 103307
        type: UserGroup
        authenticator:
          name: LDAP authenticator
          id: 103307
          type: Authenticator
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    LinkedUserGroupPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedUserGroup'
      example:
        id: 103307
        type: UserGroup
      required:
      - id
    UserGroupPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/UserGroup'
      example:
        groupType: ADDRESS_MANAGER
        administratorPrivilege: true
        name: Test group
        description: SSO Group 1
        id: 103307
        type: UserGroup
        authenticator:
          name: LDAP authenticator
          id: 103307
          type: Authenticator
        userDefinedFields:
          key: userDefinedFields
      required:
      - administratorPrivilege
      - groupType
      - name
    ResourceImportPostRequestBody:
      properties:
        fileInfo:
          $ref: '#/components/schemas/ResourceImport'
        fileData:
          description: The import file contents
          format: binary
          type: string
      required:
      - fileData
      - fileInfo
      type: object
    ResponsePolicyItemImportPostRequestBody:
      properties:
        fileInfo:
          $ref: '#/components/schemas/ResponsePolicyItemImport'
        fileData:
          format: binary
          type: string
      required:
      - fileData
      - fileInfo
      type: object
    PublishedInterfacePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/PublishedInterface'
      example:
        server: ""
        secondaryAddress: 10.10.10.5
        configuration: ""
        name: name
        id: 103307
        primaryAddress: 10.10.0.1
        type: PublishedInterface
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
      - primaryAddress
      - type
    PublishedInterfacePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/PublishedInterface'
      example:
        server: ""
        secondaryAddress: 10.10.10.5
        configuration: ""
        name: name
        id: 103307
        primaryAddress: 10.10.0.1
        type: PublishedInterface
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
      - primaryAddress
      - type
    IPv4GroupPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4Group'
      example:
        configuration: ""
        name: Example IPv4 Group
        range: range
        id: 103307
        type: IPv4Group
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
      - range
      - type
    IPv4GroupPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4Group'
      example:
        configuration: ""
        name: Example IPv4 Group
        range: range
        id: 103307
        type: IPv4Group
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
      - range
    KeyDistributionCenterPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/KeyDistributionCenter'
      example:
        port: 88
        name: KDC-1
        host: 192.168.0.10
        id: 103307
        type: KeyDistributionCenter
        userDefinedFields:
          key: userDefinedFields
      required:
      - host
      - name
    KeyDistributionCenterPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/KeyDistributionCenter'
      example:
        port: 88
        name: KDC-1
        host: 192.168.0.10
        id: 103307
        type: KeyDistributionCenter
        userDefinedFields:
          key: userDefinedFields
      required:
      - host
      - name
      - port
    DHCPv4Lease:
      allOf:
      - $ref: '#/components/schemas/Lease'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPv4Lease
            type: string
        type: object
      type: object
    DHCPv6Lease:
      allOf:
      - $ref: '#/components/schemas/Lease'
      - properties:
          type:
            description: The resource type.
            enum:
            - DHCPv6Lease
            type: string
        type: object
      type: object
    Lease:
      discriminator:
        propertyName: type
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          type: string
      type: object
    LocationPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/Location'
      example:
        country: JP
        subdivision: "04"
        localizedName: 東京オフィス
        code: JP TYO BCN
        locode: JP TYO
        latitude: 35.683
        name: name
        description: Tokyo Office
        id: 103307
        type: Location
        userDefinedFields:
          key: userDefinedFields
        longitude: 139.75
      required:
      - code
      - name
    LocationPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/Location'
      example:
        country: JP
        subdivision: "04"
        localizedName: 東京オフィス
        code: JP TYO BCN
        locode: JP TYO
        latitude: 35.683
        name: name
        description: Tokyo Office
        id: 103307
        type: Location
        userDefinedFields:
          key: userDefinedFields
        longitude: 139.75
    ImportLog:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - ImportLog
          type: string
        name:
          description: The name of the log file.
          example: server.log
          readOnly: true
          type: string
        size:
          description: "The size of the log file, in bytes."
          example: 10193
          format: int64
          readOnly: true
          type: integer
        contents:
          description: The contents of the log file.
          readOnly: true
          type: string
      type: object
    MACAddressPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/MACAddress'
      example:
        address: 00-00-5E-00-53-AF
        configuration: ""
        name: name
        id: 103307
        type: MACAddress
        macPool:
          name: name
          id: 103307
          type: type
        userDefinedFields:
          key: userDefinedFields
      required:
      - address
    LinkedMACAddressPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedMACAddress'
      example:
        id: 103307
        type: MACAddress
      required:
      - id
    MACAddressPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/MACAddress'
      example:
        address: 00-00-5E-00-53-AF
        configuration: ""
        name: name
        id: 103307
        type: MACAddress
        macPool:
          name: name
          id: 103307
          type: type
        userDefinedFields:
          key: userDefinedFields
      required:
      - address
    MACPoolPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/MACPool'
      example:
        configuration: ""
        instantDeploymentEnabled: true
        name: name
        id: 103307
        type: MACPool
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
      - type
    MACPoolPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/MACPool'
      example:
        configuration: ""
        instantDeploymentEnabled: true
        name: name
        id: 103307
        type: MACPool
        userDefinedFields:
          key: userDefinedFields
      required:
      - instantDeploymentEnabled
      - name
      - type
    IPv4BlockMergePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4BlockMerge'
      required:
      - blocks
      - destination
    IPv4NetworkMergePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4NetworkMerge'
      required:
      - destination
      - networks
    IPv4DHCPRangeMergePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4DHCPRangeMerge'
      required:
      - destination
      - ranges
    IPMovePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPMove'
      required:
      - address
      - type
    DNSMovePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DNSMove'
      required:
      - absoluteName
      - type
    DeploymentRoleMovePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DeploymentRoleMove'
      required:
      - destination
      - roleTypes
      - type
    LinkedNamingPolicyPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedNamingPolicy'
      example:
        inheritanceEnabled: true
        appliedTypes:
        - ACL
        - ACL
        id: 103307
        type: NamingPolicy
      required:
      - id
    NamingPolicyPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicy'
      example:
        policyValues:
        - name: naming policy value name
          id: 103307
          type: type
        - name: naming policy value name
          id: 103307
          type: type
        policyRestrictions:
        - name: name
          restrictions:
          - matchType: Exact
            value: host
          - matchType: Exact
            value: host
          id: 103307
          type: NamingPolicyRestriction
          userDefinedFields:
            key: userDefinedFields
        - name: name
          restrictions:
          - matchType: Exact
            value: host
          - matchType: Exact
            value: host
          id: 103307
          type: NamingPolicyRestriction
          userDefinedFields:
            key: userDefinedFields
        name: naming policy name
        id: 103307
        type: NamingPolicy
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    NamingPolicyPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicy'
      example:
        policyValues:
        - name: naming policy value name
          id: 103307
          type: type
        - name: naming policy value name
          id: 103307
          type: type
        policyRestrictions:
        - name: name
          restrictions:
          - matchType: Exact
            value: host
          - matchType: Exact
            value: host
          id: 103307
          type: NamingPolicyRestriction
          userDefinedFields:
            key: userDefinedFields
        - name: name
          restrictions:
          - matchType: Exact
            value: host
          - matchType: Exact
            value: host
          id: 103307
          type: NamingPolicyRestriction
          userDefinedFields:
            key: userDefinedFields
        name: naming policy name
        id: 103307
        type: NamingPolicy
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    NamingPolicyRestrictionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyRestriction'
      example:
        name: name
        restrictions:
        - matchType: Exact
          value: host
        - matchType: Exact
          value: host
        id: 103307
        type: NamingPolicyRestriction
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
      - restrictions
    NamingPolicyRestrictionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyRestriction'
      example:
        name: name
        restrictions:
        - matchType: Exact
          value: host
        - matchType: Exact
          value: host
        id: 103307
        type: NamingPolicyRestriction
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
      - restrictions
    NamingPolicyConnectorValuePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyConnectorValue'
      required:
      - connector
      - name
      - type
    NamingPolicyIncrementalValuePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
      required:
      - incrementType
      - incrementalRole
      - name
      - paddingType
      - type
    NamingPolicyIntegerValuePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyIntegerValue'
      required:
      - name
      - type
    NamingPolicyRequiredValuePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyRequiredValue'
      required:
      - elements
      - name
      - type
    NamingPolicyTextValuePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyTextValue'
      required:
      - name
      - textType
      - type
    NamingPolicyConnectorValuePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyConnectorValue'
      required:
      - connector
      - name
      - type
    NamingPolicyIncrementalValuePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
      required:
      - incrementType
      - incrementalRole
      - name
      - paddingType
      - type
    NamingPolicyIntegerValuePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyIntegerValue'
      required:
      - name
      - type
    NamingPolicyRequiredValuePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyRequiredValue'
      required:
      - elements
      - name
      - type
    NamingPolicyTextValuePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyTextValue'
      required:
      - name
      - textType
      - type
    IPv4NetworkPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4Network'
      required:
      - range
      - type
    IPv6NetworkPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv6Network'
      required:
      - range
      - type
    IPv4NetworkPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4Network'
      required:
      - defaultZonesInherited
      - range
      - restrictedZonesInherited
      - reverseZoneSigned
      - type
    IPv6NetworkPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv6Network'
      required:
      - range
      - type
    Operation:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - Operation
          type: string
      type: object
    ResponsePolicyItemPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/ResponsePolicyItem'
      example:
        name: host.example.com
        id: 103307
        type: ResponsePolicyItem
      required:
      - name
    ResponsePolicyItemPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/ResponsePolicyItem'
      example:
        name: host.example.com
        id: 103307
        type: ResponsePolicyItem
      required:
      - name
    IPv4DHCPRangePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4DHCPRange'
      required:
      - range
      - type
    IPv6DHCPRangePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv6DHCPRange'
      required:
      - range
      - type
    IPv4DHCPRangePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4DHCPRange'
      required:
      - exclusionRanges
      - range
      - splitAroundStaticAddresses
      - type
    IPv6DHCPRangePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv6DHCPRange'
      required:
      - range
      - type
    KerberosRealmPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/KerberosRealm'
      example:
        configuration: ""
        domain: EXAMPLE.COMPANY.NET
        name: example.company.net
        id: 103307
        type: KerberosRealm
        userDefinedFields:
          key: userDefinedFields
      required:
      - domain
      - name
    KerberosRealmPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/KerberosRealm'
      example:
        configuration: ""
        domain: EXAMPLE.COMPANY.NET
        name: example.company.net
        id: 103307
        type: KerberosRealm
        userDefinedFields:
          key: userDefinedFields
      required:
      - domain
      - name
    IPv4ReconciliationPolicyPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
      required:
      - discoveryMethod
      - startDateTime
      - type
    IPv6ReconciliationPolicyPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
      required:
      - discoveryMethod
      - startDateTime
      - type
    IPv4ReconciliationPolicyPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
      required:
      - blackHoleVlan
      - discoveryMethod
      - enabled
      - skipFqdnEnabled
      - startDateTime
      - trunkDefaultVlan
      - type
    IPv6ReconciliationPolicyPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
      required:
      - blackHoleVlan
      - discoveryMethod
      - enabled
      - skipFqdnEnabled
      - startDateTime
      - trunkDefaultVlan
      - type
    LinkedHostRecordPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedHostRecord'
      required:
      - id
    LinkedExternalHostRecordPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedExternalHostRecord'
      required:
      - id
    AliasRecordPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/AliasRecord'
      required:
      - linkedRecord
      - name
      - type
    ExternalHostRecordPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/ExternalHostRecord'
      required:
      - name
      - type
    GenericRecordPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/GenericRecord'
      required:
      - name
      - rdata
      - recordType
      - type
    HINFORecordPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/HINFORecord'
      required:
      - name
      - type
    HostRecordPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/HostRecord'
      required:
      - addresses
      - name
      - type
    MXRecordPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/MXRecord'
      required:
      - linkedRecord
      - name
      - type
    NAPTRRecordPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/NAPTRRecord'
      required:
      - name
      - type
    SRVRecordPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/SRVRecord'
      required:
      - linkedRecord
      - name
      - type
    TXTRecordPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/TXTRecord'
      required:
      - name
      - type
    AliasRecordPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/AliasRecord'
      required:
      - linkedRecord
      - name
    ExternalHostRecordPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/ExternalHostRecord'
      required:
      - name
    GenericRecordPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/GenericRecord'
      required:
      - name
      - rdata
    HINFORecordPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/HINFORecord'
      required:
      - name
    HostRecordPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/HostRecord'
      required:
      - name
      - reverseRecord
    MXRecordPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/MXRecord'
      required:
      - linkedRecord
      - name
      - priority
    NAPTRRecordPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/NAPTRRecord'
      required:
      - name
      - order
      - preference
    SRVRecordPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/SRVRecord'
      required:
      - linkedRecord
      - name
      - port
      - priority
      - weight
    TXTRecordPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/TXTRecord'
      required:
      - name
    ResponsePolicyPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/ResponsePolicy'
      example:
        configuration: ""
        policyType: ALLOWLIST
        name: Block Response Policy
        id: 103307
        redirectTarget: domain.example.corp
        type: ResponsePolicy
        ttl: 3600
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
      - policyType
    ResponsePolicyPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/ResponsePolicy'
      example:
        configuration: ""
        policyType: ALLOWLIST
        name: Block Response Policy
        id: 103307
        redirectTarget: domain.example.corp
        type: ResponsePolicy
        ttl: 3600
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
      - policyType
    LinkedIPv4NetworkPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedIPv4Network'
      required:
      - id
    LinkedIPv4BlockPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedIPv4Block'
      required:
      - id
    LinkedViewPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedView'
      required:
      - id
    AddressManager:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - AddressManager
          type: string
        name:
          description: The name of the resource.
          example: name
          type: string
        userDefinedFields:
          additionalProperties:
            description: User-defined fields set for the resource.
            type: string
          description: User-defined fields set for the resource.
          type: object
        version:
          description: The Address Manager version.
          type: string
        hostname:
          description: The hostname of the Address Manager appliance
          type: string
      type: object
    ServerGroupPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/ServerGroup'
      example:
        configuration: ""
        name: name
        id: 103307
        type: ServerGroup
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    ServerGroupPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/ServerGroup'
      example:
        configuration: ""
        name: name
        id: 103307
        type: ServerGroup
        userDefinedFields:
          key: userDefinedFields
    LinkedServerPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedServer'
      required:
      - id
    LinkedHAServerPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedHAServer'
      required:
      - id
    ServerPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/Server'
      required:
      - interfaces
      - name
      - profile
      - type
    HAServerPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/HAServer'
      required:
      - activeServer
      - interfaces
      - passiveServer
      - type
    AddressManagerServerPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/AddressManagerServer'
      example:
        address: 10.10.10.10
        name: dns2
        enrollmentPercentComplete: 75
        replicationStatus: DISABLED
        id: 103307
        state: STANDALONE
        type: AddressManagerServer
        replicationLatency: PTS60
      required:
      - address
    ServerPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/Server'
      required:
      - checkIntegrityValidation
      - checkMxCnameValidation
      - checkMxValidation
      - checkNamesValidation
      - checkNsValidation
      - checkSrvCnameValidation
      - checkWildcardValidation
      - dedicatedManagementEnabled
      - dhcpConfigurationValidationEnabled
      - dnsConfigurationValidationEnabled
      - dnsZoneValidationEnabled
      - haBackboneEnabled
      - hsmSupportEnabled
      - interfaceRedundancyEnabled
      - name
      - overrideConfigurationLevelDhcpValidation
      - overrideConfigurationLevelDnsValidation
      - profile
      - type
    HAServerPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/HAServer'
      required:
      - checkIntegrityValidation
      - checkMxCnameValidation
      - checkMxValidation
      - checkNamesValidation
      - checkNsValidation
      - checkSrvCnameValidation
      - checkWildcardValidation
      - dhcpConfigurationValidationEnabled
      - dnsConfigurationValidationEnabled
      - dnsZoneValidationEnabled
      - haBackboneEnabled
      - name
      - overrideConfigurationLevelDhcpValidation
      - overrideConfigurationLevelDnsValidation
      - type
    KerberosServicePrincipalPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/KerberosServicePrincipal'
      example:
        password: password
        name: DHCP/dhcp1.bcn.com
        id: 103307
        type: KerberosServicePrincipal
        keyVersionNumber: 1
        userDefinedFields:
          key: userDefinedFields
      required:
      - keyVersionNumber
      - name
      - password
    KerberosServicePrincipalPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/KerberosServicePrincipal'
      example:
        password: password
        name: DHCP/dhcp1.bcn.com
        id: 103307
        type: KerberosServicePrincipal
        keyVersionNumber: 1
        userDefinedFields:
          key: userDefinedFields
      required:
      - keyVersionNumber
      - name
    AnycastServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/AnycastService'
      required:
      - addresses
      - enabled
      - routing
      - type
    DHCPActivityServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPActivityService'
      required:
      - dhcpv4Enabled
      - dhcpv6Enabled
      - enabled
      - maximumBufferedEvents
      - type
    DHCPStatisticsServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPStatisticsService'
      required:
      - dhcpv4Enabled
      - dhcpv6Enabled
      - enabled
      - maximumBufferedEvents
      - type
    DNSActivityServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DNSActivityService'
      required:
      - enabled
      - filters
      - maximumBufferedEvents
      - type
    DNSResolverServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DNSResolverService'
      required:
      - servers
      - type
    DNSStatisticsServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DNSStatisticsService'
      required:
      - enabled
      - maximumBufferedEvents
      - pollingInterval
      - type
    FirewallServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/FirewallService'
      required:
      - enabled
      - pingAllowed
      - type
    GatewayServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/GatewayService'
      required:
      - enabled
      - type
    InterfacesServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/InterfacesService'
      required:
      - dedicatedManagementEnabled
      - interfaces
      - routes
      - type
    LicenseServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/LicenseService'
      required:
      - clientId
      - key
      - type
    NTPServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/NTPService'
      required:
      - enabled
      - servers
      - type
    SNMPServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/SNMPService'
      required:
      - contactEmail
      - contactName
      - description
      - enabled
      - logLevel
      - snmpv1
      - snmpv2c
      - snmpv3
      - trapServers
      - type
    SSHServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/SSHService'
      required:
      - enabled
      - tacacsPlusAuthentication
      - type
    SyslogServicePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/SyslogService'
      required:
      - servers
      - type
    UserSessionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/UserSession'
      example:
        apiTokenExpirationDateTime: 2022-09-15T17:52:07Z
        logoutDateTime: 2022-09-14T19:45:03Z
        readOnly: true
        loginDateTime: 2022-09-14T17:45:03Z
        type: UserSession
        password: password
        apiToken: VZoO2Z0BjBaJyvuhE4vNJRWqI9upwDHk70UNi0Ez
        response: "Authentication Error: Ensure that your username and password are\
          \ correct."
        id: 103307
        state: LOGGED_IN
        user:
          accountLocked: true
          administrativeAccessLevels:
            key: administrativeAccessLevels
          x509Required: true
          type: User
          userDefinedFields:
            key: userDefinedFields
          accessType: GUI
          password: password
          phoneNumber: 555-1234
          name: admin
          id: 103307
          passwordResetRequired: true
          authenticator: ""
          securityPrivilege: NO_ACCESS
          email: user@example.com
          historyPrivilege: HIDE
        authenticator:
          secondaryAuthenticator: ""
          name: LDAP authenticator
          id: 103307
          type: Authenticator
          userDefinedFields:
            key: userDefinedFields
        remoteAddress: 192.168.1.1
        username: admin
      required:
      - password
      - username
    AuditDataSettingsPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/AuditDataSettings'
      required:
      - exportEnabled
      - type
    GlobalSettingsPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/GlobalSettings'
      required:
      - customReverseZoneFormatsAllowed
      - disclaimerEnabled
      - mandatoryCommentsEnabled
      - rememberLastAddressEnabled
      - sessionTimeout
      - type
    LogLevelSettingsPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/LogLevelSettings'
      required:
      - addressManager
      - discoveryEngine
      - monitoringService
      - reconciliationService
      - restV2
      - rrdTool
      - snmpClient
      - type
      - zoneImport
    LoginPolicySettingsPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/LoginPolicySettings'
      required:
      - delayDuration
      - enabled
      - failureLimit
      - failureLimitPeriod
      - type
    MonitoringSettingsPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/MonitoringSettings'
      required:
      - addressManagerMonitoring
      - serverMonitoring
      - type
    PasswordPolicySettingsPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/PasswordPolicySettings'
      required:
      - digitRequired
      - enabled
      - mixedCaseRequired
      - specialCharacterRequired
      - type
    SAMLServiceProviderSettingsPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/SAMLServiceProviderSettings'
      required:
      - addressManagerFqdn
      - encryptionEnabled
      - nameIdFormat
      - organizationName
      - organizationUrl
      - signingEnabled
      - type
    SSOEnforcementSettingsPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/SSOEnforcementSettings'
      required:
      - enabled
      - type
    SystemSettingsPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/SystemSettings'
      required:
      - interfaceRedundancyEnabled
      - type
    TSIGKeyPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/TSIGKey'
      example:
        keyGenerationDateTime: 2023-01-06T16:34:49.797Z
        privateKey: privateKey
        configuration: ""
        name: name
        length: 1024
        id: 103307
        state: GENERATED
        type: TSIGKey
        userDefinedFields:
          key: userDefinedFields
        algorithm: MD5
      required:
      - algorithm
      - length
      - name
      - type
    TSIGKeyPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/TSIGKey'
      example:
        keyGenerationDateTime: 2023-01-06T16:34:49.797Z
        privateKey: privateKey
        configuration: ""
        name: name
        length: 1024
        id: 103307
        state: GENERATED
        type: TSIGKey
        userDefinedFields:
          key: userDefinedFields
        algorithm: MD5
      required:
      - algorithm
      - length
      - name
      - type
    DNSSECSigningPolicyPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DNSSECSigningPolicy'
      example:
        keySigningKeyAlgorithm: ECDSAP256SHA256
        keySigningKeyValidityPeriod: PT8640H
        zoneSigningKeyProtectionType: MODULE
        zoneSigningKeyAlgorithm: ECDSAP256SHA256
        keySigningKeyLength: 384
        zoneSigningKeyOverrideTtl: PT24H
        type: DNSSECSigningPolicy
        zoneSigningKeyRolloverMethod: DOUBLE_SIGNING
        keySigningKeyOverlapPeriod: PT336H
        userDefinedFields:
          key: userDefinedFields
        zoneSigningKeySigningPeriod: PT72H
        zoneSigningKeyLength: 384
        keySigningKeyProtectionType: MODULE
        keyProvider: ADDRESS_MANAGER
        zoneSigningKeyValidityPeriod: PT720H
        name: name
        signatureDigestAlgorithm: SHA1
        signatureValidityPeriod: PT240H
        keySigningKeyOverrideTtl: PT24H
        id: 103307
        keySigningKeySigningPeriod: PT96H
        signatureResigningPeriod: PT48H
        keySigningKeyRolloverMethod: DOUBLE_SIGNING
        zoneSigningKeyOverlapPeriod: PT168H
      required:
      - keyProvider
      - keySigningKeyAlgorithm
      - keySigningKeyLength
      - keySigningKeyOverlapPeriod
      - keySigningKeyRolloverMethod
      - keySigningKeyValidityPeriod
      - name
      - signatureDigestAlgorithm
      - signatureResigningPeriod
      - signatureValidityPeriod
      - zoneSigningKeyAlgorithm
      - zoneSigningKeyLength
      - zoneSigningKeyOverlapPeriod
      - zoneSigningKeyRolloverMethod
      - zoneSigningKeyValidityPeriod
    DNSSECSigningPolicyPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DNSSECSigningPolicy'
      example:
        keySigningKeyAlgorithm: ECDSAP256SHA256
        keySigningKeyValidityPeriod: PT8640H
        zoneSigningKeyProtectionType: MODULE
        zoneSigningKeyAlgorithm: ECDSAP256SHA256
        keySigningKeyLength: 384
        zoneSigningKeyOverrideTtl: PT24H
        type: DNSSECSigningPolicy
        zoneSigningKeyRolloverMethod: DOUBLE_SIGNING
        keySigningKeyOverlapPeriod: PT336H
        userDefinedFields:
          key: userDefinedFields
        zoneSigningKeySigningPeriod: PT72H
        zoneSigningKeyLength: 384
        keySigningKeyProtectionType: MODULE
        keyProvider: ADDRESS_MANAGER
        zoneSigningKeyValidityPeriod: PT720H
        name: name
        signatureDigestAlgorithm: SHA1
        signatureValidityPeriod: PT240H
        keySigningKeyOverrideTtl: PT24H
        id: 103307
        keySigningKeySigningPeriod: PT96H
        signatureResigningPeriod: PT48H
        keySigningKeyRolloverMethod: DOUBLE_SIGNING
        zoneSigningKeyOverlapPeriod: PT168H
      required:
      - keyProvider
      - keySigningKeyAlgorithm
      - keySigningKeyLength
      - keySigningKeyOverlapPeriod
      - keySigningKeyRolloverMethod
      - keySigningKeyValidityPeriod
      - name
      - signatureDigestAlgorithm
      - signatureResigningPeriod
      - signatureValidityPeriod
      - zoneSigningKeyAlgorithm
      - zoneSigningKeyLength
      - zoneSigningKeyOverlapPeriod
      - zoneSigningKeyRolloverMethod
      - zoneSigningKeyValidityPeriod
    IPv4BlockSplitPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4BlockSplit'
      required:
      - block
      - type
    IPv4NetworkSplitPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4NetworkSplit'
      required:
      - network
      - networkCount
      - type
    DHCPv4SubclassPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv4Subclass'
      example:
        configuration: ""
        name: name
        description: description
        id: 103307
        type: DHCPv4Subclass
        value: value
        userDefinedFields:
          key: userDefinedFields
      required:
      - value
    DHCPv4SubclassPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPv4Subclass'
      example:
        configuration: ""
        name: name
        description: description
        id: 103307
        type: DHCPv4Subclass
        value: value
        userDefinedFields:
          key: userDefinedFields
      required:
      - value
    TagGroupPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/TagGroup'
      example:
        name: EMEA Tag Group
        id: 103307
        type: TagGroup
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    TagGroupPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/TagGroup'
      example:
        name: EMEA Tag Group
        id: 103307
        type: TagGroup
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    LinkedTagPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedTag'
      example:
        id: 103307
        type: Tag
      required:
      - id
    TagPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/Tag'
      example:
        name: UK Office
        id: 103307
        type: Tag
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    TagPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/Tag'
      example:
        name: UK Office
        id: 103307
        type: Tag
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    TaskPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/Task'
      example:
        startDateTime: 2022-01-15T00:00:00Z
        dueDateTime: 2022-01-25T00:00:00Z
        name: task1
        comment: A custom comment.
        id: 103307
        state: NOT_STARTED
        percentComplete: 8
        type: Task
        priority: ALL
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
      - percentComplete
      - priority
      - state
    TaskPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/Task'
      example:
        startDateTime: 2022-01-15T00:00:00Z
        dueDateTime: 2022-01-25T00:00:00Z
        name: task1
        comment: A custom comment.
        id: 103307
        state: NOT_STARTED
        percentComplete: 8
        type: Task
        priority: ALL
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
      - percentComplete
      - priority
      - state
    IPv4TemplateApplicationPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4TemplateApplication'
      required:
      - type
    ZoneTemplateApplicationPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/ZoneTemplateApplication'
      required:
      - type
    IPv4DHCPRangeTemplateItemPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
      required:
      - rangeDefinitionFormat
      - startOffset
      - type
    IPv4GroupTemplateItemPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4GroupTemplateItem'
      required:
      - name
      - rangeDefinitionFormat
      - size
      - startOffset
      - type
    IPv4ReservedRangeTemplateItemPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
      required:
      - rangeDefinitionFormat
      - size
      - startOffset
      - type
    IPv4DHCPRangeTemplateItemPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
      required:
      - rangeDefinitionFormat
      - splitAroundStaticAddresses
      - startOffset
      - type
    IPv4GatewayTemplateItemPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4GatewayTemplateItem'
      required:
      - rangeDefinitionFormat
      - startOffset
      - type
    IPv4GroupTemplateItemPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4GroupTemplateItem'
      required:
      - name
      - rangeDefinitionFormat
      - size
      - startOffset
      - type
    IPv4ReservedRangeTemplateItemPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
      required:
      - rangeDefinitionFormat
      - size
      - startOffset
      - type
    IPv4TemplatePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4Template'
      required:
      - name
      - type
    ZoneTemplatePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/ZoneTemplate'
      required:
      - name
      - type
    IPv4TemplatePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/IPv4Template'
      required:
      - name
      - type
    ZoneTemplatePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/ZoneTemplate'
      required:
      - name
      - type
    TFTPGroupPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/TFTPGroup'
      example:
        configuration: ""
        name: TFTP GROUP 1
        id: 103307
        type: TFTPGroup
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    TFTPGroupPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/TFTPGroup'
      example:
        configuration: ""
        name: TFTP GROUP 1
        id: 103307
        type: TFTPGroup
        userDefinedFields:
          key: userDefinedFields
    TransactionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      example:
        transactionType: UNDO
        revertingTransaction: ""
        description: Zone was moved
        comment: Moved zone to a new view.
        id: 103307
        type: Transaction
        operation: ADD_AAAA_RECORD
        user:
          accountLocked: true
          administrativeAccessLevels:
            key: administrativeAccessLevels
          x509Required: true
          type: User
          userDefinedFields:
            key: userDefinedFields
          accessType: GUI
          password: password
          phoneNumber: 555-1234
          name: admin
          id: 103307
          passwordResetRequired: true
          authenticator: ""
          securityPrivilege: NO_ACCESS
          email: user@example.com
          historyPrivilege: HIDE
        transactionId: 3149
        creationDateTime: 2022-11-15T19:48:05Z
      required:
      - transactionId
      - transactionType
    TrustRelationshipPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/TrustRelationship'
      example:
        keyGenerationDateTime: 2022-09-14T19:35:37Z
        password: apiPassword
        address: 192.168.1.1
        id: 103307
        state: TRUSTED
        type: TrustRelationship
        username: apiUser
      required:
      - address
      - password
      - username
    UserDefinedFieldDefinitionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/UserDefinedFieldDefinition'
      example:
        displayName: BlueCat Gateway
        defaultValue: all
        dataType: BOOLEAN
        name: BlueCatGateway
        validationProperties:
          min: 3
          max: 1000
          minLength: 0
          pattern: '*@b.co*'
          maxLength: 10
        predefinedValues:
        - predefinedValues
        - predefinedValues
        id: 103307
        type: UserDefinedFieldDefinition
        required: true
        resourceType: ACL
      required:
      - dataType
      - displayName
      - name
      - resourceType
    UserDefinedFieldDefinitionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/UserDefinedFieldDefinition'
      example:
        displayName: BlueCat Gateway
        defaultValue: all
        dataType: BOOLEAN
        name: BlueCatGateway
        validationProperties:
          min: 3
          max: 1000
          minLength: 0
          pattern: '*@b.co*'
          maxLength: 10
        predefinedValues:
        - predefinedValues
        - predefinedValues
        id: 103307
        type: UserDefinedFieldDefinition
        required: true
        resourceType: ACL
      required:
      - displayName
      - resourceType
    UserDefinedLinkDefinitionPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/UserDefinedLinkDefinition'
      example:
        sourceTypes:
        - DenyMACPool
        - DenyMACPool
        displayName: UDL IP4Addr to IP4Block
        name: UDL IP4Addr to IP4Block
        description: A UDL to link IPv4 Addresses to IPv4 Blocks.
        id: 103307
        destinationTypes:
        - DenyMACPool
        - DenyMACPool
        type: UserDefinedLinkDefinition
      required:
      - destinationTypes
      - displayName
      - name
      - sourceTypes
    UserDefinedLinkDefinitionPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/UserDefinedLinkDefinition'
      example:
        sourceTypes:
        - DenyMACPool
        - DenyMACPool
        displayName: UDL IP4Addr to IP4Block
        name: UDL IP4Addr to IP4Block
        description: A UDL to link IPv4 Addresses to IPv4 Blocks.
        id: 103307
        destinationTypes:
        - DenyMACPool
        - DenyMACPool
        type: UserDefinedLinkDefinition
      required:
      - destinationTypes
      - displayName
      - sourceTypes
    UserDefinedLinkedResourcePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/UserDefinedLinkedResource'
      example:
        linkDescription: Sample description.
        linkDefinition: ""
        id: 103307
        type: UserDefinedLinkedResource
      required:
      - id
      - linkDefinition
    LinkedUserPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/LinkedUser'
      example:
        id: 103307
        type: User
      required:
      - id
    UserPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/User'
      example:
        accountLocked: true
        administrativeAccessLevels:
          key: administrativeAccessLevels
        x509Required: true
        type: User
        userDefinedFields:
          key: userDefinedFields
        accessType: GUI
        password: password
        phoneNumber: 555-1234
        name: admin
        id: 103307
        passwordResetRequired: true
        authenticator: ""
        securityPrivilege: NO_ACCESS
        email: user@example.com
        historyPrivilege: HIDE
      required:
      - accessType
      - email
      - name
      - securityPrivilege
    UserPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/User'
      example:
        accountLocked: true
        administrativeAccessLevels:
          key: administrativeAccessLevels
        x509Required: true
        type: User
        userDefinedFields:
          key: userDefinedFields
        accessType: GUI
        password: password
        phoneNumber: 555-1234
        name: admin
        id: 103307
        passwordResetRequired: true
        authenticator: ""
        securityPrivilege: NO_ACCESS
        email: user@example.com
        historyPrivilege: HIDE
      required:
      - accessType
      - accountLocked
      - authenticator
      - email
      - historyPrivilege
      - passwordResetRequired
      - securityPrivilege
      - x509Required
    VendorProfilePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/VendorProfile'
      example:
        identifier: "Cisco Systems, Inc. IP Phone CP-7940G"
        name: Cisco IP phones
        description: Vendor profile for Cisco IP phones
        id: 103307
        type: VendorProfile
        userDefinedFields:
          key: userDefinedFields
      required:
      - description
      - identifier
      - name
    VendorProfilePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/VendorProfile'
      example:
        identifier: "Cisco Systems, Inc. IP Phone CP-7940G"
        name: Cisco IP phones
        description: Vendor profile for Cisco IP phones
        id: 103307
        type: VendorProfile
        userDefinedFields:
          key: userDefinedFields
      required:
      - description
      - identifier
      - name
    ViewPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/View'
      example:
        deviceRegistrationPortalAddress: 10.10.10.10
        configuration: ""
        name: default
        id: 103307
        type: View
        deviceRegistrationEnabled: true
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    ViewPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/View'
      example:
        deviceRegistrationPortalAddress: 10.10.10.10
        configuration: ""
        name: default
        id: 103307
        type: View
        deviceRegistrationEnabled: true
        userDefinedFields:
          key: userDefinedFields
      required:
      - deviceRegistrationEnabled
    WorkflowRequest:
      properties:
        id:
          description: The resource identifier.
          example: 103307
          format: int64
          minimum: 1
          type: integer
        type:
          description: The resource type.
          enum:
          - WorkflowRequest
          type: string
        state:
          description: The approval state of the workflow request. The state will
            be PENDING if the workflow request has not yet been processed by an authorized
            user.
          enum:
          - APPROVED
          - DENIED
          type: string
        requestType:
          description: The requested operation for the workflow request.
          enum:
          - ADD_ZONE
          - ADD_IPV4_NETWORK
          - ASSIGN_IPV4_ADDRESS
          - ADD_HOST_RECORD
          - ADD_ALIAS_RECORD
          - ADD_RESOURCE_RECORD
          - UPDATE_ZONE
          - UPDATE_IPV4_NETWORK
          - UPDATE_READONLY_IPV4_NETWORK
          - UPDATE_IPV4_ADDRESS
          - CHANGE_IPV4_ADDRESS_STATE
          - UPDATE_HOST_RECORD
          - UPDATE_RESOURCE_RECORD
          - UPDATE_ALIAS_RECORD
          - RENAME_RESOURCE_RECORD
          - DELETE_RESOURCE
          readOnly: true
          type: string
        creator:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        resource:
          allOf:
          - $ref: '#/components/schemas/Resource'
          readOnly: true
        dependentResource:
          allOf:
          - $ref: '#/components/schemas/Resource'
          readOnly: true
        modifier:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        creationDateTime:
          description: The time the workflow request was created.
          example: 2022-10-17T19:11:45Z
          format: date-time
          readOnly: true
          type: string
        modificationDateTime:
          description: The time the workflow request was modified.
          example: 2022-10-18T19:11:45Z
          format: date-time
          readOnly: true
          type: string
        comment:
          description: The change control comment added during creation of the workflow
            request.
          example: Sample comment.
          readOnly: true
          type: string
      type: object
    DHCPForwardZonePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPForwardZone'
      required:
      - primaryDnsServerAddress
      - type
      - zone
    DHCPReverseZonePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPReverseZone'
      required:
      - prefix
      - primaryDnsServerAddress
      - type
    DHCPForwardZonePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPForwardZone'
      required:
      - dynamicUpdateSigningKeyType
      - primaryDnsServerAddress
      - type
      - zone
    DHCPReverseZonePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPReverseZone'
      required:
      - dynamicUpdateSigningKeyType
      - prefix
      - primaryDnsServerAddress
      - type
    DHCPZoneGroupPostRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPZoneGroup'
      example:
        configuration: ""
        name: Zone Group 1
        id: 103307
        type: DHCPZoneGroup
        userDefinedFields:
          key: userDefinedFields
      required:
      - name
    DHCPZoneGroupPutRequestBody:
      allOf:
      - $ref: '#/components/schemas/DHCPZoneGroup'
      example:
        configuration: ""
        name: Zone Group 1
        id: 103307
        type: DHCPZoneGroup
        userDefinedFields:
          key: userDefinedFields
    ENUMNumberZonePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/ENUMNumberZone'
      required:
      - name
      - type
    ENUMZonePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/ENUMZone'
      required:
      - name
      - type
    InternalRootZonePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/InternalRootZone'
      required:
      - type
    ZonePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/Zone'
      required:
      - type
    ResponsePolicyZonePostRequestBody:
      allOf:
      - $ref: '#/components/schemas/ResponsePolicyZone'
      required:
      - name
      - responsePolicyZoneType
      - type
    ENUMNumberZonePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/ENUMNumberZone'
      required:
      - name
      - type
    ENUMZonePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/ENUMZone'
      required:
      - deploymentEnabled
      - name
      - type
    InternalRootZonePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/InternalRootZone'
      required:
      - deploymentEnabled
      - type
    ZonePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/Zone'
      required:
      - deploymentEnabled
      - dynamicUpdateEnabled
      - name
      - signed
      - type
    ResponsePolicyZonePutRequestBody:
      allOf:
      - $ref: '#/components/schemas/ResponsePolicyZone'
      required:
      - name
      - responsePolicyZoneType
      - type
    getAccessControlLists_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/ACL'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        configuration: ""
        matchElements:
        - matchElements
        - matchElements
        _links:
          self:
            href: href
        name: name
        id: 103307
        type: ACL
        predefined: true
        userDefinedFields:
          key: userDefinedFields
    getAccessControlLists_200_response:
      example:
        data:
        - configuration: ""
          matchElements:
          - matchElements
          - matchElements
          _links:
            self:
              href: href
          name: name
          id: 103307
          type: ACL
          predefined: true
          userDefinedFields:
            key: userDefinedFields
        - configuration: ""
          matchElements:
          - matchElements
          - matchElements
          _links:
            self:
              href: href
          name: name
          id: 103307
          type: ACL
          predefined: true
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getAccessControlLists_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getAccessControlLists_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ACL'
          nullable: false
          readOnly: true
          type: array
      type: object
    getAccessRights_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/AccessRight'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        selectiveDeploymentsAllowed: true
        accessOverrides:
        - accessLevel: HIDE
          resourceType: ACL
        - accessLevel: HIDE
          resourceType: ACL
        userScope: ""
        resource: ""
        _links:
          self:
            href: href
        id: 103307
        workflowLevel: NONE
        type: AccessRight
        defaultAccessLevel: HIDE
        deploymentsAllowed: true
        quickDeploymentsAllowed: true
    getAccessRights_200_response:
      example:
        data:
        - selectiveDeploymentsAllowed: true
          accessOverrides:
          - accessLevel: HIDE
            resourceType: ACL
          - accessLevel: HIDE
            resourceType: ACL
          userScope: ""
          resource: ""
          _links:
            self:
              href: href
          id: 103307
          workflowLevel: NONE
          type: AccessRight
          defaultAccessLevel: HIDE
          deploymentsAllowed: true
          quickDeploymentsAllowed: true
        - selectiveDeploymentsAllowed: true
          accessOverrides:
          - accessLevel: HIDE
            resourceType: ACL
          - accessLevel: HIDE
            resourceType: ACL
          userScope: ""
          resource: ""
          _links:
            self:
              href: href
          id: 103307
          workflowLevel: NONE
          type: AccessRight
          defaultAccessLevel: HIDE
          deploymentsAllowed: true
          quickDeploymentsAllowed: true
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getAccessRights_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getAccessRights_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/AccessRight'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDeploymentAddedRecords_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/GenericRecord'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        configuration: ""
        _links:
          self:
            href: href
        absoluteName: host1.example.com
        recordType: A
        name: name
        rdata: 3 1 1 ecc104c4fbb06b249d3c7a68f19cf28a60a9c6814874ad7efde451688039fe01
        comment: Sample comment.
        dynamic: true
        id: 103307
        type: GenericRecord
        ttl: 3600
        userDefinedFields:
          key: userDefinedFields
    getDeploymentAddedRecords_200_response:
      example:
        data:
        - configuration: ""
          _links:
            self:
              href: href
          absoluteName: host1.example.com
          recordType: A
          name: name
          rdata: 3 1 1 ecc104c4fbb06b249d3c7a68f19cf28a60a9c6814874ad7efde451688039fe01
          comment: Sample comment.
          dynamic: true
          id: 103307
          type: GenericRecord
          ttl: 3600
          userDefinedFields:
            key: userDefinedFields
        - configuration: ""
          _links:
            self:
              href: href
          absoluteName: host1.example.com
          recordType: A
          name: name
          rdata: 3 1 1 ecc104c4fbb06b249d3c7a68f19cf28a60a9c6814874ad7efde451688039fe01
          comment: Sample comment.
          dynamic: true
          id: 103307
          type: GenericRecord
          ttl: 3600
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDeploymentAddedRecords_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDeploymentAddedRecords_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/GenericRecord'
          nullable: false
          readOnly: true
          type: array
      type: object
    getAddresses_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPv4Address'
        - $ref: '#/components/schemas/IPv6Address'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getAddresses_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getAddresses_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getAddresses_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/IPv4Address'
      - $ref: '#/components/schemas/IPv6Address'
    getAddresses_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getAddresses_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putAddress_request:
      discriminator:
        mapping:
          IPv4Address: '#/components/schemas/IPv4AddressPutRequestBody'
          IPv6Address: '#/components/schemas/IPv6AddressPutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4AddressPutRequestBody'
      - $ref: '#/components/schemas/IPv6AddressPutRequestBody'
    postCollectionAddress_request:
      discriminator:
        mapping:
          IPv4Address: '#/components/schemas/LinkedIPv4AddressPostRequestBody'
          IPv6Address: '#/components/schemas/LinkedIPv6AddressPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/LinkedIPv4AddressPostRequestBody'
      - $ref: '#/components/schemas/LinkedIPv6AddressPostRequestBody'
    postNetworkAddress_request:
      discriminator:
        mapping:
          IPv4Address: '#/components/schemas/IPv4AddressPostRequestBody'
          IPv6Address: '#/components/schemas/IPv6AddressPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4AddressPostRequestBody'
      - $ref: '#/components/schemas/IPv6AddressPostRequestBody'
    getLocationAnnotatedResources_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/LinkedResource'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
        id: 103307
        type: ACL
    getLocationAnnotatedResources_200_response:
      example:
        data:
        - _links:
            self:
              href: href
          id: 103307
          type: ACL
        - _links:
            self:
              href: href
          id: 103307
          type: ACL
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getLocationAnnotatedResources_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getLocationAnnotatedResources_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/LinkedResource'
          nullable: false
          readOnly: true
          type: array
      type: object
    getAuthenticators_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/AddressManagerAuthenticator'
        - $ref: '#/components/schemas/KerberosAuthenticator'
        - $ref: '#/components/schemas/LDAPAuthenticator'
        - $ref: '#/components/schemas/OAuthAuthorizationServer'
        - $ref: '#/components/schemas/RADIUSAuthenticator'
        - $ref: '#/components/schemas/SAMLIdentityProvider'
        - $ref: '#/components/schemas/TACACSPlusAuthenticator'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getAuthenticators_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getAuthenticators_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getAuthenticators_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/AddressManagerAuthenticator'
      - $ref: '#/components/schemas/KerberosAuthenticator'
      - $ref: '#/components/schemas/LDAPAuthenticator'
      - $ref: '#/components/schemas/OAuthAuthorizationServer'
      - $ref: '#/components/schemas/RADIUSAuthenticator'
      - $ref: '#/components/schemas/SAMLIdentityProvider'
      - $ref: '#/components/schemas/TACACSPlusAuthenticator'
    getAuthenticators_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getAuthenticators_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postAuthenticator_request:
      discriminator:
        mapping:
          KerberosAuthenticator: '#/components/schemas/KerberosAuthenticatorPostRequestBody'
          LDAPAuthenticator: '#/components/schemas/LDAPAuthenticatorPostRequestBody'
          OAuthAuthorizationServer: '#/components/schemas/OAuthAuthorizationServerPostRequestBody'
          RADIUSAuthenticator: '#/components/schemas/RADIUSAuthenticatorPostRequestBody'
          SAMLIdentityProvider: '#/components/schemas/SAMLIdentityProviderPostRequestBody'
          TACACSPlusAuthenticator: '#/components/schemas/TACACSPlusAuthenticatorPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/KerberosAuthenticatorPostRequestBody'
      - $ref: '#/components/schemas/LDAPAuthenticatorPostRequestBody'
      - $ref: '#/components/schemas/OAuthAuthorizationServerPostRequestBody'
      - $ref: '#/components/schemas/RADIUSAuthenticatorPostRequestBody'
      - $ref: '#/components/schemas/SAMLIdentityProviderPostRequestBody'
      - $ref: '#/components/schemas/TACACSPlusAuthenticatorPostRequestBody'
    postAuthenticator_201_response:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/KerberosAuthenticator'
        - $ref: '#/components/schemas/LDAPAuthenticator'
        - $ref: '#/components/schemas/OAuthAuthorizationServer'
        - $ref: '#/components/schemas/RADIUSAuthenticator'
        - $ref: '#/components/schemas/SAMLIdentityProvider'
        - $ref: '#/components/schemas/TACACSPlusAuthenticator'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    postAuthenticator_201_response_1:
      oneOf:
      - $ref: '#/components/schemas/KerberosAuthenticator'
      - $ref: '#/components/schemas/LDAPAuthenticator'
      - $ref: '#/components/schemas/OAuthAuthorizationServer'
      - $ref: '#/components/schemas/RADIUSAuthenticator'
      - $ref: '#/components/schemas/SAMLIdentityProvider'
      - $ref: '#/components/schemas/TACACSPlusAuthenticator'
    putAuthenticator_request:
      discriminator:
        mapping:
          KerberosAuthenticator: '#/components/schemas/KerberosAuthenticatorPutRequestBody'
          LDAPAuthenticator: '#/components/schemas/LDAPAuthenticatorPutRequestBody'
          OAuthAuthorizationServer: '#/components/schemas/OAuthAuthorizationServerPutRequestBody'
          RADIUSAuthenticator: '#/components/schemas/RADIUSAuthenticatorPutRequestBody'
          SAMLIdentityProvider: '#/components/schemas/SAMLIdentityProviderPutRequestBody'
          TACACSPlusAuthenticator: '#/components/schemas/TACACSPlusAuthenticatorPutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/KerberosAuthenticatorPutRequestBody'
      - $ref: '#/components/schemas/LDAPAuthenticatorPutRequestBody'
      - $ref: '#/components/schemas/OAuthAuthorizationServerPutRequestBody'
      - $ref: '#/components/schemas/RADIUSAuthenticatorPutRequestBody'
      - $ref: '#/components/schemas/SAMLIdentityProviderPutRequestBody'
      - $ref: '#/components/schemas/TACACSPlusAuthenticatorPutRequestBody'
    getBlocks_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPv4Block'
        - $ref: '#/components/schemas/IPv6Block'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getBlocks_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getBlocks_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getBlocks_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/IPv4Block'
      - $ref: '#/components/schemas/IPv6Block'
    getBlocks_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getBlocks_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putBlock_request:
      discriminator:
        mapping:
          IPv4Block: '#/components/schemas/IPv4BlockPutRequestBody'
          IPv6Block: '#/components/schemas/IPv6BlockPutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4BlockPutRequestBody'
      - $ref: '#/components/schemas/IPv6BlockPutRequestBody'
    postBlockBlock_request:
      discriminator:
        mapping:
          IPv4Block: '#/components/schemas/IPv4BlockPostRequestBody'
          IPv6Block: '#/components/schemas/IPv6BlockPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4BlockPostRequestBody'
      - $ref: '#/components/schemas/IPv6BlockPostRequestBody'
    postConfigurationBlock_201_response:
      allOf:
      - $ref: '#/components/schemas/IPv4Block'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        template: ""
        pingBeforeAssignEnabled: true
        configuration: ""
        restrictedZones:
        - id: 103307
          type: type
        - id: 103307
          type: type
        _links:
          self:
            href: href
        range: range
        type: IPv4Block
        reverseZoneSigned: true
        userDefinedFields:
          key: userDefinedFields
        _inheritedFields:
        - _inheritedFields
        - _inheritedFields
        defaultView: ""
        defaultZones:
        - id: 103307
          type: Zone
        - id: 103307
          type: Zone
        reverseZoneSigningPolicy: ""
        name: name
        lowWaterMark: 15
        usagePercentage:
          key: 0
        location: ""
        id: 103307
        defaultZonesInherited: true
        restrictedZonesInherited: true
        highWaterMark: 95
        duplicateHostnamesAllowed: true
    getClientClasses_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/DHCPv4ClientClass'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        matchExpression: if a > b
        configuration: ""
        _links:
          self:
            href: href
        matchOffset: 1
        name: mc1
        description: custom description
        id: 103307
        type: DHCPv4ClientClass
        matchLength: 2
        userDefinedFields:
          key: userDefinedFields
        option: hardware
    getClientClasses_200_response:
      example:
        data:
        - matchExpression: if a > b
          configuration: ""
          _links:
            self:
              href: href
          matchOffset: 1
          name: mc1
          description: custom description
          id: 103307
          type: DHCPv4ClientClass
          matchLength: 2
          userDefinedFields:
            key: userDefinedFields
          option: hardware
        - matchExpression: if a > b
          configuration: ""
          _links:
            self:
              href: href
          matchOffset: 1
          name: mc1
          description: custom description
          id: 103307
          type: DHCPv4ClientClass
          matchLength: 2
          userDefinedFields:
            key: userDefinedFields
          option: hardware
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getClientClasses_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getClientClasses_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/DHCPv4ClientClass'
          nullable: false
          readOnly: true
          type: array
      type: object
    getClientIdentifiers_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/DHCPClientIdentifier'
        - $ref: '#/components/schemas/DHCPUniqueIdentifier'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getClientIdentifiers_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getClientIdentifiers_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getClientIdentifiers_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/DHCPClientIdentifier'
      - $ref: '#/components/schemas/DHCPUniqueIdentifier'
    getClientIdentifiers_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getClientIdentifiers_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getConfigurations_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/Configuration'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        checkMxValidation: IGNORE
        checkNamesValidation: IGNORE
        _links:
          self:
            href: href
        dnsFeedLicense: License Feed information
        description: Main configuration
        snmp:
          port: 161
          version: v1
          enabled: true
        checkMxCnameValidation: IGNORE
        type: Configuration
        checkIntegrityValidation: NONE
        configurationGroup: Test Configuration Group
        dnsZoneValidationEnabled: true
        keyAutoRegenerationEnabled: true
        dnsConfigurationValidationEnabled: true
        id: 103307
        dhcpConfigurationValidationEnabled: true
        checkWildcardValidation: IGNORE
        checkNsValidation: IGNORE
        dnsFeedEnabled: true
        sharedNetworkTagGroup: ""
        userDefinedFields:
          key: userDefinedFields
        dnsOptionInheritanceEnabled: true
        checkSrvCnameValidation: IGNORE
        name: name
        blockUsageCalculation: ADDRESS_ALLOCATION
        serverMonitoringEnabled: true
    getConfigurations_200_response:
      example:
        data:
        - checkMxValidation: IGNORE
          checkNamesValidation: IGNORE
          _links:
            self:
              href: href
          dnsFeedLicense: License Feed information
          description: Main configuration
          snmp:
            port: 161
            version: v1
            enabled: true
          checkMxCnameValidation: IGNORE
          type: Configuration
          checkIntegrityValidation: NONE
          configurationGroup: Test Configuration Group
          dnsZoneValidationEnabled: true
          keyAutoRegenerationEnabled: true
          dnsConfigurationValidationEnabled: true
          id: 103307
          dhcpConfigurationValidationEnabled: true
          checkWildcardValidation: IGNORE
          checkNsValidation: IGNORE
          dnsFeedEnabled: true
          sharedNetworkTagGroup: ""
          userDefinedFields:
            key: userDefinedFields
          dnsOptionInheritanceEnabled: true
          checkSrvCnameValidation: IGNORE
          name: name
          blockUsageCalculation: ADDRESS_ALLOCATION
          serverMonitoringEnabled: true
        - checkMxValidation: IGNORE
          checkNamesValidation: IGNORE
          _links:
            self:
              href: href
          dnsFeedLicense: License Feed information
          description: Main configuration
          snmp:
            port: 161
            version: v1
            enabled: true
          checkMxCnameValidation: IGNORE
          type: Configuration
          checkIntegrityValidation: NONE
          configurationGroup: Test Configuration Group
          dnsZoneValidationEnabled: true
          keyAutoRegenerationEnabled: true
          dnsConfigurationValidationEnabled: true
          id: 103307
          dhcpConfigurationValidationEnabled: true
          checkWildcardValidation: IGNORE
          checkNsValidation: IGNORE
          dnsFeedEnabled: true
          sharedNetworkTagGroup: ""
          userDefinedFields:
            key: userDefinedFields
          dnsOptionInheritanceEnabled: true
          checkSrvCnameValidation: IGNORE
          name: name
          blockUsageCalculation: ADDRESS_ALLOCATION
          serverMonitoringEnabled: true
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getConfigurations_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getConfigurations_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Configuration'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDatabases_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/AddressManagerDatabase'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        compressionEnabled: true
        _links:
          self:
            href: href
        replicationStatus: ENROLLING
        type: AddressManagerDatabase
        replicationEnabled: true
        replicationRole: STANDALONE
        servers:
        - address: 10.10.10.10
          name: dns2
          enrollmentPercentComplete: 75
          replicationStatus: DISABLED
          id: 103307
          state: STANDALONE
          type: AddressManagerServer
          replicationLatency: PTS60
        - address: 10.10.10.10
          name: dns2
          enrollmentPercentComplete: 75
          replicationStatus: DISABLED
          id: 103307
          state: STANDALONE
          type: AddressManagerServer
          replicationLatency: PTS60
        entityCount: 100881
        size: 70169135
        activeSessions: 1
        latencyCriticalThreshold: P1D
        id: 103307
        state: STANDALONE
        lastBackupDateTime: 2022-09-09T15:16:50Z
        latencyWarningThreshold: PT1H
    getDatabases_200_response:
      example:
        data:
        - compressionEnabled: true
          _links:
            self:
              href: href
          replicationStatus: ENROLLING
          type: AddressManagerDatabase
          replicationEnabled: true
          replicationRole: STANDALONE
          servers:
          - address: 10.10.10.10
            name: dns2
            enrollmentPercentComplete: 75
            replicationStatus: DISABLED
            id: 103307
            state: STANDALONE
            type: AddressManagerServer
            replicationLatency: PTS60
          - address: 10.10.10.10
            name: dns2
            enrollmentPercentComplete: 75
            replicationStatus: DISABLED
            id: 103307
            state: STANDALONE
            type: AddressManagerServer
            replicationLatency: PTS60
          entityCount: 100881
          size: 70169135
          activeSessions: 1
          latencyCriticalThreshold: P1D
          id: 103307
          state: STANDALONE
          lastBackupDateTime: 2022-09-09T15:16:50Z
          latencyWarningThreshold: PT1H
        - compressionEnabled: true
          _links:
            self:
              href: href
          replicationStatus: ENROLLING
          type: AddressManagerDatabase
          replicationEnabled: true
          replicationRole: STANDALONE
          servers:
          - address: 10.10.10.10
            name: dns2
            enrollmentPercentComplete: 75
            replicationStatus: DISABLED
            id: 103307
            state: STANDALONE
            type: AddressManagerServer
            replicationLatency: PTS60
          - address: 10.10.10.10
            name: dns2
            enrollmentPercentComplete: 75
            replicationStatus: DISABLED
            id: 103307
            state: STANDALONE
            type: AddressManagerServer
            replicationLatency: PTS60
          entityCount: 100881
          size: 70169135
          activeSessions: 1
          latencyCriticalThreshold: P1D
          id: 103307
          state: STANDALONE
          lastBackupDateTime: 2022-09-09T15:16:50Z
          latencyWarningThreshold: PT1H
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDatabases_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDatabases_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/AddressManagerDatabase'
          nullable: false
          readOnly: true
          type: array
      type: object
    patchDatabase_request:
      properties:
        state:
          description: The current replication state of the Address Manager database.
          enum:
          - STANDALONE
          - REPLICATED
          - BREAK
          type: string
      type: object
    getCollectionDefaultZones_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/Zone'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        template: ""
        configuration: ""
        signingPolicy: ""
        _links:
          self:
            href: href
        absoluteName: example.corp
        signed: true
        type: Zone
        userDefinedFields:
          key: userDefinedFields
        view: ""
        deploymentEnabled: true
        dynamicUpdateEnabled: true
        name: name
        id: 103307
    getCollectionDefaultZones_200_response:
      example:
        data:
        - template: ""
          configuration: ""
          signingPolicy: ""
          _links:
            self:
              href: href
          absoluteName: example.corp
          signed: true
          type: Zone
          userDefinedFields:
            key: userDefinedFields
          view: ""
          deploymentEnabled: true
          dynamicUpdateEnabled: true
          name: name
          id: 103307
        - template: ""
          configuration: ""
          signingPolicy: ""
          _links:
            self:
              href: href
          absoluteName: example.corp
          signed: true
          type: Zone
          userDefinedFields:
            key: userDefinedFields
          view: ""
          deploymentEnabled: true
          dynamicUpdateEnabled: true
          name: name
          id: 103307
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionDefaultZones_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getCollectionDefaultZones_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Zone'
          nullable: false
          readOnly: true
          type: array
      type: object
    getResourceRecordDependentRecords_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/HostRecord'
        - $ref: '#/components/schemas/AliasRecord'
        - $ref: '#/components/schemas/ExternalHostRecord'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getResourceRecordDependentRecords_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getResourceRecordDependentRecords_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getResourceRecordDependentRecords_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/HostRecord'
      - $ref: '#/components/schemas/AliasRecord'
      - $ref: '#/components/schemas/ExternalHostRecord'
    getResourceRecordDependentRecords_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getResourceRecordDependentRecords_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDeploymentOptionDefinitions_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
        - $ref: '#/components/schemas/DHCPv4ClientOptionDefinition'
        - $ref: '#/components/schemas/DHCPv4ServiceOptionDefinition'
        - $ref: '#/components/schemas/DHCPv6ClientOptionDefinition'
        - $ref: '#/components/schemas/DHCPv6ServiceOptionDefinition'
        - $ref: '#/components/schemas/DNSOptionDefinition'
        - $ref: '#/components/schemas/StartOfAuthorityDefinition'
        - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getDeploymentOptionDefinitions_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDeploymentOptionDefinitions_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDeploymentOptionDefinitions_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
      - $ref: '#/components/schemas/DHCPv4ClientOptionDefinition'
      - $ref: '#/components/schemas/DHCPv4ServiceOptionDefinition'
      - $ref: '#/components/schemas/DHCPv6ClientOptionDefinition'
      - $ref: '#/components/schemas/DHCPv6ServiceOptionDefinition'
      - $ref: '#/components/schemas/DNSOptionDefinition'
      - $ref: '#/components/schemas/StartOfAuthorityDefinition'
      - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
    getDeploymentOptionDefinitions_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDeploymentOptionDefinitions_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putDeploymentOptionDefinition_request:
      discriminator:
        mapping:
          DHCPv4CustomClientOptionDefinition: '#/components/schemas/DHCPv4CustomClientOptionDefinitionPutRequestBody'
          DHCPVendorOptionDefinition: '#/components/schemas/DHCPVendorOptionDefinitionPutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionPutRequestBody'
      - $ref: '#/components/schemas/DHCPVendorOptionDefinitionPutRequestBody'
    putDeploymentOptionDefinition_200_response:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
        - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    putDeploymentOptionDefinition_200_response_1:
      oneOf:
      - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
      - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
    getCollectionDeploymentOptionDefinitions_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
        - $ref: '#/components/schemas/DHCPv4ClientOptionDefinition'
        - $ref: '#/components/schemas/DHCPv4ServiceOptionDefinition'
        - $ref: '#/components/schemas/DHCPv6ClientOptionDefinition'
        - $ref: '#/components/schemas/DHCPv6ServiceOptionDefinition'
        - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
        - $ref: '#/components/schemas/DNSOptionDefinition'
        - $ref: '#/components/schemas/StartOfAuthorityDefinition'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getCollectionDeploymentOptionDefinitions_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionDeploymentOptionDefinitions_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getCollectionDeploymentOptionDefinitions_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinition'
      - $ref: '#/components/schemas/DHCPv4ClientOptionDefinition'
      - $ref: '#/components/schemas/DHCPv4ServiceOptionDefinition'
      - $ref: '#/components/schemas/DHCPv6ClientOptionDefinition'
      - $ref: '#/components/schemas/DHCPv6ServiceOptionDefinition'
      - $ref: '#/components/schemas/DHCPVendorOptionDefinition'
      - $ref: '#/components/schemas/DNSOptionDefinition'
      - $ref: '#/components/schemas/StartOfAuthorityDefinition'
    getCollectionDeploymentOptionDefinitions_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionDeploymentOptionDefinitions_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postCollectionDeploymentOptionDefinition_request:
      discriminator:
        mapping:
          DHCPv4CustomClientOptionDefinition: '#/components/schemas/DHCPv4CustomClientOptionDefinitionPostRequestBody'
          DHCPVendorOptionDefinition: '#/components/schemas/DHCPVendorOptionDefinitionPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DHCPv4CustomClientOptionDefinitionPostRequestBody'
      - $ref: '#/components/schemas/DHCPVendorOptionDefinitionPostRequestBody'
    getDeploymentOptions_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/DHCPv4ClientOption'
        - $ref: '#/components/schemas/DHCPv4RawOption'
        - $ref: '#/components/schemas/DHCPv4ServiceOption'
        - $ref: '#/components/schemas/DHCPv6ClientOption'
        - $ref: '#/components/schemas/DHCPv6RawOption'
        - $ref: '#/components/schemas/DHCPv6ServiceOption'
        - $ref: '#/components/schemas/DNSOption'
        - $ref: '#/components/schemas/DNSRawOption'
        - $ref: '#/components/schemas/StartOfAuthority'
        - $ref: '#/components/schemas/DHCPVendorOption'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getDeploymentOptions_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDeploymentOptions_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDeploymentOptions_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/DHCPv4ClientOption'
      - $ref: '#/components/schemas/DHCPv4RawOption'
      - $ref: '#/components/schemas/DHCPv4ServiceOption'
      - $ref: '#/components/schemas/DHCPv6ClientOption'
      - $ref: '#/components/schemas/DHCPv6RawOption'
      - $ref: '#/components/schemas/DHCPv6ServiceOption'
      - $ref: '#/components/schemas/DNSOption'
      - $ref: '#/components/schemas/DNSRawOption'
      - $ref: '#/components/schemas/StartOfAuthority'
      - $ref: '#/components/schemas/DHCPVendorOption'
    getDeploymentOptions_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDeploymentOptions_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putDeploymentOption_request:
      discriminator:
        mapping:
          DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPutRequestBody'
          DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPutRequestBody'
          DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPutRequestBody'
          DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPutRequestBody'
          DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPutRequestBody'
          DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPutRequestBody'
          DNSOption: '#/components/schemas/DNSOptionPutRequestBody'
          DNSRawOption: '#/components/schemas/DNSRawOptionPutRequestBody'
          StartOfAuthority: '#/components/schemas/StartOfAuthorityPutRequestBody'
          DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DHCPv4ClientOptionPutRequestBody'
      - $ref: '#/components/schemas/DHCPv4RawOptionPutRequestBody'
      - $ref: '#/components/schemas/DHCPv4ServiceOptionPutRequestBody'
      - $ref: '#/components/schemas/DHCPv6ClientOptionPutRequestBody'
      - $ref: '#/components/schemas/DHCPv6RawOptionPutRequestBody'
      - $ref: '#/components/schemas/DHCPv6ServiceOptionPutRequestBody'
      - $ref: '#/components/schemas/DNSOptionPutRequestBody'
      - $ref: '#/components/schemas/DNSRawOptionPutRequestBody'
      - $ref: '#/components/schemas/StartOfAuthorityPutRequestBody'
      - $ref: '#/components/schemas/DHCPVendorOptionPutRequestBody'
    getCollectionDeploymentOptions_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/DHCPv4ClientOption'
        - $ref: '#/components/schemas/DHCPv4RawOption'
        - $ref: '#/components/schemas/DHCPv4ServiceOption'
        - $ref: '#/components/schemas/DHCPv6ClientOption'
        - $ref: '#/components/schemas/DHCPv6RawOption'
        - $ref: '#/components/schemas/DHCPv6ServiceOption'
        - $ref: '#/components/schemas/DHCPVendorOption'
        - $ref: '#/components/schemas/DNSOption'
        - $ref: '#/components/schemas/DNSRawOption'
        - $ref: '#/components/schemas/StartOfAuthority'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getCollectionDeploymentOptions_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionDeploymentOptions_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getCollectionDeploymentOptions_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/DHCPv4ClientOption'
      - $ref: '#/components/schemas/DHCPv4RawOption'
      - $ref: '#/components/schemas/DHCPv4ServiceOption'
      - $ref: '#/components/schemas/DHCPv6ClientOption'
      - $ref: '#/components/schemas/DHCPv6RawOption'
      - $ref: '#/components/schemas/DHCPv6ServiceOption'
      - $ref: '#/components/schemas/DHCPVendorOption'
      - $ref: '#/components/schemas/DNSOption'
      - $ref: '#/components/schemas/DNSRawOption'
      - $ref: '#/components/schemas/StartOfAuthority'
    getCollectionDeploymentOptions_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionDeploymentOptions_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postCollectionDeploymentOption_request:
      discriminator:
        mapping:
          DHCPv4ClientOption: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
          DHCPv4RawOption: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
          DHCPv4ServiceOption: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
          DHCPv6ClientOption: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
          DHCPv6RawOption: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
          DHCPv6ServiceOption: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
          DNSOption: '#/components/schemas/DNSOptionPostRequestBody'
          DNSRawOption: '#/components/schemas/DNSRawOptionPostRequestBody'
          StartOfAuthority: '#/components/schemas/StartOfAuthorityPostRequestBody'
          DHCPVendorOption: '#/components/schemas/DHCPVendorOptionPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DHCPv4ClientOptionPostRequestBody'
      - $ref: '#/components/schemas/DHCPv4RawOptionPostRequestBody'
      - $ref: '#/components/schemas/DHCPv4ServiceOptionPostRequestBody'
      - $ref: '#/components/schemas/DHCPv6ClientOptionPostRequestBody'
      - $ref: '#/components/schemas/DHCPv6RawOptionPostRequestBody'
      - $ref: '#/components/schemas/DHCPv6ServiceOptionPostRequestBody'
      - $ref: '#/components/schemas/DNSOptionPostRequestBody'
      - $ref: '#/components/schemas/DNSRawOptionPostRequestBody'
      - $ref: '#/components/schemas/StartOfAuthorityPostRequestBody'
      - $ref: '#/components/schemas/DHCPVendorOptionPostRequestBody'
    getDeploymentRoles_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/DHCPDeploymentRole'
        - $ref: '#/components/schemas/DNSDeploymentRole'
        - $ref: '#/components/schemas/TFTPDeploymentRole'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getDeploymentRoles_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDeploymentRoles_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDeploymentRoles_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/DHCPDeploymentRole'
      - $ref: '#/components/schemas/DNSDeploymentRole'
      - $ref: '#/components/schemas/TFTPDeploymentRole'
    getDeploymentRoles_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDeploymentRoles_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putDeploymentRole_request:
      discriminator:
        mapping:
          DHCPDeploymentRole: '#/components/schemas/DHCPDeploymentRolePutRequestBody'
          DNSDeploymentRole: '#/components/schemas/DNSDeploymentRolePutRequestBody'
          TFTPDeploymentRole: '#/components/schemas/TFTPDeploymentRolePutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DHCPDeploymentRolePutRequestBody'
      - $ref: '#/components/schemas/DNSDeploymentRolePutRequestBody'
      - $ref: '#/components/schemas/TFTPDeploymentRolePutRequestBody'
    postCollectionDeploymentRole_request:
      discriminator:
        mapping:
          DHCPDeploymentRole: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
          DNSDeploymentRole: '#/components/schemas/DNSDeploymentRolePostRequestBody'
          TFTPDeploymentRole: '#/components/schemas/TFTPDeploymentRolePostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DHCPDeploymentRolePostRequestBody'
      - $ref: '#/components/schemas/DNSDeploymentRolePostRequestBody'
      - $ref: '#/components/schemas/TFTPDeploymentRolePostRequestBody'
    getDeployments_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/FullDeployment'
        - $ref: '#/components/schemas/DifferentialDeployment'
        - $ref: '#/components/schemas/QuickDeployment'
        - $ref: '#/components/schemas/SelectiveDeployment'
        - $ref: '#/components/schemas/ValidationDeployment'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getDeployments_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDeployments_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDeployments_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/FullDeployment'
      - $ref: '#/components/schemas/DifferentialDeployment'
      - $ref: '#/components/schemas/QuickDeployment'
      - $ref: '#/components/schemas/SelectiveDeployment'
      - $ref: '#/components/schemas/ValidationDeployment'
    getDeployments_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDeployments_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postDeployment_201_response:
      allOf:
      - $ref: '#/components/schemas/SelectiveDeployment'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        continueOnFailureEnabled: true
        method: SCHEDULED
        _links:
          self:
            href: href
        resources:
        - name: name
          id: 103307
          type: type
        - name: name
          id: 103307
          type: type
        percentComplete: 50
        type: SelectiveDeployment
        message: message
        dynamicRecordDeploymentStrategy: ABORT
        startDateTime: 2022-11-23T02:53:03Z
        recordScope: RELATED
        completionDateTime: 2022-11-23T02:53:05Z
        batchMode: DISABLED
        id: 103307
        state: PENDING
        user: ""
        status: CANCEL
    postCollectionDeployment_request:
      discriminator:
        mapping:
          FullDeployment: '#/components/schemas/FullDeploymentPostRequestBody'
          DifferentialDeployment: '#/components/schemas/DifferentialDeploymentPostRequestBody'
          QuickDeployment: '#/components/schemas/QuickDeploymentPostRequestBody'
          ValidationDeployment: '#/components/schemas/ValidationDeploymentPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/FullDeploymentPostRequestBody'
      - $ref: '#/components/schemas/DifferentialDeploymentPostRequestBody'
      - $ref: '#/components/schemas/QuickDeploymentPostRequestBody'
      - $ref: '#/components/schemas/ValidationDeploymentPostRequestBody'
    postCollectionDeployment_201_response:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/FullDeployment'
        - $ref: '#/components/schemas/DifferentialDeployment'
        - $ref: '#/components/schemas/QuickDeployment'
        - $ref: '#/components/schemas/ValidationDeployment'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    postCollectionDeployment_201_response_1:
      oneOf:
      - $ref: '#/components/schemas/FullDeployment'
      - $ref: '#/components/schemas/DifferentialDeployment'
      - $ref: '#/components/schemas/QuickDeployment'
      - $ref: '#/components/schemas/ValidationDeployment'
    getDeviceSubtypes_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/DeviceSubtype'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
        name: name
        id: 103307
        type: DeviceSubtype
        userDefinedFields:
          key: userDefinedFields
    getDeviceSubtypes_200_response:
      example:
        data:
        - _links:
            self:
              href: href
          name: name
          id: 103307
          type: DeviceSubtype
          userDefinedFields:
            key: userDefinedFields
        - _links:
            self:
              href: href
          name: name
          id: 103307
          type: DeviceSubtype
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDeviceSubtypes_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDeviceSubtypes_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/DeviceSubtype'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDeviceTypes_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/DeviceType'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
        name: name
        id: 103307
        type: DeviceType
        userDefinedFields:
          key: userDefinedFields
    getDeviceTypes_200_response:
      example:
        data:
        - _links:
            self:
              href: href
          name: name
          id: 103307
          type: DeviceType
          userDefinedFields:
            key: userDefinedFields
        - _links:
            self:
              href: href
          name: name
          id: 103307
          type: DeviceType
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDeviceTypes_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDeviceTypes_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/DeviceType'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDevices_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/Device'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        deviceType: ""
        addresses:
        - ""
        - ""
        configuration: ""
        _links:
          self:
            href: href
        deviceSubtype: ""
        name: name
        id: 103307
        type: Device
        userDefinedFields:
          key: userDefinedFields
    getDevices_200_response:
      example:
        data:
        - deviceType: ""
          addresses:
          - ""
          - ""
          configuration: ""
          _links:
            self:
              href: href
          deviceSubtype: ""
          name: name
          id: 103307
          type: Device
          userDefinedFields:
            key: userDefinedFields
        - deviceType: ""
          addresses:
          - ""
          - ""
          configuration: ""
          _links:
            self:
              href: href
          deviceSubtype: ""
          name: name
          id: 103307
          type: Device
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDevices_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDevices_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Device'
          nullable: false
          readOnly: true
          type: array
      type: object
    getReconciliationPolicyDiscoveredDevices_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/DiscoveredARPEntry'
        - $ref: '#/components/schemas/DiscoveredHost'
        - $ref: '#/components/schemas/DiscoveredInterface'
        - $ref: '#/components/schemas/DiscoveredMACAddress'
        - $ref: '#/components/schemas/DiscoveredNetwork'
        - $ref: '#/components/schemas/DiscoveredRouter'
        - $ref: '#/components/schemas/DiscoveredSwitch'
        - $ref: '#/components/schemas/DiscoveredVLAN'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getReconciliationPolicyDiscoveredDevices_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getReconciliationPolicyDiscoveredDevices_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getReconciliationPolicyDiscoveredDevices_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/DiscoveredARPEntry'
      - $ref: '#/components/schemas/DiscoveredHost'
      - $ref: '#/components/schemas/DiscoveredInterface'
      - $ref: '#/components/schemas/DiscoveredMACAddress'
      - $ref: '#/components/schemas/DiscoveredNetwork'
      - $ref: '#/components/schemas/DiscoveredRouter'
      - $ref: '#/components/schemas/DiscoveredSwitch'
      - $ref: '#/components/schemas/DiscoveredVLAN'
    getReconciliationPolicyDiscoveredDevices_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getReconciliationPolicyDiscoveredDevices_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getEvents_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/Event'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        dateTime: 2000-01-23T04:56:07.000+00:00
        _links:
          self:
            href: href
        eventType: INFO
        source:
          name: name
          id: 103307
          type: Resource
          userDefinedFields:
            key: userDefinedFields
        type: Event
        message: message
        payload: payload
        details: "{}"
        id: 103307
        sourceName: sourceName
        category: APPLICATION
        subcategory: DNS
        user:
          accountLocked: true
          administrativeAccessLevels:
            key: administrativeAccessLevels
          x509Required: true
          type: User
          userDefinedFields:
            key: userDefinedFields
          accessType: GUI
          password: password
          phoneNumber: 555-1234
          name: admin
          id: 103307
          passwordResetRequired: true
          authenticator: ""
          securityPrivilege: NO_ACCESS
          email: user@example.com
          historyPrivilege: HIDE
        taskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
    getEvents_200_response:
      example:
        data:
        - dateTime: 2000-01-23T04:56:07.000+00:00
          _links:
            self:
              href: href
          eventType: INFO
          source:
            name: name
            id: 103307
            type: Resource
            userDefinedFields:
              key: userDefinedFields
          type: Event
          message: message
          payload: payload
          details: "{}"
          id: 103307
          sourceName: sourceName
          category: APPLICATION
          subcategory: DNS
          user:
            accountLocked: true
            administrativeAccessLevels:
              key: administrativeAccessLevels
            x509Required: true
            type: User
            userDefinedFields:
              key: userDefinedFields
            accessType: GUI
            password: password
            phoneNumber: 555-1234
            name: admin
            id: 103307
            passwordResetRequired: true
            authenticator: ""
            securityPrivilege: NO_ACCESS
            email: user@example.com
            historyPrivilege: HIDE
          taskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - dateTime: 2000-01-23T04:56:07.000+00:00
          _links:
            self:
              href: href
          eventType: INFO
          source:
            name: name
            id: 103307
            type: Resource
            userDefinedFields:
              key: userDefinedFields
          type: Event
          message: message
          payload: payload
          details: "{}"
          id: 103307
          sourceName: sourceName
          category: APPLICATION
          subcategory: DNS
          user:
            accountLocked: true
            administrativeAccessLevels:
              key: administrativeAccessLevels
            x509Required: true
            type: User
            userDefinedFields:
              key: userDefinedFields
            accessType: GUI
            password: password
            phoneNumber: 555-1234
            name: admin
            id: 103307
            passwordResetRequired: true
            authenticator: ""
            securityPrivilege: NO_ACCESS
            email: user@example.com
            historyPrivilege: HIDE
          taskId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getEvents_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getEvents_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Event'
          nullable: false
          readOnly: true
          type: array
      type: object
    getFiles_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/TFTPFile'
        - $ref: '#/components/schemas/TFTPFolder'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getFiles_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getFiles_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getFiles_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/TFTPFile'
      - $ref: '#/components/schemas/TFTPFolder'
    getFiles_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getFiles_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putFile_request:
      discriminator:
        mapping:
          TFTPFile: '#/components/schemas/TFTPFilePutRequestBody'
          TFTPFolder: '#/components/schemas/TFTPFolderPutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/TFTPFilePutRequestBody'
      - $ref: '#/components/schemas/TFTPFolderPutRequestBody'
    postCollectionFile_request:
      discriminator:
        mapping:
          TFTPFile: '#/components/schemas/TFTPFilePostRequestBody'
          TFTPFolder: '#/components/schemas/TFTPFolderPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/TFTPFilePostRequestBody'
      - $ref: '#/components/schemas/TFTPFolderPostRequestBody'
    getGroups_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/UserGroup'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        groupType: ADDRESS_MANAGER
        administratorPrivilege: true
        _links:
          self:
            href: href
        name: Test group
        description: SSO Group 1
        id: 103307
        type: UserGroup
        authenticator:
          name: LDAP authenticator
          id: 103307
          type: Authenticator
        userDefinedFields:
          key: userDefinedFields
    getGroups_200_response:
      example:
        data:
        - groupType: ADDRESS_MANAGER
          administratorPrivilege: true
          _links:
            self:
              href: href
          name: Test group
          description: SSO Group 1
          id: 103307
          type: UserGroup
          authenticator:
            name: LDAP authenticator
            id: 103307
            type: Authenticator
          userDefinedFields:
            key: userDefinedFields
        - groupType: ADDRESS_MANAGER
          administratorPrivilege: true
          _links:
            self:
              href: href
          name: Test group
          description: SSO Group 1
          id: 103307
          type: UserGroup
          authenticator:
            name: LDAP authenticator
            id: 103307
            type: Authenticator
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getGroups_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getGroups_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/UserGroup'
          nullable: false
          readOnly: true
          type: array
      type: object
    getImports_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/ResourceImport'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        startDateTime: 2022-11-07T10:38:23Z
        size: 10193
        _links:
          self:
            href: href
        fileData: ""
        name: migration.zip
        completionDateTime: 2022-11-07T10:47:43Z
        fileInfo: ""
        id: 103307
        state: PENDING
        type: ResourceImport
        contentType: application/vnd.bcn.proteus-migration+xml; v=3.0
        creationDateTime: 2022-11-07T10:34:22Z
    getImports_200_response:
      example:
        data:
        - startDateTime: 2022-11-07T10:38:23Z
          size: 10193
          _links:
            self:
              href: href
          fileData: ""
          name: migration.zip
          completionDateTime: 2022-11-07T10:47:43Z
          fileInfo: ""
          id: 103307
          state: PENDING
          type: ResourceImport
          contentType: application/vnd.bcn.proteus-migration+xml; v=3.0
          creationDateTime: 2022-11-07T10:34:22Z
        - startDateTime: 2022-11-07T10:38:23Z
          size: 10193
          _links:
            self:
              href: href
          fileData: ""
          name: migration.zip
          completionDateTime: 2022-11-07T10:47:43Z
          fileInfo: ""
          id: 103307
          state: PENDING
          type: ResourceImport
          contentType: application/vnd.bcn.proteus-migration+xml; v=3.0
          creationDateTime: 2022-11-07T10:34:22Z
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getImports_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getImports_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ResourceImport'
          nullable: false
          readOnly: true
          type: array
      type: object
    patchImport_request:
      properties:
        state:
          description: The current state of the import
          enum:
          - PENDING
          - QUEUED
          - RUNNING
          - CANCELLED
          - CANCELLING
          - COMPLETED
          - COMPLETED_WITH_WARNINGS
          - FAILED
          - UNKNOWN
          type: string
      type: object
    getResponsePolicyImports_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/ResponsePolicyItemImport'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        startDateTime: 2022-11-07T10:38:23Z
        size: 10193
        _links:
          self:
            href: href
        fileData: ""
        name: migration.zip
        completionDateTime: 2022-11-07T10:47:43Z
        fileInfo: ""
        id: 103307
        state: PENDING
        type: ResponsePolicyItemImport
        contentType: text/plain
        creationDateTime: 2022-11-07T10:34:22Z
    getResponsePolicyImports_200_response:
      example:
        data:
        - startDateTime: 2022-11-07T10:38:23Z
          size: 10193
          _links:
            self:
              href: href
          fileData: ""
          name: migration.zip
          completionDateTime: 2022-11-07T10:47:43Z
          fileInfo: ""
          id: 103307
          state: PENDING
          type: ResponsePolicyItemImport
          contentType: text/plain
          creationDateTime: 2022-11-07T10:34:22Z
        - startDateTime: 2022-11-07T10:38:23Z
          size: 10193
          _links:
            self:
              href: href
          fileData: ""
          name: migration.zip
          completionDateTime: 2022-11-07T10:47:43Z
          fileInfo: ""
          id: 103307
          state: PENDING
          type: ResponsePolicyItemImport
          contentType: text/plain
          creationDateTime: 2022-11-07T10:34:22Z
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getResponsePolicyImports_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getResponsePolicyImports_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ResponsePolicyItemImport'
          nullable: false
          readOnly: true
          type: array
      type: object
    getInterfaces_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/NetworkInterface'
        - $ref: '#/components/schemas/PublishedInterface'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getInterfaces_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getInterfaces_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getInterfaces_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/NetworkInterface'
      - $ref: '#/components/schemas/PublishedInterface'
    getInterfaces_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getInterfaces_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putInterface_200_response:
      allOf:
      - $ref: '#/components/schemas/PublishedInterface'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        server: ""
        secondaryAddress: 10.10.10.5
        configuration: ""
        _links:
          self:
            href: href
        name: name
        id: 103307
        primaryAddress: 10.10.0.1
        type: PublishedInterface
        userDefinedFields:
          key: userDefinedFields
    getIpGroups_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/IPv4Group'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        configuration: ""
        _links:
          self:
            href: href
        name: Example IPv4 Group
        range: range
        id: 103307
        type: IPv4Group
        userDefinedFields:
          key: userDefinedFields
    getIpGroups_200_response:
      example:
        data:
        - configuration: ""
          _links:
            self:
              href: href
          name: Example IPv4 Group
          range: range
          id: 103307
          type: IPv4Group
          userDefinedFields:
            key: userDefinedFields
        - configuration: ""
          _links:
            self:
              href: href
          name: Example IPv4 Group
          range: range
          id: 103307
          type: IPv4Group
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getIpGroups_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getIpGroups_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/IPv4Group'
          nullable: false
          readOnly: true
          type: array
      type: object
    getKeyDistributionCenters_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/KeyDistributionCenter'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        port: 88
        _links:
          self:
            href: href
        name: KDC-1
        host: 192.168.0.10
        id: 103307
        type: KeyDistributionCenter
        userDefinedFields:
          key: userDefinedFields
    getKeyDistributionCenters_200_response:
      example:
        data:
        - port: 88
          _links:
            self:
              href: href
          name: KDC-1
          host: 192.168.0.10
          id: 103307
          type: KeyDistributionCenter
          userDefinedFields:
            key: userDefinedFields
        - port: 88
          _links:
            self:
              href: href
          name: KDC-1
          host: 192.168.0.10
          id: 103307
          type: KeyDistributionCenter
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getKeyDistributionCenters_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getKeyDistributionCenters_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/KeyDistributionCenter'
          nullable: false
          readOnly: true
          type: array
      type: object
    getLeases_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/DHCPv4Lease'
        - $ref: '#/components/schemas/DHCPv6Lease'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getLeases_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getLeases_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getLeases_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/DHCPv4Lease'
      - $ref: '#/components/schemas/DHCPv6Lease'
    getLeases_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getLeases_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getLocations_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/Location'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        country: JP
        localizedName: 東京オフィス
        code: JP TYO BCN
        _links:
          self:
            href: href
        locode: JP TYO
        latitude: 35.683
        description: Tokyo Office
        type: Location
        userDefinedFields:
          key: userDefinedFields
        subdivision: "04"
        name: name
        id: 103307
        longitude: 139.75
    getLocations_200_response:
      example:
        data:
        - country: JP
          localizedName: 東京オフィス
          code: JP TYO BCN
          _links:
            self:
              href: href
          locode: JP TYO
          latitude: 35.683
          description: Tokyo Office
          type: Location
          userDefinedFields:
            key: userDefinedFields
          subdivision: "04"
          name: name
          id: 103307
          longitude: 139.75
        - country: JP
          localizedName: 東京オフィス
          code: JP TYO BCN
          _links:
            self:
              href: href
          locode: JP TYO
          latitude: 35.683
          description: Tokyo Office
          type: Location
          userDefinedFields:
            key: userDefinedFields
          subdivision: "04"
          name: name
          id: 103307
          longitude: 139.75
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getLocations_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getLocations_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Location'
          nullable: false
          readOnly: true
          type: array
      type: object
    getImportLogs_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/ImportLog'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        size: 10193
        contents: contents
        _links:
          self:
            href: href
        name: server.log
        id: 103307
        type: ImportLog
    getImportLogs_200_response:
      example:
        data:
        - size: 10193
          contents: contents
          _links:
            self:
              href: href
          name: server.log
          id: 103307
          type: ImportLog
        - size: 10193
          contents: contents
          _links:
            self:
              href: href
          name: server.log
          id: 103307
          type: ImportLog
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getImportLogs_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getImportLogs_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ImportLog'
          nullable: false
          readOnly: true
          type: array
      type: object
    getMacAddresses_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/MACAddress'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        address: 00-00-5E-00-53-AF
        configuration: ""
        _links:
          self:
            href: href
        name: name
        id: 103307
        type: MACAddress
        macPool:
          name: name
          id: 103307
          type: type
        userDefinedFields:
          key: userDefinedFields
    getMacAddresses_200_response:
      example:
        data:
        - address: 00-00-5E-00-53-AF
          configuration: ""
          _links:
            self:
              href: href
          name: name
          id: 103307
          type: MACAddress
          macPool:
            name: name
            id: 103307
            type: type
          userDefinedFields:
            key: userDefinedFields
        - address: 00-00-5E-00-53-AF
          configuration: ""
          _links:
            self:
              href: href
          name: name
          id: 103307
          type: MACAddress
          macPool:
            name: name
            id: 103307
            type: type
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getMacAddresses_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getMacAddresses_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/MACAddress'
          nullable: false
          readOnly: true
          type: array
      type: object
    getMacPools_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/DenyMACPool'
        - $ref: '#/components/schemas/MACPool'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getMacPools_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getMacPools_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getMacPools_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/DenyMACPool'
      - $ref: '#/components/schemas/MACPool'
    getMacPools_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getMacPools_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putMacPool_200_response:
      allOf:
      - $ref: '#/components/schemas/MACPool'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        configuration: ""
        _links:
          self:
            href: href
        instantDeploymentEnabled: true
        name: name
        id: 103307
        type: MACPool
        userDefinedFields:
          key: userDefinedFields
    getMerges_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPv4BlockMerge'
        - $ref: '#/components/schemas/IPv4NetworkMerge'
        - $ref: '#/components/schemas/IPv4DHCPRangeMerge'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getMerges_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getMerges_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getMerges_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/IPv4BlockMerge'
      - $ref: '#/components/schemas/IPv4NetworkMerge'
      - $ref: '#/components/schemas/IPv4DHCPRangeMerge'
    getMerges_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getMerges_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postCollectionMerge_request:
      discriminator:
        mapping:
          IPv4BlockMerge: '#/components/schemas/IPv4BlockMergePostRequestBody'
          IPv4NetworkMerge: '#/components/schemas/IPv4NetworkMergePostRequestBody'
          IPv4DHCPRangeMerge: '#/components/schemas/IPv4DHCPRangeMergePostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4BlockMergePostRequestBody'
      - $ref: '#/components/schemas/IPv4NetworkMergePostRequestBody'
      - $ref: '#/components/schemas/IPv4DHCPRangeMergePostRequestBody'
    getMoves_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPMove'
        - $ref: '#/components/schemas/DNSMove'
        - $ref: '#/components/schemas/DeploymentRoleMove'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getMoves_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getMoves_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getMoves_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/IPMove'
      - $ref: '#/components/schemas/DNSMove'
      - $ref: '#/components/schemas/DeploymentRoleMove'
    getMoves_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getMoves_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postCollectionMove_request:
      discriminator:
        mapping:
          IPMove: '#/components/schemas/IPMovePostRequestBody'
          DNSMove: '#/components/schemas/DNSMovePostRequestBody'
          DeploymentRoleMove: '#/components/schemas/DeploymentRoleMovePostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPMovePostRequestBody'
      - $ref: '#/components/schemas/DNSMovePostRequestBody'
      - $ref: '#/components/schemas/DeploymentRoleMovePostRequestBody'
    getNamingPolicies_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/NamingPolicy'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        policyValues:
        - name: naming policy value name
          id: 103307
          type: type
        - name: naming policy value name
          id: 103307
          type: type
        _links:
          self:
            href: href
        policyRestrictions:
        - name: name
          restrictions:
          - matchType: Exact
            value: host
          - matchType: Exact
            value: host
          id: 103307
          type: NamingPolicyRestriction
          userDefinedFields:
            key: userDefinedFields
        - name: name
          restrictions:
          - matchType: Exact
            value: host
          - matchType: Exact
            value: host
          id: 103307
          type: NamingPolicyRestriction
          userDefinedFields:
            key: userDefinedFields
        name: naming policy name
        id: 103307
        type: NamingPolicy
        userDefinedFields:
          key: userDefinedFields
    getNamingPolicies_200_response:
      example:
        data:
        - policyValues:
          - name: naming policy value name
            id: 103307
            type: type
          - name: naming policy value name
            id: 103307
            type: type
          _links:
            self:
              href: href
          policyRestrictions:
          - name: name
            restrictions:
            - matchType: Exact
              value: host
            - matchType: Exact
              value: host
            id: 103307
            type: NamingPolicyRestriction
            userDefinedFields:
              key: userDefinedFields
          - name: name
            restrictions:
            - matchType: Exact
              value: host
            - matchType: Exact
              value: host
            id: 103307
            type: NamingPolicyRestriction
            userDefinedFields:
              key: userDefinedFields
          name: naming policy name
          id: 103307
          type: NamingPolicy
          userDefinedFields:
            key: userDefinedFields
        - policyValues:
          - name: naming policy value name
            id: 103307
            type: type
          - name: naming policy value name
            id: 103307
            type: type
          _links:
            self:
              href: href
          policyRestrictions:
          - name: name
            restrictions:
            - matchType: Exact
              value: host
            - matchType: Exact
              value: host
            id: 103307
            type: NamingPolicyRestriction
            userDefinedFields:
              key: userDefinedFields
          - name: name
            restrictions:
            - matchType: Exact
              value: host
            - matchType: Exact
              value: host
            id: 103307
            type: NamingPolicyRestriction
            userDefinedFields:
              key: userDefinedFields
          name: naming policy name
          id: 103307
          type: NamingPolicy
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getNamingPolicies_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getNamingPolicies_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/NamingPolicy'
          nullable: false
          readOnly: true
          type: array
      type: object
    getNamingPolicyRestrictions_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/NamingPolicyRestriction'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
        name: name
        restrictions:
        - matchType: Exact
          value: host
        - matchType: Exact
          value: host
        id: 103307
        type: NamingPolicyRestriction
        userDefinedFields:
          key: userDefinedFields
    getNamingPolicyRestrictions_200_response:
      example:
        data:
        - _links:
            self:
              href: href
          name: name
          restrictions:
          - matchType: Exact
            value: host
          - matchType: Exact
            value: host
          id: 103307
          type: NamingPolicyRestriction
          userDefinedFields:
            key: userDefinedFields
        - _links:
            self:
              href: href
          name: name
          restrictions:
          - matchType: Exact
            value: host
          - matchType: Exact
            value: host
          id: 103307
          type: NamingPolicyRestriction
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getNamingPolicyRestrictions_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getNamingPolicyRestrictions_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/NamingPolicyRestriction'
          nullable: false
          readOnly: true
          type: array
      type: object
    getNamingPolicyValues_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/NamingPolicyConnectorValue'
        - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
        - $ref: '#/components/schemas/NamingPolicyIntegerValue'
        - $ref: '#/components/schemas/NamingPolicyRequiredValue'
        - $ref: '#/components/schemas/NamingPolicyTextValue'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getNamingPolicyValues_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getNamingPolicyValues_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getNamingPolicyValues_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/NamingPolicyConnectorValue'
      - $ref: '#/components/schemas/NamingPolicyIncrementalValue'
      - $ref: '#/components/schemas/NamingPolicyIntegerValue'
      - $ref: '#/components/schemas/NamingPolicyRequiredValue'
      - $ref: '#/components/schemas/NamingPolicyTextValue'
    getNamingPolicyValues_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getNamingPolicyValues_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postNamingPolicyValue_request:
      discriminator:
        mapping:
          NamingPolicyConnectorValue: '#/components/schemas/NamingPolicyConnectorValuePostRequestBody'
          NamingPolicyIncrementalValue: '#/components/schemas/NamingPolicyIncrementalValuePostRequestBody'
          NamingPolicyIntegerValue: '#/components/schemas/NamingPolicyIntegerValuePostRequestBody'
          NamingPolicyRequiredValue: '#/components/schemas/NamingPolicyRequiredValuePostRequestBody'
          NamingPolicyTextValue: '#/components/schemas/NamingPolicyTextValuePostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/NamingPolicyConnectorValuePostRequestBody'
      - $ref: '#/components/schemas/NamingPolicyIncrementalValuePostRequestBody'
      - $ref: '#/components/schemas/NamingPolicyIntegerValuePostRequestBody'
      - $ref: '#/components/schemas/NamingPolicyRequiredValuePostRequestBody'
      - $ref: '#/components/schemas/NamingPolicyTextValuePostRequestBody'
    putNamingPolicyValue_request:
      discriminator:
        mapping:
          NamingPolicyConnectorValue: '#/components/schemas/NamingPolicyConnectorValuePutRequestBody'
          NamingPolicyIncrementalValue: '#/components/schemas/NamingPolicyIncrementalValuePutRequestBody'
          NamingPolicyIntegerValue: '#/components/schemas/NamingPolicyIntegerValuePutRequestBody'
          NamingPolicyRequiredValue: '#/components/schemas/NamingPolicyRequiredValuePutRequestBody'
          NamingPolicyTextValue: '#/components/schemas/NamingPolicyTextValuePutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/NamingPolicyConnectorValuePutRequestBody'
      - $ref: '#/components/schemas/NamingPolicyIncrementalValuePutRequestBody'
      - $ref: '#/components/schemas/NamingPolicyIntegerValuePutRequestBody'
      - $ref: '#/components/schemas/NamingPolicyRequiredValuePutRequestBody'
      - $ref: '#/components/schemas/NamingPolicyTextValuePutRequestBody'
    getNetworks_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPv4Network'
        - $ref: '#/components/schemas/IPv6Network'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getNetworks_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getNetworks_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getNetworks_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/IPv4Network'
      - $ref: '#/components/schemas/IPv6Network'
    getNetworks_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getNetworks_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putNetwork_request:
      discriminator:
        mapping:
          IPv4Network: '#/components/schemas/IPv4NetworkPutRequestBody'
          IPv6Network: '#/components/schemas/IPv6NetworkPutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4NetworkPutRequestBody'
      - $ref: '#/components/schemas/IPv6NetworkPutRequestBody'
    postBlockNetwork_request:
      discriminator:
        mapping:
          IPv4Network: '#/components/schemas/IPv4NetworkPostRequestBody'
          IPv6Network: '#/components/schemas/IPv6NetworkPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4NetworkPostRequestBody'
      - $ref: '#/components/schemas/IPv6NetworkPostRequestBody'
    getTransactionOperations_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/Operation'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
        id: 103307
        type: Operation
    getTransactionOperations_200_response:
      example:
        data:
        - _links:
            self:
              href: href
          id: 103307
          type: Operation
        - _links:
            self:
              href: href
          id: 103307
          type: Operation
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getTransactionOperations_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTransactionOperations_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Operation'
          nullable: false
          readOnly: true
          type: array
      type: object
    getPolicyItems_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/ResponsePolicyItem'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
        name: host.example.com
        id: 103307
        type: ResponsePolicyItem
    getPolicyItems_200_response:
      example:
        data:
        - _links:
            self:
              href: href
          name: host.example.com
          id: 103307
          type: ResponsePolicyItem
        - _links:
            self:
              href: href
          name: host.example.com
          id: 103307
          type: ResponsePolicyItem
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getPolicyItems_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getPolicyItems_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ResponsePolicyItem'
          nullable: false
          readOnly: true
          type: array
      type: object
    getRanges_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPv4DHCPRange'
        - $ref: '#/components/schemas/IPv6DHCPRange'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getRanges_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getRanges_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getRanges_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/IPv4DHCPRange'
      - $ref: '#/components/schemas/IPv6DHCPRange'
    getRanges_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getRanges_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putRange_request:
      discriminator:
        mapping:
          IPv4DHCPRange: '#/components/schemas/IPv4DHCPRangePutRequestBody'
          IPv6DHCPRange: '#/components/schemas/IPv6DHCPRangePutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4DHCPRangePutRequestBody'
      - $ref: '#/components/schemas/IPv6DHCPRangePutRequestBody'
    postNetworkRange_request:
      discriminator:
        mapping:
          IPv4DHCPRange: '#/components/schemas/IPv4DHCPRangePostRequestBody'
          IPv6DHCPRange: '#/components/schemas/IPv6DHCPRangePostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4DHCPRangePostRequestBody'
      - $ref: '#/components/schemas/IPv6DHCPRangePostRequestBody'
    getRealms_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/KerberosRealm'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        configuration: ""
        _links:
          self:
            href: href
        domain: EXAMPLE.COMPANY.NET
        name: example.company.net
        id: 103307
        type: KerberosRealm
        userDefinedFields:
          key: userDefinedFields
    getRealms_200_response:
      example:
        data:
        - configuration: ""
          _links:
            self:
              href: href
          domain: EXAMPLE.COMPANY.NET
          name: example.company.net
          id: 103307
          type: KerberosRealm
          userDefinedFields:
            key: userDefinedFields
        - configuration: ""
          _links:
            self:
              href: href
          domain: EXAMPLE.COMPANY.NET
          name: example.company.net
          id: 103307
          type: KerberosRealm
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getRealms_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getRealms_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/KerberosRealm'
          nullable: false
          readOnly: true
          type: array
      type: object
    getReconciliationPolicies_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
        - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getReconciliationPolicies_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getReconciliationPolicies_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getReconciliationPolicies_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/IPv4ReconciliationPolicy'
      - $ref: '#/components/schemas/IPv6ReconciliationPolicy'
    getReconciliationPolicies_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getReconciliationPolicies_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putReconciliationPolicy_request:
      discriminator:
        mapping:
          IPv4ReconciliationPolicy: '#/components/schemas/IPv4ReconciliationPolicyPutRequestBody'
          IPv6ReconciliationPolicy: '#/components/schemas/IPv6ReconciliationPolicyPutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4ReconciliationPolicyPutRequestBody'
      - $ref: '#/components/schemas/IPv6ReconciliationPolicyPutRequestBody'
    postCollectionReconciliationPolicy_request:
      discriminator:
        mapping:
          IPv4ReconciliationPolicy: '#/components/schemas/IPv4ReconciliationPolicyPostRequestBody'
          IPv6ReconciliationPolicy: '#/components/schemas/IPv6ReconciliationPolicyPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4ReconciliationPolicyPostRequestBody'
      - $ref: '#/components/schemas/IPv6ReconciliationPolicyPostRequestBody'
    getResourceRecords_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/AliasRecord'
        - $ref: '#/components/schemas/ExternalHostRecord'
        - $ref: '#/components/schemas/GenericRecord'
        - $ref: '#/components/schemas/HINFORecord'
        - $ref: '#/components/schemas/HostRecord'
        - $ref: '#/components/schemas/MXRecord'
        - $ref: '#/components/schemas/NAPTRRecord'
        - $ref: '#/components/schemas/SRVRecord'
        - $ref: '#/components/schemas/TXTRecord'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getResourceRecords_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getResourceRecords_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getResourceRecords_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/AliasRecord'
      - $ref: '#/components/schemas/ExternalHostRecord'
      - $ref: '#/components/schemas/GenericRecord'
      - $ref: '#/components/schemas/HINFORecord'
      - $ref: '#/components/schemas/HostRecord'
      - $ref: '#/components/schemas/MXRecord'
      - $ref: '#/components/schemas/NAPTRRecord'
      - $ref: '#/components/schemas/SRVRecord'
      - $ref: '#/components/schemas/TXTRecord'
    getResourceRecords_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getResourceRecords_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putResourceRecord_request:
      discriminator:
        mapping:
          AliasRecord: '#/components/schemas/AliasRecordPutRequestBody'
          ExternalHostRecord: '#/components/schemas/ExternalHostRecordPutRequestBody'
          GenericRecord: '#/components/schemas/GenericRecordPutRequestBody'
          HINFORecord: '#/components/schemas/HINFORecordPutRequestBody'
          HostRecord: '#/components/schemas/HostRecordPutRequestBody'
          MXRecord: '#/components/schemas/MXRecordPutRequestBody'
          NAPTRRecord: '#/components/schemas/NAPTRRecordPutRequestBody'
          SRVRecord: '#/components/schemas/SRVRecordPutRequestBody'
          TXTRecord: '#/components/schemas/TXTRecordPutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AliasRecordPutRequestBody'
      - $ref: '#/components/schemas/ExternalHostRecordPutRequestBody'
      - $ref: '#/components/schemas/GenericRecordPutRequestBody'
      - $ref: '#/components/schemas/HINFORecordPutRequestBody'
      - $ref: '#/components/schemas/HostRecordPutRequestBody'
      - $ref: '#/components/schemas/MXRecordPutRequestBody'
      - $ref: '#/components/schemas/NAPTRRecordPutRequestBody'
      - $ref: '#/components/schemas/SRVRecordPutRequestBody'
      - $ref: '#/components/schemas/TXTRecordPutRequestBody'
    postAddressResourceRecord_request:
      discriminator:
        mapping:
          HostRecord: '#/components/schemas/LinkedHostRecordPostRequestBody'
          ExternalHostRecord: '#/components/schemas/LinkedExternalHostRecordPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/LinkedHostRecordPostRequestBody'
      - $ref: '#/components/schemas/LinkedExternalHostRecordPostRequestBody'
    postAddressResourceRecord_201_response:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/HostRecord'
        - $ref: '#/components/schemas/ExternalHostRecord'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    postAddressResourceRecord_201_response_1:
      oneOf:
      - $ref: '#/components/schemas/HostRecord'
      - $ref: '#/components/schemas/ExternalHostRecord'
    postCollectionResourceRecord_request:
      discriminator:
        mapping:
          AliasRecord: '#/components/schemas/AliasRecordPostRequestBody'
          ExternalHostRecord: '#/components/schemas/ExternalHostRecordPostRequestBody'
          GenericRecord: '#/components/schemas/GenericRecordPostRequestBody'
          HINFORecord: '#/components/schemas/HINFORecordPostRequestBody'
          HostRecord: '#/components/schemas/HostRecordPostRequestBody'
          MXRecord: '#/components/schemas/MXRecordPostRequestBody'
          NAPTRRecord: '#/components/schemas/NAPTRRecordPostRequestBody'
          SRVRecord: '#/components/schemas/SRVRecordPostRequestBody'
          TXTRecord: '#/components/schemas/TXTRecordPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AliasRecordPostRequestBody'
      - $ref: '#/components/schemas/ExternalHostRecordPostRequestBody'
      - $ref: '#/components/schemas/GenericRecordPostRequestBody'
      - $ref: '#/components/schemas/HINFORecordPostRequestBody'
      - $ref: '#/components/schemas/HostRecordPostRequestBody'
      - $ref: '#/components/schemas/MXRecordPostRequestBody'
      - $ref: '#/components/schemas/NAPTRRecordPostRequestBody'
      - $ref: '#/components/schemas/SRVRecordPostRequestBody'
      - $ref: '#/components/schemas/TXTRecordPostRequestBody'
    getResponsePolicies_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/ResponsePolicy'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        configuration: ""
        _links:
          self:
            href: href
        policyType: ALLOWLIST
        name: Block Response Policy
        id: 103307
        redirectTarget: domain.example.corp
        type: ResponsePolicy
        ttl: 3600
        userDefinedFields:
          key: userDefinedFields
    getResponsePolicies_200_response:
      example:
        data:
        - configuration: ""
          _links:
            self:
              href: href
          policyType: ALLOWLIST
          name: Block Response Policy
          id: 103307
          redirectTarget: domain.example.corp
          type: ResponsePolicy
          ttl: 3600
          userDefinedFields:
            key: userDefinedFields
        - configuration: ""
          _links:
            self:
              href: href
          policyType: ALLOWLIST
          name: Block Response Policy
          id: 103307
          redirectTarget: domain.example.corp
          type: ResponsePolicy
          ttl: 3600
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getResponsePolicies_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getResponsePolicies_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ResponsePolicy'
          nullable: false
          readOnly: true
          type: array
      type: object
    getCollectionRestrictedRanges_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPv4Network'
        - $ref: '#/components/schemas/IPv4Block'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getCollectionRestrictedRanges_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionRestrictedRanges_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getCollectionRestrictedRanges_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/IPv4Network'
      - $ref: '#/components/schemas/IPv4Block'
    getCollectionRestrictedRanges_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionRestrictedRanges_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postCollectionRestrictedRange_request:
      discriminator:
        mapping:
          IPv4Network: '#/components/schemas/LinkedIPv4NetworkPostRequestBody'
          IPv4Block: '#/components/schemas/LinkedIPv4BlockPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/LinkedIPv4NetworkPostRequestBody'
      - $ref: '#/components/schemas/LinkedIPv4BlockPostRequestBody'
    getCollectionRestrictedZones_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/View'
        - $ref: '#/components/schemas/Zone'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getCollectionRestrictedZones_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionRestrictedZones_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getCollectionRestrictedZones_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/View'
      - $ref: '#/components/schemas/Zone'
    getCollectionRestrictedZones_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionRestrictedZones_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postCollectionRestrictedZone_request:
      discriminator:
        mapping:
          View: '#/components/schemas/LinkedViewPostRequestBody'
          Zone: '#/components/schemas/LinkedZonePostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/LinkedViewPostRequestBody'
      - $ref: '#/components/schemas/LinkedZonePostRequestBody'
    getServerGroups_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/ServerGroup'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        configuration: ""
        _links:
          self:
            href: href
        name: name
        id: 103307
        type: ServerGroup
        userDefinedFields:
          key: userDefinedFields
    getServerGroups_200_response:
      example:
        data:
        - configuration: ""
          _links:
            self:
              href: href
          name: name
          id: 103307
          type: ServerGroup
          userDefinedFields:
            key: userDefinedFields
        - configuration: ""
          _links:
            self:
              href: href
          name: name
          id: 103307
          type: ServerGroup
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getServerGroups_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getServerGroups_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/ServerGroup'
          nullable: false
          readOnly: true
          type: array
      type: object
    getServers_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/Server'
        - $ref: '#/components/schemas/HAServer'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getServers_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getServers_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getServers_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/Server'
      - $ref: '#/components/schemas/HAServer'
    getServers_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getServers_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putServer_request:
      discriminator:
        mapping:
          Server: '#/components/schemas/ServerPutRequestBody'
          HAServer: '#/components/schemas/HAServerPutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ServerPutRequestBody'
      - $ref: '#/components/schemas/HAServerPutRequestBody'
    patchServer_request:
      properties:
        state:
          description: "The current state of the server, indicating whether the server\
            \ is enabled or disabled."
          enum:
          - ENABLED
          - DISABLED
          - FAILOVER
          - RESET_CONTROL
          - REPAIR
          type: string
      type: object
    getCollectionServers_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/HAServer'
        - $ref: '#/components/schemas/Server'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getCollectionServers_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionServers_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getCollectionServers_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/HAServer'
      - $ref: '#/components/schemas/Server'
    getCollectionServers_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionServers_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postCollectionServer_request:
      discriminator:
        mapping:
          Server: '#/components/schemas/LinkedServerPostRequestBody'
          HAServer: '#/components/schemas/LinkedHAServerPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/LinkedServerPostRequestBody'
      - $ref: '#/components/schemas/LinkedHAServerPostRequestBody'
    postConfigurationServer_request:
      discriminator:
        mapping:
          Server: '#/components/schemas/ServerPostRequestBody'
          HAServer: '#/components/schemas/HAServerPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ServerPostRequestBody'
      - $ref: '#/components/schemas/HAServerPostRequestBody'
    getDatabaseServers_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/AddressManagerServer'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        address: 10.10.10.10
        _links:
          self:
            href: href
        name: dns2
        enrollmentPercentComplete: 75
        replicationStatus: DISABLED
        id: 103307
        state: STANDALONE
        type: AddressManagerServer
        replicationLatency: PTS60
    getDatabaseServers_200_response:
      example:
        data:
        - address: 10.10.10.10
          _links:
            self:
              href: href
          name: dns2
          enrollmentPercentComplete: 75
          replicationStatus: DISABLED
          id: 103307
          state: STANDALONE
          type: AddressManagerServer
          replicationLatency: PTS60
        - address: 10.10.10.10
          _links:
            self:
              href: href
          name: dns2
          enrollmentPercentComplete: 75
          replicationStatus: DISABLED
          id: 103307
          state: STANDALONE
          type: AddressManagerServer
          replicationLatency: PTS60
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getDatabaseServers_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getDatabaseServers_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/AddressManagerServer'
          nullable: false
          readOnly: true
          type: array
      type: object
    getServerServers_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/Server'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        checkMxValidation: IGNORE
        checkNamesValidation: IGNORE
        configuration: ""
        _links:
          self:
            href: href
        overrideConfigurationLevelDhcpValidation: true
        serverGroup: ""
        dnsServicePrincipal: ""
        snmp:
          port: 161
          version: v1
          enabled: true
        checkMxCnameValidation: IGNORE
        type: Server
        checkIntegrityValidation: NONE
        password: "[PASSWORD]"
        _inheritedFields:
        - _inheritedFields
        - _inheritedFields
        dnsZoneValidationEnabled: true
        privateAddress: 10.10.10.10
        dnsConfigurationValidationEnabled: true
        managementUrl: 10.10.10.10
        id: 103307
        state: ENABLED
        haPingAddress: 10.10.10.10
        haPeerConnectionState: DEGRADED
        dhcpConfigurationValidationEnabled: true
        checkWildcardValidation: IGNORE
        interfaceRedundancyEnabled: true
        interfaces:
        - managementAddress: 10.10.0.1
          servicesIpv6PrefixLength: 64
          server: ""
          servicesIpv6Address: 2001:db8::1:1
          redundancyScenario: ACTIVE_BACKUP
          secondaryAddress: 10.10.10.5
          configuration: ""
          type: NetworkInterface
          servicesIpv4PrefixLength: 24
          userDefinedFields:
            key: userDefinedFields
          haBackboneAddress: 10.10.10.5
          name: name
          id: 103307
          haBackbonePrefixLength: 24
          servicesIpv4Address: 10.10.10.1
          redundancyEnabled: true
        - managementAddress: 10.10.0.1
          servicesIpv6PrefixLength: 64
          server: ""
          servicesIpv6Address: 2001:db8::1:1
          redundancyScenario: ACTIVE_BACKUP
          secondaryAddress: 10.10.10.5
          configuration: ""
          type: NetworkInterface
          servicesIpv4PrefixLength: 24
          userDefinedFields:
            key: userDefinedFields
          haBackboneAddress: 10.10.10.5
          name: name
          id: 103307
          haBackbonePrefixLength: 24
          servicesIpv4Address: 10.10.10.1
          redundancyEnabled: true
        checkNsValidation: IGNORE
        haBackboneEnabled: true
        dedicatedManagementEnabled: true
        profile: ADONIS_XMB4
        overrideConfigurationLevelDnsValidation: true
        selfIpAddress: 10.10.10.10
        haDiskState: DEGRADED
        dhcpServicePrincipal: ""
        monitoringEnabled: true
        userDefinedFields:
          key: userDefinedFields
        connected: true
        checkSrvCnameValidation: IGNORE
        encryptedNotificationsEnabled: true
        hsmSupportEnabled: true
        name: name
        location: ""
        haRole: NOT_AVAILABLE
        username: admin
        statistics:
          key: "{}"
    getServerServers_200_response:
      example:
        data:
        - checkMxValidation: IGNORE
          checkNamesValidation: IGNORE
          configuration: ""
          _links:
            self:
              href: href
          overrideConfigurationLevelDhcpValidation: true
          serverGroup: ""
          dnsServicePrincipal: ""
          snmp:
            port: 161
            version: v1
            enabled: true
          checkMxCnameValidation: IGNORE
          type: Server
          checkIntegrityValidation: NONE
          password: "[PASSWORD]"
          _inheritedFields:
          - _inheritedFields
          - _inheritedFields
          dnsZoneValidationEnabled: true
          privateAddress: 10.10.10.10
          dnsConfigurationValidationEnabled: true
          managementUrl: 10.10.10.10
          id: 103307
          state: ENABLED
          haPingAddress: 10.10.10.10
          haPeerConnectionState: DEGRADED
          dhcpConfigurationValidationEnabled: true
          checkWildcardValidation: IGNORE
          interfaceRedundancyEnabled: true
          interfaces:
          - managementAddress: 10.10.0.1
            servicesIpv6PrefixLength: 64
            server: ""
            servicesIpv6Address: 2001:db8::1:1
            redundancyScenario: ACTIVE_BACKUP
            secondaryAddress: 10.10.10.5
            configuration: ""
            type: NetworkInterface
            servicesIpv4PrefixLength: 24
            userDefinedFields:
              key: userDefinedFields
            haBackboneAddress: 10.10.10.5
            name: name
            id: 103307
            haBackbonePrefixLength: 24
            servicesIpv4Address: 10.10.10.1
            redundancyEnabled: true
          - managementAddress: 10.10.0.1
            servicesIpv6PrefixLength: 64
            server: ""
            servicesIpv6Address: 2001:db8::1:1
            redundancyScenario: ACTIVE_BACKUP
            secondaryAddress: 10.10.10.5
            configuration: ""
            type: NetworkInterface
            servicesIpv4PrefixLength: 24
            userDefinedFields:
              key: userDefinedFields
            haBackboneAddress: 10.10.10.5
            name: name
            id: 103307
            haBackbonePrefixLength: 24
            servicesIpv4Address: 10.10.10.1
            redundancyEnabled: true
          checkNsValidation: IGNORE
          haBackboneEnabled: true
          dedicatedManagementEnabled: true
          profile: ADONIS_XMB4
          overrideConfigurationLevelDnsValidation: true
          selfIpAddress: 10.10.10.10
          haDiskState: DEGRADED
          dhcpServicePrincipal: ""
          monitoringEnabled: true
          userDefinedFields:
            key: userDefinedFields
          connected: true
          checkSrvCnameValidation: IGNORE
          encryptedNotificationsEnabled: true
          hsmSupportEnabled: true
          name: name
          location: ""
          haRole: NOT_AVAILABLE
          username: admin
          statistics:
            key: "{}"
        - checkMxValidation: IGNORE
          checkNamesValidation: IGNORE
          configuration: ""
          _links:
            self:
              href: href
          overrideConfigurationLevelDhcpValidation: true
          serverGroup: ""
          dnsServicePrincipal: ""
          snmp:
            port: 161
            version: v1
            enabled: true
          checkMxCnameValidation: IGNORE
          type: Server
          checkIntegrityValidation: NONE
          password: "[PASSWORD]"
          _inheritedFields:
          - _inheritedFields
          - _inheritedFields
          dnsZoneValidationEnabled: true
          privateAddress: 10.10.10.10
          dnsConfigurationValidationEnabled: true
          managementUrl: 10.10.10.10
          id: 103307
          state: ENABLED
          haPingAddress: 10.10.10.10
          haPeerConnectionState: DEGRADED
          dhcpConfigurationValidationEnabled: true
          checkWildcardValidation: IGNORE
          interfaceRedundancyEnabled: true
          interfaces:
          - managementAddress: 10.10.0.1
            servicesIpv6PrefixLength: 64
            server: ""
            servicesIpv6Address: 2001:db8::1:1
            redundancyScenario: ACTIVE_BACKUP
            secondaryAddress: 10.10.10.5
            configuration: ""
            type: NetworkInterface
            servicesIpv4PrefixLength: 24
            userDefinedFields:
              key: userDefinedFields
            haBackboneAddress: 10.10.10.5
            name: name
            id: 103307
            haBackbonePrefixLength: 24
            servicesIpv4Address: 10.10.10.1
            redundancyEnabled: true
          - managementAddress: 10.10.0.1
            servicesIpv6PrefixLength: 64
            server: ""
            servicesIpv6Address: 2001:db8::1:1
            redundancyScenario: ACTIVE_BACKUP
            secondaryAddress: 10.10.10.5
            configuration: ""
            type: NetworkInterface
            servicesIpv4PrefixLength: 24
            userDefinedFields:
              key: userDefinedFields
            haBackboneAddress: 10.10.10.5
            name: name
            id: 103307
            haBackbonePrefixLength: 24
            servicesIpv4Address: 10.10.10.1
            redundancyEnabled: true
          checkNsValidation: IGNORE
          haBackboneEnabled: true
          dedicatedManagementEnabled: true
          profile: ADONIS_XMB4
          overrideConfigurationLevelDnsValidation: true
          selfIpAddress: 10.10.10.10
          haDiskState: DEGRADED
          dhcpServicePrincipal: ""
          monitoringEnabled: true
          userDefinedFields:
            key: userDefinedFields
          connected: true
          checkSrvCnameValidation: IGNORE
          encryptedNotificationsEnabled: true
          hsmSupportEnabled: true
          name: name
          location: ""
          haRole: NOT_AVAILABLE
          username: admin
          statistics:
            key: "{}"
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getServerServers_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getServerServers_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Server'
          nullable: false
          readOnly: true
          type: array
      type: object
    getServicePrincipals_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/KerberosServicePrincipal'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        password: password
        _links:
          self:
            href: href
        name: DHCP/dhcp1.bcn.com
        id: 103307
        type: KerberosServicePrincipal
        keyVersionNumber: 1
        userDefinedFields:
          key: userDefinedFields
    getServicePrincipals_200_response:
      example:
        data:
        - password: password
          _links:
            self:
              href: href
          name: DHCP/dhcp1.bcn.com
          id: 103307
          type: KerberosServicePrincipal
          keyVersionNumber: 1
          userDefinedFields:
            key: userDefinedFields
        - password: password
          _links:
            self:
              href: href
          name: DHCP/dhcp1.bcn.com
          id: 103307
          type: KerberosServicePrincipal
          keyVersionNumber: 1
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getServicePrincipals_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getServicePrincipals_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/KerberosServicePrincipal'
          nullable: false
          readOnly: true
          type: array
      type: object
    patchServicePrincipal_request:
      properties:
        password:
          description: The principal’s Kerberos password. This is the AD user account
            password created on Windows DC.
          example: password
          pattern: ^.*\S+.*$
          type: string
      type: object
    getServerServices_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/AnycastService'
        - $ref: '#/components/schemas/DHCPActivityService'
        - $ref: '#/components/schemas/DHCPStatisticsService'
        - $ref: '#/components/schemas/DNSActivityService'
        - $ref: '#/components/schemas/DNSResolverService'
        - $ref: '#/components/schemas/DNSStatisticsService'
        - $ref: '#/components/schemas/FirewallService'
        - $ref: '#/components/schemas/GatewayService'
        - $ref: '#/components/schemas/InterfacesService'
        - $ref: '#/components/schemas/LicenseService'
        - $ref: '#/components/schemas/NTPService'
        - $ref: '#/components/schemas/SNMPService'
        - $ref: '#/components/schemas/SSHService'
        - $ref: '#/components/schemas/SyslogService'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getServerServices_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getServerServices_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getServerServices_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/AnycastService'
      - $ref: '#/components/schemas/DHCPActivityService'
      - $ref: '#/components/schemas/DHCPStatisticsService'
      - $ref: '#/components/schemas/DNSActivityService'
      - $ref: '#/components/schemas/DNSResolverService'
      - $ref: '#/components/schemas/DNSStatisticsService'
      - $ref: '#/components/schemas/FirewallService'
      - $ref: '#/components/schemas/GatewayService'
      - $ref: '#/components/schemas/InterfacesService'
      - $ref: '#/components/schemas/LicenseService'
      - $ref: '#/components/schemas/NTPService'
      - $ref: '#/components/schemas/SNMPService'
      - $ref: '#/components/schemas/SSHService'
      - $ref: '#/components/schemas/SyslogService'
    getServerServices_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getServerServices_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putServerService_request:
      discriminator:
        mapping:
          AnycastService: '#/components/schemas/AnycastServicePutRequestBody'
          DHCPActivityService: '#/components/schemas/DHCPActivityServicePutRequestBody'
          DHCPStatisticsService: '#/components/schemas/DHCPStatisticsServicePutRequestBody'
          DNSActivityService: '#/components/schemas/DNSActivityServicePutRequestBody'
          DNSResolverService: '#/components/schemas/DNSResolverServicePutRequestBody'
          DNSStatisticsService: '#/components/schemas/DNSStatisticsServicePutRequestBody'
          FirewallService: '#/components/schemas/FirewallServicePutRequestBody'
          GatewayService: '#/components/schemas/GatewayServicePutRequestBody'
          InterfacesService: '#/components/schemas/InterfacesServicePutRequestBody'
          LicenseService: '#/components/schemas/LicenseServicePutRequestBody'
          NTPService: '#/components/schemas/NTPServicePutRequestBody'
          SNMPService: '#/components/schemas/SNMPServicePutRequestBody'
          SSHService: '#/components/schemas/SSHServicePutRequestBody'
          SyslogService: '#/components/schemas/SyslogServicePutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AnycastServicePutRequestBody'
      - $ref: '#/components/schemas/DHCPActivityServicePutRequestBody'
      - $ref: '#/components/schemas/DHCPStatisticsServicePutRequestBody'
      - $ref: '#/components/schemas/DNSActivityServicePutRequestBody'
      - $ref: '#/components/schemas/DNSResolverServicePutRequestBody'
      - $ref: '#/components/schemas/DNSStatisticsServicePutRequestBody'
      - $ref: '#/components/schemas/FirewallServicePutRequestBody'
      - $ref: '#/components/schemas/GatewayServicePutRequestBody'
      - $ref: '#/components/schemas/InterfacesServicePutRequestBody'
      - $ref: '#/components/schemas/LicenseServicePutRequestBody'
      - $ref: '#/components/schemas/NTPServicePutRequestBody'
      - $ref: '#/components/schemas/SNMPServicePutRequestBody'
      - $ref: '#/components/schemas/SSHServicePutRequestBody'
      - $ref: '#/components/schemas/SyslogServicePutRequestBody'
    getSessions_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/UserSession'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        apiTokenExpirationDateTime: 2022-09-15T17:52:07Z
        _links:
          self:
            href: href
        logoutDateTime: 2022-09-14T19:45:03Z
        readOnly: true
        loginDateTime: 2022-09-14T17:45:03Z
        type: UserSession
        password: password
        apiToken: VZoO2Z0BjBaJyvuhE4vNJRWqI9upwDHk70UNi0Ez
        response: "Authentication Error: Ensure that your username and password are\
          \ correct."
        id: 103307
        state: LOGGED_IN
        user:
          accountLocked: true
          administrativeAccessLevels:
            key: administrativeAccessLevels
          x509Required: true
          type: User
          userDefinedFields:
            key: userDefinedFields
          accessType: GUI
          password: password
          phoneNumber: 555-1234
          name: admin
          id: 103307
          passwordResetRequired: true
          authenticator: ""
          securityPrivilege: NO_ACCESS
          email: user@example.com
          historyPrivilege: HIDE
        authenticator:
          secondaryAuthenticator: ""
          name: LDAP authenticator
          id: 103307
          type: Authenticator
          userDefinedFields:
            key: userDefinedFields
        remoteAddress: 192.168.1.1
        username: admin
    getSessions_200_response:
      example:
        data:
        - apiTokenExpirationDateTime: 2022-09-15T17:52:07Z
          _links:
            self:
              href: href
          logoutDateTime: 2022-09-14T19:45:03Z
          readOnly: true
          loginDateTime: 2022-09-14T17:45:03Z
          type: UserSession
          password: password
          apiToken: VZoO2Z0BjBaJyvuhE4vNJRWqI9upwDHk70UNi0Ez
          response: "Authentication Error: Ensure that your username and password\
            \ are correct."
          id: 103307
          state: LOGGED_IN
          user:
            accountLocked: true
            administrativeAccessLevels:
              key: administrativeAccessLevels
            x509Required: true
            type: User
            userDefinedFields:
              key: userDefinedFields
            accessType: GUI
            password: password
            phoneNumber: 555-1234
            name: admin
            id: 103307
            passwordResetRequired: true
            authenticator: ""
            securityPrivilege: NO_ACCESS
            email: user@example.com
            historyPrivilege: HIDE
          authenticator:
            secondaryAuthenticator: ""
            name: LDAP authenticator
            id: 103307
            type: Authenticator
            userDefinedFields:
              key: userDefinedFields
          remoteAddress: 192.168.1.1
          username: admin
        - apiTokenExpirationDateTime: 2022-09-15T17:52:07Z
          _links:
            self:
              href: href
          logoutDateTime: 2022-09-14T19:45:03Z
          readOnly: true
          loginDateTime: 2022-09-14T17:45:03Z
          type: UserSession
          password: password
          apiToken: VZoO2Z0BjBaJyvuhE4vNJRWqI9upwDHk70UNi0Ez
          response: "Authentication Error: Ensure that your username and password\
            \ are correct."
          id: 103307
          state: LOGGED_IN
          user:
            accountLocked: true
            administrativeAccessLevels:
              key: administrativeAccessLevels
            x509Required: true
            type: User
            userDefinedFields:
              key: userDefinedFields
            accessType: GUI
            password: password
            phoneNumber: 555-1234
            name: admin
            id: 103307
            passwordResetRequired: true
            authenticator: ""
            securityPrivilege: NO_ACCESS
            email: user@example.com
            historyPrivilege: HIDE
          authenticator:
            secondaryAuthenticator: ""
            name: LDAP authenticator
            id: 103307
            type: Authenticator
            userDefinedFields:
              key: userDefinedFields
          remoteAddress: 192.168.1.1
          username: admin
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getSessions_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getSessions_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/UserSession'
          nullable: false
          readOnly: true
          type: array
      type: object
    patchSessionCurrent_request:
      properties:
        state:
          description: The state of the user session.
          enum:
          - LOGGED_IN
          - LOGGED_OUT
          - TIMED_OUT
          - EXPIRED
          - LOGIN_FAIL
          - TERMINATED
          type: string
      type: object
    getSettings_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/AuditDataSettings'
        - $ref: '#/components/schemas/GlobalSettings'
        - $ref: '#/components/schemas/LogLevelSettings'
        - $ref: '#/components/schemas/LoginPolicySettings'
        - $ref: '#/components/schemas/MonitoringSettings'
        - $ref: '#/components/schemas/PasswordPolicySettings'
        - $ref: '#/components/schemas/SAMLServiceProviderSettings'
        - $ref: '#/components/schemas/SSOEnforcementSettings'
        - $ref: '#/components/schemas/SystemSettings'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getSettings_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getSettings_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getSettings_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/AuditDataSettings'
      - $ref: '#/components/schemas/GlobalSettings'
      - $ref: '#/components/schemas/LogLevelSettings'
      - $ref: '#/components/schemas/LoginPolicySettings'
      - $ref: '#/components/schemas/MonitoringSettings'
      - $ref: '#/components/schemas/PasswordPolicySettings'
      - $ref: '#/components/schemas/SAMLServiceProviderSettings'
      - $ref: '#/components/schemas/SSOEnforcementSettings'
      - $ref: '#/components/schemas/SystemSettings'
    getSettings_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getSettings_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putSetting_request:
      discriminator:
        mapping:
          AuditDataSettings: '#/components/schemas/AuditDataSettingsPutRequestBody'
          GlobalSettings: '#/components/schemas/GlobalSettingsPutRequestBody'
          LogLevelSettings: '#/components/schemas/LogLevelSettingsPutRequestBody'
          LoginPolicySettings: '#/components/schemas/LoginPolicySettingsPutRequestBody'
          MonitoringSettings: '#/components/schemas/MonitoringSettingsPutRequestBody'
          PasswordPolicySettings: '#/components/schemas/PasswordPolicySettingsPutRequestBody'
          SAMLServiceProviderSettings: '#/components/schemas/SAMLServiceProviderSettingsPutRequestBody'
          SSOEnforcementSettings: '#/components/schemas/SSOEnforcementSettingsPutRequestBody'
          SystemSettings: '#/components/schemas/SystemSettingsPutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AuditDataSettingsPutRequestBody'
      - $ref: '#/components/schemas/GlobalSettingsPutRequestBody'
      - $ref: '#/components/schemas/LogLevelSettingsPutRequestBody'
      - $ref: '#/components/schemas/LoginPolicySettingsPutRequestBody'
      - $ref: '#/components/schemas/MonitoringSettingsPutRequestBody'
      - $ref: '#/components/schemas/PasswordPolicySettingsPutRequestBody'
      - $ref: '#/components/schemas/SAMLServiceProviderSettingsPutRequestBody'
      - $ref: '#/components/schemas/SSOEnforcementSettingsPutRequestBody'
      - $ref: '#/components/schemas/SystemSettingsPutRequestBody'
    getSigningKeys_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/KeySigningKey'
        - $ref: '#/components/schemas/TSIGKey'
        - $ref: '#/components/schemas/ZoneSigningKey'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getSigningKeys_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getSigningKeys_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getSigningKeys_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/KeySigningKey'
      - $ref: '#/components/schemas/TSIGKey'
      - $ref: '#/components/schemas/ZoneSigningKey'
    getSigningKeys_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getSigningKeys_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putSigningKey_200_response:
      allOf:
      - $ref: '#/components/schemas/TSIGKey'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        keyGenerationDateTime: 2023-01-06T16:34:49.797Z
        privateKey: privateKey
        configuration: ""
        _links:
          self:
            href: href
        name: name
        length: 1024
        id: 103307
        state: GENERATED
        type: TSIGKey
        userDefinedFields:
          key: userDefinedFields
        algorithm: MD5
    patchSigningKey_request:
      properties:
        state:
          description: The state of the key.
          enum:
          - GENERATED
          - NOT_GENERATED
          - REGENERATE
          type: string
      type: object
    getSigningPolicies_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/DNSSECSigningPolicy'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        zoneSigningKeyProtectionType: MODULE
        zoneSigningKeyAlgorithm: ECDSAP256SHA256
        _links:
          self:
            href: href
        type: DNSSECSigningPolicy
        zoneSigningKeyRolloverMethod: DOUBLE_SIGNING
        zoneSigningKeySigningPeriod: PT72H
        keySigningKeyProtectionType: MODULE
        keyProvider: ADDRESS_MANAGER
        signatureDigestAlgorithm: SHA1
        keySigningKeyOverrideTtl: PT24H
        id: 103307
        keySigningKeySigningPeriod: PT96H
        keySigningKeyRolloverMethod: DOUBLE_SIGNING
        zoneSigningKeyOverlapPeriod: PT168H
        keySigningKeyAlgorithm: ECDSAP256SHA256
        keySigningKeyValidityPeriod: PT8640H
        keySigningKeyLength: 384
        zoneSigningKeyOverrideTtl: PT24H
        keySigningKeyOverlapPeriod: PT336H
        userDefinedFields:
          key: userDefinedFields
        zoneSigningKeyLength: 384
        zoneSigningKeyValidityPeriod: PT720H
        name: name
        signatureValidityPeriod: PT240H
        signatureResigningPeriod: PT48H
    getSigningPolicies_200_response:
      example:
        data:
        - zoneSigningKeyProtectionType: MODULE
          zoneSigningKeyAlgorithm: ECDSAP256SHA256
          _links:
            self:
              href: href
          type: DNSSECSigningPolicy
          zoneSigningKeyRolloverMethod: DOUBLE_SIGNING
          zoneSigningKeySigningPeriod: PT72H
          keySigningKeyProtectionType: MODULE
          keyProvider: ADDRESS_MANAGER
          signatureDigestAlgorithm: SHA1
          keySigningKeyOverrideTtl: PT24H
          id: 103307
          keySigningKeySigningPeriod: PT96H
          keySigningKeyRolloverMethod: DOUBLE_SIGNING
          zoneSigningKeyOverlapPeriod: PT168H
          keySigningKeyAlgorithm: ECDSAP256SHA256
          keySigningKeyValidityPeriod: PT8640H
          keySigningKeyLength: 384
          zoneSigningKeyOverrideTtl: PT24H
          keySigningKeyOverlapPeriod: PT336H
          userDefinedFields:
            key: userDefinedFields
          zoneSigningKeyLength: 384
          zoneSigningKeyValidityPeriod: PT720H
          name: name
          signatureValidityPeriod: PT240H
          signatureResigningPeriod: PT48H
        - zoneSigningKeyProtectionType: MODULE
          zoneSigningKeyAlgorithm: ECDSAP256SHA256
          _links:
            self:
              href: href
          type: DNSSECSigningPolicy
          zoneSigningKeyRolloverMethod: DOUBLE_SIGNING
          zoneSigningKeySigningPeriod: PT72H
          keySigningKeyProtectionType: MODULE
          keyProvider: ADDRESS_MANAGER
          signatureDigestAlgorithm: SHA1
          keySigningKeyOverrideTtl: PT24H
          id: 103307
          keySigningKeySigningPeriod: PT96H
          keySigningKeyRolloverMethod: DOUBLE_SIGNING
          zoneSigningKeyOverlapPeriod: PT168H
          keySigningKeyAlgorithm: ECDSAP256SHA256
          keySigningKeyValidityPeriod: PT8640H
          keySigningKeyLength: 384
          zoneSigningKeyOverrideTtl: PT24H
          keySigningKeyOverlapPeriod: PT336H
          userDefinedFields:
            key: userDefinedFields
          zoneSigningKeyLength: 384
          zoneSigningKeyValidityPeriod: PT720H
          name: name
          signatureValidityPeriod: PT240H
          signatureResigningPeriod: PT48H
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getSigningPolicies_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getSigningPolicies_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/DNSSECSigningPolicy'
          nullable: false
          readOnly: true
          type: array
      type: object
    getSplits_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPv4BlockSplit'
        - $ref: '#/components/schemas/IPv4NetworkSplit'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getSplits_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getSplits_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getSplits_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/IPv4BlockSplit'
      - $ref: '#/components/schemas/IPv4NetworkSplit'
    getSplits_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getSplits_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postCollectionSplit_request:
      discriminator:
        mapping:
          IPv4BlockSplit: '#/components/schemas/IPv4BlockSplitPostRequestBody'
          IPv4NetworkSplit: '#/components/schemas/IPv4NetworkSplitPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4BlockSplitPostRequestBody'
      - $ref: '#/components/schemas/IPv4NetworkSplitPostRequestBody'
    getSubclasses_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/DHCPv4Subclass'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        configuration: ""
        _links:
          self:
            href: href
        name: name
        description: description
        id: 103307
        type: DHCPv4Subclass
        value: value
        userDefinedFields:
          key: userDefinedFields
    getSubclasses_200_response:
      example:
        data:
        - configuration: ""
          _links:
            self:
              href: href
          name: name
          description: description
          id: 103307
          type: DHCPv4Subclass
          value: value
          userDefinedFields:
            key: userDefinedFields
        - configuration: ""
          _links:
            self:
              href: href
          name: name
          description: description
          id: 103307
          type: DHCPv4Subclass
          value: value
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getSubclasses_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getSubclasses_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/DHCPv4Subclass'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTagGroups_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/TagGroup'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
        name: EMEA Tag Group
        id: 103307
        type: TagGroup
        userDefinedFields:
          key: userDefinedFields
    getTagGroups_200_response:
      example:
        data:
        - _links:
            self:
              href: href
          name: EMEA Tag Group
          id: 103307
          type: TagGroup
          userDefinedFields:
            key: userDefinedFields
        - _links:
            self:
              href: href
          name: EMEA Tag Group
          id: 103307
          type: TagGroup
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getTagGroups_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTagGroups_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/TagGroup'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTags_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/Tag'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
        name: UK Office
        id: 103307
        type: Tag
        userDefinedFields:
          key: userDefinedFields
    getTags_200_response:
      example:
        data:
        - _links:
            self:
              href: href
          name: UK Office
          id: 103307
          type: Tag
          userDefinedFields:
            key: userDefinedFields
        - _links:
            self:
              href: href
          name: UK Office
          id: 103307
          type: Tag
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getTags_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTags_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Tag'
          nullable: false
          readOnly: true
          type: array
      type: object
    getUserTasks_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/Task'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        startDateTime: 2022-01-15T00:00:00Z
        dueDateTime: 2022-01-25T00:00:00Z
        _links:
          self:
            href: href
        name: task1
        comment: A custom comment.
        id: 103307
        state: NOT_STARTED
        percentComplete: 14
        type: Task
        priority: ALL
        userDefinedFields:
          key: userDefinedFields
    getUserTasks_200_response:
      example:
        data:
        - startDateTime: 2022-01-15T00:00:00Z
          dueDateTime: 2022-01-25T00:00:00Z
          _links:
            self:
              href: href
          name: task1
          comment: A custom comment.
          id: 103307
          state: NOT_STARTED
          percentComplete: 14
          type: Task
          priority: ALL
          userDefinedFields:
            key: userDefinedFields
        - startDateTime: 2022-01-15T00:00:00Z
          dueDateTime: 2022-01-25T00:00:00Z
          _links:
            self:
              href: href
          name: task1
          comment: A custom comment.
          id: 103307
          state: NOT_STARTED
          percentComplete: 14
          type: Task
          priority: ALL
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getUserTasks_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getUserTasks_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Task'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTemplateApplications_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPv4TemplateApplication'
        - $ref: '#/components/schemas/ZoneTemplateApplication'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getTemplateApplications_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getTemplateApplications_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTemplateApplications_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/IPv4TemplateApplication'
      - $ref: '#/components/schemas/ZoneTemplateApplication'
    getTemplateApplications_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getTemplateApplications_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postCollectionTemplateApplication_request:
      discriminator:
        mapping:
          IPv4TemplateApplication: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
          ZoneTemplateApplication: '#/components/schemas/ZoneTemplateApplicationPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4TemplateApplicationPostRequestBody'
      - $ref: '#/components/schemas/ZoneTemplateApplicationPostRequestBody'
    getTemplateItems_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
        - $ref: '#/components/schemas/IPv4GatewayTemplateItem'
        - $ref: '#/components/schemas/IPv4GroupTemplateItem'
        - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getTemplateItems_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getTemplateItems_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTemplateItems_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
      - $ref: '#/components/schemas/IPv4GatewayTemplateItem'
      - $ref: '#/components/schemas/IPv4GroupTemplateItem'
      - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
    getTemplateItems_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getTemplateItems_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putTemplateItem_request:
      discriminator:
        mapping:
          IPv4DHCPRangeTemplateItem: '#/components/schemas/IPv4DHCPRangeTemplateItemPutRequestBody'
          IPv4GatewayTemplateItem: '#/components/schemas/IPv4GatewayTemplateItemPutRequestBody'
          IPv4GroupTemplateItem: '#/components/schemas/IPv4GroupTemplateItemPutRequestBody'
          IPv4ReservedRangeTemplateItem: '#/components/schemas/IPv4ReservedRangeTemplateItemPutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemPutRequestBody'
      - $ref: '#/components/schemas/IPv4GatewayTemplateItemPutRequestBody'
      - $ref: '#/components/schemas/IPv4GroupTemplateItemPutRequestBody'
      - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItemPutRequestBody'
    postTemplateTemplateItem_request:
      discriminator:
        mapping:
          IPv4DHCPRangeTemplateItem: '#/components/schemas/IPv4DHCPRangeTemplateItemPostRequestBody'
          IPv4GroupTemplateItem: '#/components/schemas/IPv4GroupTemplateItemPostRequestBody'
          IPv4ReservedRangeTemplateItem: '#/components/schemas/IPv4ReservedRangeTemplateItemPostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItemPostRequestBody'
      - $ref: '#/components/schemas/IPv4GroupTemplateItemPostRequestBody'
      - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItemPostRequestBody'
    postTemplateTemplateItem_201_response:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
        - $ref: '#/components/schemas/IPv4GroupTemplateItem'
        - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    postTemplateTemplateItem_201_response_1:
      oneOf:
      - $ref: '#/components/schemas/IPv4DHCPRangeTemplateItem'
      - $ref: '#/components/schemas/IPv4GroupTemplateItem'
      - $ref: '#/components/schemas/IPv4ReservedRangeTemplateItem'
    getTemplates_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/IPv4Template'
        - $ref: '#/components/schemas/ZoneTemplate'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getTemplates_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getTemplates_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTemplates_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/IPv4Template'
      - $ref: '#/components/schemas/ZoneTemplate'
    getTemplates_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getTemplates_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putTemplate_request:
      discriminator:
        mapping:
          IPv4Template: '#/components/schemas/IPv4TemplatePutRequestBody'
          ZoneTemplate: '#/components/schemas/ZoneTemplatePutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4TemplatePutRequestBody'
      - $ref: '#/components/schemas/ZoneTemplatePutRequestBody'
    getCollectionTemplates_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/ZoneTemplate'
        - $ref: '#/components/schemas/IPv4Template'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getCollectionTemplates_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionTemplates_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getCollectionTemplates_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/ZoneTemplate'
      - $ref: '#/components/schemas/IPv4Template'
    getCollectionTemplates_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionTemplates_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postCollectionTemplate_request:
      discriminator:
        mapping:
          IPv4Template: '#/components/schemas/IPv4TemplatePostRequestBody'
          ZoneTemplate: '#/components/schemas/ZoneTemplatePostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/IPv4TemplatePostRequestBody'
      - $ref: '#/components/schemas/ZoneTemplatePostRequestBody'
    getTftpGroups_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/TFTPGroup'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        configuration: ""
        _links:
          self:
            href: href
        name: TFTP GROUP 1
        id: 103307
        type: TFTPGroup
        userDefinedFields:
          key: userDefinedFields
    getTftpGroups_200_response:
      example:
        data:
        - configuration: ""
          _links:
            self:
              href: href
          name: TFTP GROUP 1
          id: 103307
          type: TFTPGroup
          userDefinedFields:
            key: userDefinedFields
        - configuration: ""
          _links:
            self:
              href: href
          name: TFTP GROUP 1
          id: 103307
          type: TFTPGroup
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getTftpGroups_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTftpGroups_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/TFTPGroup'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTransactions_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/Transaction'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        transactionType: UNDO
        _links:
          self:
            href: href
        revertingTransaction: ""
        description: Zone was moved
        comment: Moved zone to a new view.
        id: 103307
        type: Transaction
        operation: ADD_AAAA_RECORD
        user:
          accountLocked: true
          administrativeAccessLevels:
            key: administrativeAccessLevels
          x509Required: true
          type: User
          userDefinedFields:
            key: userDefinedFields
          accessType: GUI
          password: password
          phoneNumber: 555-1234
          name: admin
          id: 103307
          passwordResetRequired: true
          authenticator: ""
          securityPrivilege: NO_ACCESS
          email: user@example.com
          historyPrivilege: HIDE
        transactionId: 3149
        creationDateTime: 2022-11-15T19:48:05Z
    getTransactions_200_response:
      example:
        data:
        - transactionType: UNDO
          _links:
            self:
              href: href
          revertingTransaction: ""
          description: Zone was moved
          comment: Moved zone to a new view.
          id: 103307
          type: Transaction
          operation: ADD_AAAA_RECORD
          user:
            accountLocked: true
            administrativeAccessLevels:
              key: administrativeAccessLevels
            x509Required: true
            type: User
            userDefinedFields:
              key: userDefinedFields
            accessType: GUI
            password: password
            phoneNumber: 555-1234
            name: admin
            id: 103307
            passwordResetRequired: true
            authenticator: ""
            securityPrivilege: NO_ACCESS
            email: user@example.com
            historyPrivilege: HIDE
          transactionId: 3149
          creationDateTime: 2022-11-15T19:48:05Z
        - transactionType: UNDO
          _links:
            self:
              href: href
          revertingTransaction: ""
          description: Zone was moved
          comment: Moved zone to a new view.
          id: 103307
          type: Transaction
          operation: ADD_AAAA_RECORD
          user:
            accountLocked: true
            administrativeAccessLevels:
              key: administrativeAccessLevels
            x509Required: true
            type: User
            userDefinedFields:
              key: userDefinedFields
            accessType: GUI
            password: password
            phoneNumber: 555-1234
            name: admin
            id: 103307
            passwordResetRequired: true
            authenticator: ""
            securityPrivilege: NO_ACCESS
            email: user@example.com
            historyPrivilege: HIDE
          transactionId: 3149
          creationDateTime: 2022-11-15T19:48:05Z
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getTransactions_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTransactions_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Transaction'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTrustRelationships_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/TrustRelationship'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        keyGenerationDateTime: 2022-09-14T19:35:37Z
        password: apiPassword
        address: 192.168.1.1
        _links:
          self:
            href: href
        id: 103307
        state: TRUSTED
        type: TrustRelationship
        username: apiUser
    getTrustRelationships_200_response:
      example:
        data:
        - keyGenerationDateTime: 2022-09-14T19:35:37Z
          password: apiPassword
          address: 192.168.1.1
          _links:
            self:
              href: href
          id: 103307
          state: TRUSTED
          type: TrustRelationship
          username: apiUser
        - keyGenerationDateTime: 2022-09-14T19:35:37Z
          password: apiPassword
          address: 192.168.1.1
          _links:
            self:
              href: href
          id: 103307
          state: TRUSTED
          type: TrustRelationship
          username: apiUser
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getTrustRelationships_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getTrustRelationships_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/TrustRelationship'
          nullable: false
          readOnly: true
          type: array
      type: object
    patchTrustRelationship_request:
      properties:
        state:
          description: The state of the trust relationship.
          enum:
          - TRUSTED
          - UNTRUSTED
          - REFRESH_KEYS
          type: string
      type: object
    getUserDefinedFieldDefinitions_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/UserDefinedFieldDefinition'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
        displayName: BlueCat Gateway
        defaultValue: all
        dataType: BOOLEAN
        name: BlueCatGateway
        validationProperties:
          min: 3
          max: 1000
          minLength: 0
          pattern: '*@b.co*'
          maxLength: 10
        predefinedValues:
        - predefinedValues
        - predefinedValues
        id: 103307
        type: UserDefinedFieldDefinition
        required: true
        resourceType: ACL
    getUserDefinedFieldDefinitions_200_response:
      example:
        data:
        - _links:
            self:
              href: href
          displayName: BlueCat Gateway
          defaultValue: all
          dataType: BOOLEAN
          name: BlueCatGateway
          validationProperties:
            min: 3
            max: 1000
            minLength: 0
            pattern: '*@b.co*'
            maxLength: 10
          predefinedValues:
          - predefinedValues
          - predefinedValues
          id: 103307
          type: UserDefinedFieldDefinition
          required: true
          resourceType: ACL
        - _links:
            self:
              href: href
          displayName: BlueCat Gateway
          defaultValue: all
          dataType: BOOLEAN
          name: BlueCatGateway
          validationProperties:
            min: 3
            max: 1000
            minLength: 0
            pattern: '*@b.co*'
            maxLength: 10
          predefinedValues:
          - predefinedValues
          - predefinedValues
          id: 103307
          type: UserDefinedFieldDefinition
          required: true
          resourceType: ACL
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getUserDefinedFieldDefinitions_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getUserDefinedFieldDefinitions_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/UserDefinedFieldDefinition'
          nullable: false
          readOnly: true
          type: array
      type: object
    getUserDefinedLinkDefinitions_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/UserDefinedLinkDefinition'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        sourceTypes:
        - DenyMACPool
        - DenyMACPool
        _links:
          self:
            href: href
        displayName: UDL IP4Addr to IP4Block
        name: UDL IP4Addr to IP4Block
        description: A UDL to link IPv4 Addresses to IPv4 Blocks.
        id: 103307
        destinationTypes:
        - DenyMACPool
        - DenyMACPool
        type: UserDefinedLinkDefinition
    getUserDefinedLinkDefinitions_200_response:
      example:
        data:
        - sourceTypes:
          - DenyMACPool
          - DenyMACPool
          _links:
            self:
              href: href
          displayName: UDL IP4Addr to IP4Block
          name: UDL IP4Addr to IP4Block
          description: A UDL to link IPv4 Addresses to IPv4 Blocks.
          id: 103307
          destinationTypes:
          - DenyMACPool
          - DenyMACPool
          type: UserDefinedLinkDefinition
        - sourceTypes:
          - DenyMACPool
          - DenyMACPool
          _links:
            self:
              href: href
          displayName: UDL IP4Addr to IP4Block
          name: UDL IP4Addr to IP4Block
          description: A UDL to link IPv4 Addresses to IPv4 Blocks.
          id: 103307
          destinationTypes:
          - DenyMACPool
          - DenyMACPool
          type: UserDefinedLinkDefinition
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getUserDefinedLinkDefinitions_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getUserDefinedLinkDefinitions_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/UserDefinedLinkDefinition'
          nullable: false
          readOnly: true
          type: array
      type: object
    getCollectionUserDefinedLinks_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/UserDefinedLinkedResource'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
        linkDescription: Sample description.
        linkDefinition: ""
        id: 103307
        type: UserDefinedLinkedResource
    getCollectionUserDefinedLinks_200_response:
      example:
        data:
        - _links:
            self:
              href: href
          linkDescription: Sample description.
          linkDefinition: ""
          id: 103307
          type: UserDefinedLinkedResource
        - _links:
            self:
              href: href
          linkDescription: Sample description.
          linkDefinition: ""
          id: 103307
          type: UserDefinedLinkedResource
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionUserDefinedLinks_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getCollectionUserDefinedLinks_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/UserDefinedLinkedResource'
          nullable: false
          readOnly: true
          type: array
      type: object
    getUsers_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/User'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        accountLocked: true
        _links:
          self:
            href: href
        administrativeAccessLevels:
          key: administrativeAccessLevels
        x509Required: true
        type: User
        userDefinedFields:
          key: userDefinedFields
        accessType: GUI
        password: password
        phoneNumber: 555-1234
        name: admin
        id: 103307
        passwordResetRequired: true
        authenticator: ""
        securityPrivilege: NO_ACCESS
        email: user@example.com
        historyPrivilege: HIDE
    getUsers_200_response:
      example:
        data:
        - accountLocked: true
          _links:
            self:
              href: href
          administrativeAccessLevels:
            key: administrativeAccessLevels
          x509Required: true
          type: User
          userDefinedFields:
            key: userDefinedFields
          accessType: GUI
          password: password
          phoneNumber: 555-1234
          name: admin
          id: 103307
          passwordResetRequired: true
          authenticator: ""
          securityPrivilege: NO_ACCESS
          email: user@example.com
          historyPrivilege: HIDE
        - accountLocked: true
          _links:
            self:
              href: href
          administrativeAccessLevels:
            key: administrativeAccessLevels
          x509Required: true
          type: User
          userDefinedFields:
            key: userDefinedFields
          accessType: GUI
          password: password
          phoneNumber: 555-1234
          name: admin
          id: 103307
          passwordResetRequired: true
          authenticator: ""
          securityPrivilege: NO_ACCESS
          email: user@example.com
          historyPrivilege: HIDE
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getUsers_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getUsers_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/User'
          nullable: false
          readOnly: true
          type: array
      type: object
    patchUser_request:
      properties:
        password:
          description: The password of the user.
          example: password
          pattern: ^.*\S+.*$
          type: string
          writeOnly: true
      type: object
    getResources_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/Resource'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
        name: name
        id: 103307
        type: Resource
        userDefinedFields:
          key: userDefinedFields
    getResources_200_response:
      example:
        data:
        - _links:
            self:
              href: href
          name: name
          id: 103307
          type: Resource
          userDefinedFields:
            key: userDefinedFields
        - _links:
            self:
              href: href
          name: name
          id: 103307
          type: Resource
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getResources_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getResources_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/Resource'
          nullable: false
          readOnly: true
          type: array
      type: object
    getRoot_200_response:
      allOf:
      - $ref: '#/components/schemas/AddressManager'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        hostname: hostname
        _links:
          self:
            href: href
        name: name
        id: 103307
        type: AddressManager
        version: version
        userDefinedFields:
          key: userDefinedFields
    getVendorProfiles_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/VendorProfile'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        identifier: "Cisco Systems, Inc. IP Phone CP-7940G"
        _links:
          self:
            href: href
        name: Cisco IP phones
        description: Vendor profile for Cisco IP phones
        id: 103307
        type: VendorProfile
        userDefinedFields:
          key: userDefinedFields
    getVendorProfiles_200_response:
      example:
        data:
        - identifier: "Cisco Systems, Inc. IP Phone CP-7940G"
          _links:
            self:
              href: href
          name: Cisco IP phones
          description: Vendor profile for Cisco IP phones
          id: 103307
          type: VendorProfile
          userDefinedFields:
            key: userDefinedFields
        - identifier: "Cisco Systems, Inc. IP Phone CP-7940G"
          _links:
            self:
              href: href
          name: Cisco IP phones
          description: Vendor profile for Cisco IP phones
          id: 103307
          type: VendorProfile
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getVendorProfiles_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getVendorProfiles_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/VendorProfile'
          nullable: false
          readOnly: true
          type: array
      type: object
    getViews_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/View'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        deviceRegistrationPortalAddress: 10.10.10.10
        configuration: ""
        _links:
          self:
            href: href
        name: default
        id: 103307
        type: View
        deviceRegistrationEnabled: true
        userDefinedFields:
          key: userDefinedFields
    getViews_200_response:
      example:
        data:
        - deviceRegistrationPortalAddress: 10.10.10.10
          configuration: ""
          _links:
            self:
              href: href
          name: default
          id: 103307
          type: View
          deviceRegistrationEnabled: true
          userDefinedFields:
            key: userDefinedFields
        - deviceRegistrationPortalAddress: 10.10.10.10
          configuration: ""
          _links:
            self:
              href: href
          name: default
          id: 103307
          type: View
          deviceRegistrationEnabled: true
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getViews_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getViews_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/View'
          nullable: false
          readOnly: true
          type: array
      type: object
    getWorkflowRequests_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/WorkflowRequest'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        creator: ""
        requestType: ADD_ZONE
        dependentResource: ""
        resource: ""
        _links:
          self:
            href: href
        modifier: ""
        comment: Sample comment.
        id: 103307
        state: APPROVED
        type: WorkflowRequest
        modificationDateTime: 2022-10-18T19:11:45Z
        creationDateTime: 2022-10-17T19:11:45Z
    getWorkflowRequests_200_response:
      example:
        data:
        - creator: ""
          requestType: ADD_ZONE
          dependentResource: ""
          resource: ""
          _links:
            self:
              href: href
          modifier: ""
          comment: Sample comment.
          id: 103307
          state: APPROVED
          type: WorkflowRequest
          modificationDateTime: 2022-10-18T19:11:45Z
          creationDateTime: 2022-10-17T19:11:45Z
        - creator: ""
          requestType: ADD_ZONE
          dependentResource: ""
          resource: ""
          _links:
            self:
              href: href
          modifier: ""
          comment: Sample comment.
          id: 103307
          state: APPROVED
          type: WorkflowRequest
          modificationDateTime: 2022-10-18T19:11:45Z
          creationDateTime: 2022-10-17T19:11:45Z
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getWorkflowRequests_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getWorkflowRequests_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/WorkflowRequest'
          nullable: false
          readOnly: true
          type: array
      type: object
    patchWorkflowRequest_request:
      properties:
        state:
          description: The approval state of the workflow request. The state will
            be PENDING if the workflow request has not yet been processed by an authorized
            user.
          enum:
          - APPROVED
          - DENIED
          type: string
      type: object
    getZoneDeclarations_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/DHCPForwardZone'
        - $ref: '#/components/schemas/DHCPReverseZone'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getZoneDeclarations_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getZoneDeclarations_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getZoneDeclarations_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/DHCPForwardZone'
      - $ref: '#/components/schemas/DHCPReverseZone'
    getZoneDeclarations_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getZoneDeclarations_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putZoneDeclaration_request:
      discriminator:
        mapping:
          DHCPForwardZone: '#/components/schemas/DHCPForwardZonePutRequestBody'
          DHCPReverseZone: '#/components/schemas/DHCPReverseZonePutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DHCPForwardZonePutRequestBody'
      - $ref: '#/components/schemas/DHCPReverseZonePutRequestBody'
    postZoneGroupZoneDeclaration_request:
      discriminator:
        mapping:
          DHCPForwardZone: '#/components/schemas/DHCPForwardZonePostRequestBody'
          DHCPReverseZone: '#/components/schemas/DHCPReverseZonePostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DHCPForwardZonePostRequestBody'
      - $ref: '#/components/schemas/DHCPReverseZonePostRequestBody'
    getZoneGroups_200_response_data_inner:
      allOf:
      - $ref: '#/components/schemas/DHCPZoneGroup'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        configuration: ""
        _links:
          self:
            href: href
        name: Zone Group 1
        id: 103307
        type: DHCPZoneGroup
        userDefinedFields:
          key: userDefinedFields
    getZoneGroups_200_response:
      example:
        data:
        - configuration: ""
          _links:
            self:
              href: href
          name: Zone Group 1
          id: 103307
          type: DHCPZoneGroup
          userDefinedFields:
            key: userDefinedFields
        - configuration: ""
          _links:
            self:
              href: href
          name: Zone Group 1
          id: 103307
          type: DHCPZoneGroup
          userDefinedFields:
            key: userDefinedFields
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getZoneGroups_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getZoneGroups_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/DHCPZoneGroup'
          nullable: false
          readOnly: true
          type: array
      type: object
    getZones_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/ENUMNumberZone'
        - $ref: '#/components/schemas/ENUMZone'
        - $ref: '#/components/schemas/ExternalHostsZone'
        - $ref: '#/components/schemas/InternalRootZone'
        - $ref: '#/components/schemas/ResponsePolicyZone'
        - $ref: '#/components/schemas/Zone'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getZones_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getZones_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getZones_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/ENUMNumberZone'
      - $ref: '#/components/schemas/ENUMZone'
      - $ref: '#/components/schemas/ExternalHostsZone'
      - $ref: '#/components/schemas/InternalRootZone'
      - $ref: '#/components/schemas/ResponsePolicyZone'
      - $ref: '#/components/schemas/Zone'
    getZones_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getZones_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    putZone_request:
      discriminator:
        mapping:
          ENUMNumberZone: '#/components/schemas/ENUMNumberZonePutRequestBody'
          ENUMZone: '#/components/schemas/ENUMZonePutRequestBody'
          InternalRootZone: '#/components/schemas/InternalRootZonePutRequestBody'
          Zone: '#/components/schemas/ZonePutRequestBody'
          ResponsePolicyZone: '#/components/schemas/ResponsePolicyZonePutRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ENUMNumberZonePutRequestBody'
      - $ref: '#/components/schemas/ENUMZonePutRequestBody'
      - $ref: '#/components/schemas/InternalRootZonePutRequestBody'
      - $ref: '#/components/schemas/ZonePutRequestBody'
      - $ref: '#/components/schemas/ResponsePolicyZonePutRequestBody'
    putZone_200_response:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/ENUMNumberZone'
        - $ref: '#/components/schemas/ENUMZone'
        - $ref: '#/components/schemas/InternalRootZone'
        - $ref: '#/components/schemas/Zone'
        - $ref: '#/components/schemas/ResponsePolicyZone'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    putZone_200_response_1:
      oneOf:
      - $ref: '#/components/schemas/ENUMNumberZone'
      - $ref: '#/components/schemas/ENUMZone'
      - $ref: '#/components/schemas/InternalRootZone'
      - $ref: '#/components/schemas/Zone'
      - $ref: '#/components/schemas/ResponsePolicyZone'
    getCollectionZones_200_response_data_inner:
      allOf:
      - oneOf:
        - $ref: '#/components/schemas/Zone'
        - $ref: '#/components/schemas/ENUMZone'
      - properties:
          _links:
            $ref: '#/components/schemas/ResourceLinks'
        type: object
      example:
        _links:
          self:
            href: href
    getCollectionZones_200_response:
      example:
        data:
        - _links:
            self:
              href: href
        - _links:
            self:
              href: href
        _links:
          next:
            href: href
          prev:
            href: href
        count: 0
        totalCount: 6
      properties:
        _links:
          $ref: '#/components/schemas/CollectionHalLinks'
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionZones_200_response_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    getCollectionZones_200_response_1_data_inner:
      oneOf:
      - $ref: '#/components/schemas/Zone'
      - $ref: '#/components/schemas/ENUMZone'
    getCollectionZones_200_response_1:
      properties:
        count:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        totalCount:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        data:
          items:
            $ref: '#/components/schemas/getCollectionZones_200_response_1_data_inner'
          nullable: false
          readOnly: true
          type: array
      type: object
    postCollectionZone_request:
      discriminator:
        mapping:
          ENUMNumberZone: '#/components/schemas/ENUMNumberZonePostRequestBody'
          ENUMZone: '#/components/schemas/ENUMZonePostRequestBody'
          InternalRootZone: '#/components/schemas/InternalRootZonePostRequestBody'
          Zone: '#/components/schemas/ZonePostRequestBody'
          ResponsePolicyZone: '#/components/schemas/ResponsePolicyZonePostRequestBody'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ENUMNumberZonePostRequestBody'
      - $ref: '#/components/schemas/ENUMZonePostRequestBody'
      - $ref: '#/components/schemas/InternalRootZonePostRequestBody'
      - $ref: '#/components/schemas/ZonePostRequestBody'
      - $ref: '#/components/schemas/ResponsePolicyZonePostRequestBody'
    Address_macAddress:
      anyOf:
      - allOf:
        - $ref: '#/components/schemas/InlinedMACAddress'
        required:
        - id
      - allOf:
        - $ref: '#/components/schemas/InlinedMACAddress'
        required:
        - address
    AliasRecord_allOf_linkedRecord:
      anyOf:
      - allOf:
        - $ref: '#/components/schemas/InlinedLinkedResourceRecord'
        required:
        - id
      - allOf:
        - $ref: '#/components/schemas/InlinedLinkedResourceRecord'
        required:
        - absoluteName
      nullable: false
    Device_addresses_inner:
      anyOf:
      - allOf:
        - $ref: '#/components/schemas/Address'
        required:
        - id
      - allOf:
        - $ref: '#/components/schemas/Address'
        required:
        - address
    HostRecord_allOf_views:
      allOf:
      - $ref: '#/components/schemas/View'
      required:
      - id
    LinkedHostRecord_allOf_views:
      allOf:
      - $ref: '#/components/schemas/View'
      required:
      - id
    MXRecord_allOf_linkedRecord:
      anyOf:
      - allOf:
        - $ref: '#/components/schemas/InlinedLinkedLinkableHostRecord'
        required:
        - id
      - allOf:
        - $ref: '#/components/schemas/InlinedLinkedLinkableHostRecord'
        required:
        - absoluteName
      nullable: false
    SRVRecord_allOf_linkedRecord:
      anyOf:
      - allOf:
        - $ref: '#/components/schemas/InlinedLinkedLinkableHostRecord'
        required:
        - id
      - allOf:
        - $ref: '#/components/schemas/InlinedLinkedLinkableHostRecord'
        required:
        - absoluteName
      nullable: false
    IPv4Block_allOf_defaultZones:
      allOf:
      - $ref: '#/components/schemas/LinkedZone'
      example:
        id: 103307
        type: Zone
      required:
      - id
    IPv4Block_allOf_restrictedZones:
      allOf:
      - $ref: '#/components/schemas/LinkedViewOrZone'
      example:
        id: 103307
        type: type
      required:
      - id
    DHCPVendorOptionDefinition_allOf_valueFormat:
      nullable: false
      type: object
    DHCPVendorOption_allOf_value:
      type: object
    HAServer_allOf_interfaces:
      anyOf:
      - allOf:
        - $ref: '#/components/schemas/NetworkInterface'
        required:
        - servicesIpv4Address
      - allOf:
        - $ref: '#/components/schemas/NetworkInterface'
        required:
        - servicesIpv6Address
    IPv4BlockMerge_allOf_blocks:
      allOf:
      - $ref: '#/components/schemas/InlinedIPv4Block'
      required:
      - id
    IPv4DHCPRangeMerge_allOf_ranges:
      allOf:
      - $ref: '#/components/schemas/InlinedIPv4DHCPRange'
      required:
      - id
    IPv4NetworkMerge_allOf_networks:
      allOf:
      - $ref: '#/components/schemas/InlinedIPv4Network'
      required:
      - id
    IPMove_allOf_macAddress:
      anyOf:
      - allOf:
        - $ref: '#/components/schemas/InlinedMACAddress'
        required:
        - id
      - allOf:
        - $ref: '#/components/schemas/InlinedMACAddress'
        required:
        - address
      writeOnly: true
    IPv4Network_allOf_defaultZones:
      allOf:
      - $ref: '#/components/schemas/LinkedZone'
      required:
      - id
    IPv4Network_allOf_restrictedZones:
      allOf:
      - $ref: '#/components/schemas/LinkedViewOrZone'
      required:
      - id
    UserDefinedFieldDefinition_validationProperties:
      additionalProperties:
        description: Validation rules assigned to the field when configuring the user
          defined field.
        type: string
      description: Validation rules assigned to the field when configuring the user
        defined field.
      example:
        min: 3
        max: 1000
        minLength: 0
        pattern: '*@b.co*'
        maxLength: 10
      properties:
        min:
          description: The minimum value
          example: 3
          format: int64
          type: integer
        max:
          description: The maximum value
          example: 1000
          format: int64
          type: integer
        minLength:
          description: The minimum length
          example: 0
          format: int32
          type: integer
        maxLength:
          description: The maximum length
          example: 10
          format: int32
          type: integer
        pattern:
          description: The pattern to match against. The wildcard characters supported
            are '*' and '?'.
          example: '*@b.co*'
          type: string
      type: object
    UserDefinedLinkedResource_linkDefinition:
      anyOf:
      - allOf:
        - $ref: '#/components/schemas/InlinedUserDefinedLinkDefinition'
        required:
        - id
      - allOf:
        - $ref: '#/components/schemas/InlinedUserDefinedLinkDefinition'
        required:
        - name
      nullable: false
    DHCPForwardZone_allOf_zone:
      anyOf:
      - allOf:
        - $ref: '#/components/schemas/InlinedZone'
        required:
        - id
      - allOf:
        - $ref: '#/components/schemas/InlinedZone'
        required:
        - absoluteName
      nullable: false
    DHCPReverseZone_allOf_prefix:
      anyOf:
      - allOf:
        - $ref: '#/components/schemas/InlinedLinkedPrefix'
        required:
        - id
      - allOf:
        - $ref: '#/components/schemas/InlinedLinkedPrefix'
        required:
        - range
      nullable: false
    ResourceLinks_self:
      example:
        href: href
      nullable: false
      properties:
        href:
          nullable: false
          readOnly: true
          type: string
      readOnly: true
      type: object
  securitySchemes:
    bearerToken:
      description: Authenticate by providing a valid bearer token
      scheme: bearer
      type: http
    basicAuthentication:
      description: Authenticate using your username and a valid API token as the password
      scheme: basic
      type: http
