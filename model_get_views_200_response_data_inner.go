/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the GetViews200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetViews200ResponseDataInner{}

// GetViews200ResponseDataInner struct for GetViews200ResponseDataInner
type GetViews200ResponseDataInner struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The resource type.
	Type *string `json:"type,omitempty"`
	// The name of the view.
	Name *string `json:"name,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// User-defined fields set for the resource.
	UserDefinedFields *map[string]string `json:"userDefinedFields,omitempty"`
	Configuration *InlinedConfiguration `json:"configuration,omitempty"`
	// Indicates whether DNS redirection has been enabled for use with the BlueCat Device Registration Portal.
	DeviceRegistrationEnabled *bool `json:"deviceRegistrationEnabled,omitempty"`
	// The IPv4 address of the BlueCat Device Registration Portal.
	DeviceRegistrationPortalAddress *string `json:"deviceRegistrationPortalAddress,omitempty"`
	Links *ResourceLinks `json:"_links,omitempty"`
}

// NewGetViews200ResponseDataInner instantiates a new GetViews200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetViews200ResponseDataInner() *GetViews200ResponseDataInner {
	this := GetViews200ResponseDataInner{}
	return &this
}

// NewGetViews200ResponseDataInnerWithDefaults instantiates a new GetViews200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetViews200ResponseDataInnerWithDefaults() *GetViews200ResponseDataInner {
	this := GetViews200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetViews200ResponseDataInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetViews200ResponseDataInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetViews200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetViews200ResponseDataInner) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetViews200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetViews200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetViews200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetViews200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetViews200ResponseDataInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetViews200ResponseDataInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetViews200ResponseDataInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetViews200ResponseDataInner) SetName(v string) {
	o.Name = &v
}

// GetUserDefinedFields returns the UserDefinedFields field value if set, zero value otherwise.
func (o *GetViews200ResponseDataInner) GetUserDefinedFields() map[string]string {
	if o == nil || IsNil(o.UserDefinedFields) {
		var ret map[string]string
		return ret
	}
	return *o.UserDefinedFields
}

// GetUserDefinedFieldsOk returns a tuple with the UserDefinedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetViews200ResponseDataInner) GetUserDefinedFieldsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.UserDefinedFields) {
		return nil, false
	}
	return o.UserDefinedFields, true
}

// HasUserDefinedFields returns a boolean if a field has been set.
func (o *GetViews200ResponseDataInner) HasUserDefinedFields() bool {
	if o != nil && !IsNil(o.UserDefinedFields) {
		return true
	}

	return false
}

// SetUserDefinedFields gets a reference to the given map[string]string and assigns it to the UserDefinedFields field.
func (o *GetViews200ResponseDataInner) SetUserDefinedFields(v map[string]string) {
	o.UserDefinedFields = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *GetViews200ResponseDataInner) GetConfiguration() InlinedConfiguration {
	if o == nil || IsNil(o.Configuration) {
		var ret InlinedConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetViews200ResponseDataInner) GetConfigurationOk() (*InlinedConfiguration, bool) {
	if o == nil || IsNil(o.Configuration) {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *GetViews200ResponseDataInner) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given InlinedConfiguration and assigns it to the Configuration field.
func (o *GetViews200ResponseDataInner) SetConfiguration(v InlinedConfiguration) {
	o.Configuration = &v
}

// GetDeviceRegistrationEnabled returns the DeviceRegistrationEnabled field value if set, zero value otherwise.
func (o *GetViews200ResponseDataInner) GetDeviceRegistrationEnabled() bool {
	if o == nil || IsNil(o.DeviceRegistrationEnabled) {
		var ret bool
		return ret
	}
	return *o.DeviceRegistrationEnabled
}

// GetDeviceRegistrationEnabledOk returns a tuple with the DeviceRegistrationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetViews200ResponseDataInner) GetDeviceRegistrationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DeviceRegistrationEnabled) {
		return nil, false
	}
	return o.DeviceRegistrationEnabled, true
}

// HasDeviceRegistrationEnabled returns a boolean if a field has been set.
func (o *GetViews200ResponseDataInner) HasDeviceRegistrationEnabled() bool {
	if o != nil && !IsNil(o.DeviceRegistrationEnabled) {
		return true
	}

	return false
}

// SetDeviceRegistrationEnabled gets a reference to the given bool and assigns it to the DeviceRegistrationEnabled field.
func (o *GetViews200ResponseDataInner) SetDeviceRegistrationEnabled(v bool) {
	o.DeviceRegistrationEnabled = &v
}

// GetDeviceRegistrationPortalAddress returns the DeviceRegistrationPortalAddress field value if set, zero value otherwise.
func (o *GetViews200ResponseDataInner) GetDeviceRegistrationPortalAddress() string {
	if o == nil || IsNil(o.DeviceRegistrationPortalAddress) {
		var ret string
		return ret
	}
	return *o.DeviceRegistrationPortalAddress
}

// GetDeviceRegistrationPortalAddressOk returns a tuple with the DeviceRegistrationPortalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetViews200ResponseDataInner) GetDeviceRegistrationPortalAddressOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceRegistrationPortalAddress) {
		return nil, false
	}
	return o.DeviceRegistrationPortalAddress, true
}

// HasDeviceRegistrationPortalAddress returns a boolean if a field has been set.
func (o *GetViews200ResponseDataInner) HasDeviceRegistrationPortalAddress() bool {
	if o != nil && !IsNil(o.DeviceRegistrationPortalAddress) {
		return true
	}

	return false
}

// SetDeviceRegistrationPortalAddress gets a reference to the given string and assigns it to the DeviceRegistrationPortalAddress field.
func (o *GetViews200ResponseDataInner) SetDeviceRegistrationPortalAddress(v string) {
	o.DeviceRegistrationPortalAddress = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetViews200ResponseDataInner) GetLinks() ResourceLinks {
	if o == nil || IsNil(o.Links) {
		var ret ResourceLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetViews200ResponseDataInner) GetLinksOk() (*ResourceLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetViews200ResponseDataInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ResourceLinks and assigns it to the Links field.
func (o *GetViews200ResponseDataInner) SetLinks(v ResourceLinks) {
	o.Links = &v
}

func (o GetViews200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetViews200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UserDefinedFields) {
		toSerialize["userDefinedFields"] = o.UserDefinedFields
	}
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !IsNil(o.DeviceRegistrationEnabled) {
		toSerialize["deviceRegistrationEnabled"] = o.DeviceRegistrationEnabled
	}
	if !IsNil(o.DeviceRegistrationPortalAddress) {
		toSerialize["deviceRegistrationPortalAddress"] = o.DeviceRegistrationPortalAddress
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetViews200ResponseDataInner struct {
	value *GetViews200ResponseDataInner
	isSet bool
}

func (v NullableGetViews200ResponseDataInner) Get() *GetViews200ResponseDataInner {
	return v.value
}

func (v *NullableGetViews200ResponseDataInner) Set(val *GetViews200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetViews200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetViews200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetViews200ResponseDataInner(val *GetViews200ResponseDataInner) *NullableGetViews200ResponseDataInner {
	return &NullableGetViews200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetViews200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetViews200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


