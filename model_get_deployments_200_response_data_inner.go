/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
	"time"
)

// checks if the GetDeployments200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDeployments200ResponseDataInner{}

// GetDeployments200ResponseDataInner struct for GetDeployments200ResponseDataInner
type GetDeployments200ResponseDataInner struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The resource type.
	Type *string `json:"type,omitempty"`
	// The current state of the deployment.
	State *string `json:"state,omitempty"`
	// The current status of the deployment.
	Status *string `json:"status,omitempty"`
	// The expanded status message for the deployment.
	Message *string `json:"message,omitempty"`
	// A percentage value representing the current progress of the deployment.
	PercentComplete *int32 `json:"percentComplete,omitempty"`
	// The start time of the deployment.
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	// The completion time for the deployment.
	CompletionDateTime *time.Time `json:"completionDateTime,omitempty"`
	User *User `json:"user,omitempty"`
	// The method that triggered the deployment.
	Method *string `json:"method,omitempty"`
	// The deployment service type.
	Service *string `json:"service,omitempty"`
	// A list of resource record and IP address resources to deploy.
	Resources []InlinedDeployableResource `json:"resources,omitempty"`
	// The method used for batching selective deployment tasks.
	BatchMode *string `json:"batchMode,omitempty"`
	// Defines whether selective deployment tasks include resources that are related to the defined DNS records.
	RecordScope *string `json:"recordScope,omitempty"`
	// Indicates the mode of operation on a failed resource record. If false, the deployment stops when a record fails. If true, the deployment continues when a record fails and the deployment moves to the next record.
	ContinueOnFailureEnabled *bool `json:"continueOnFailureEnabled,omitempty"`
	// Defines how dynamic records are handled with selective deployment tasks.
	DynamicRecordDeploymentStrategy *string `json:"dynamicRecordDeploymentStrategy,omitempty"`
	Links *ResourceLinks `json:"_links,omitempty"`
}

// NewGetDeployments200ResponseDataInner instantiates a new GetDeployments200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeployments200ResponseDataInner() *GetDeployments200ResponseDataInner {
	this := GetDeployments200ResponseDataInner{}
	return &this
}

// NewGetDeployments200ResponseDataInnerWithDefaults instantiates a new GetDeployments200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeployments200ResponseDataInnerWithDefaults() *GetDeployments200ResponseDataInner {
	this := GetDeployments200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetDeployments200ResponseDataInner) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetDeployments200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GetDeployments200ResponseDataInner) SetState(v string) {
	o.State = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetDeployments200ResponseDataInner) SetStatus(v string) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetDeployments200ResponseDataInner) SetMessage(v string) {
	o.Message = &v
}

// GetPercentComplete returns the PercentComplete field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetPercentComplete() int32 {
	if o == nil || IsNil(o.PercentComplete) {
		var ret int32
		return ret
	}
	return *o.PercentComplete
}

// GetPercentCompleteOk returns a tuple with the PercentComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetPercentCompleteOk() (*int32, bool) {
	if o == nil || IsNil(o.PercentComplete) {
		return nil, false
	}
	return o.PercentComplete, true
}

// HasPercentComplete returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasPercentComplete() bool {
	if o != nil && !IsNil(o.PercentComplete) {
		return true
	}

	return false
}

// SetPercentComplete gets a reference to the given int32 and assigns it to the PercentComplete field.
func (o *GetDeployments200ResponseDataInner) SetPercentComplete(v int32) {
	o.PercentComplete = &v
}

// GetStartDateTime returns the StartDateTime field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetStartDateTime() time.Time {
	if o == nil || IsNil(o.StartDateTime) {
		var ret time.Time
		return ret
	}
	return *o.StartDateTime
}

// GetStartDateTimeOk returns a tuple with the StartDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetStartDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDateTime) {
		return nil, false
	}
	return o.StartDateTime, true
}

// HasStartDateTime returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasStartDateTime() bool {
	if o != nil && !IsNil(o.StartDateTime) {
		return true
	}

	return false
}

// SetStartDateTime gets a reference to the given time.Time and assigns it to the StartDateTime field.
func (o *GetDeployments200ResponseDataInner) SetStartDateTime(v time.Time) {
	o.StartDateTime = &v
}

// GetCompletionDateTime returns the CompletionDateTime field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetCompletionDateTime() time.Time {
	if o == nil || IsNil(o.CompletionDateTime) {
		var ret time.Time
		return ret
	}
	return *o.CompletionDateTime
}

// GetCompletionDateTimeOk returns a tuple with the CompletionDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetCompletionDateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CompletionDateTime) {
		return nil, false
	}
	return o.CompletionDateTime, true
}

// HasCompletionDateTime returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasCompletionDateTime() bool {
	if o != nil && !IsNil(o.CompletionDateTime) {
		return true
	}

	return false
}

// SetCompletionDateTime gets a reference to the given time.Time and assigns it to the CompletionDateTime field.
func (o *GetDeployments200ResponseDataInner) SetCompletionDateTime(v time.Time) {
	o.CompletionDateTime = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetUser() User {
	if o == nil || IsNil(o.User) {
		var ret User
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetUserOk() (*User, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given User and assigns it to the User field.
func (o *GetDeployments200ResponseDataInner) SetUser(v User) {
	o.User = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *GetDeployments200ResponseDataInner) SetMethod(v string) {
	o.Method = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *GetDeployments200ResponseDataInner) SetService(v string) {
	o.Service = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetResources() []InlinedDeployableResource {
	if o == nil || IsNil(o.Resources) {
		var ret []InlinedDeployableResource
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetResourcesOk() ([]InlinedDeployableResource, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []InlinedDeployableResource and assigns it to the Resources field.
func (o *GetDeployments200ResponseDataInner) SetResources(v []InlinedDeployableResource) {
	o.Resources = v
}

// GetBatchMode returns the BatchMode field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetBatchMode() string {
	if o == nil || IsNil(o.BatchMode) {
		var ret string
		return ret
	}
	return *o.BatchMode
}

// GetBatchModeOk returns a tuple with the BatchMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetBatchModeOk() (*string, bool) {
	if o == nil || IsNil(o.BatchMode) {
		return nil, false
	}
	return o.BatchMode, true
}

// HasBatchMode returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasBatchMode() bool {
	if o != nil && !IsNil(o.BatchMode) {
		return true
	}

	return false
}

// SetBatchMode gets a reference to the given string and assigns it to the BatchMode field.
func (o *GetDeployments200ResponseDataInner) SetBatchMode(v string) {
	o.BatchMode = &v
}

// GetRecordScope returns the RecordScope field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetRecordScope() string {
	if o == nil || IsNil(o.RecordScope) {
		var ret string
		return ret
	}
	return *o.RecordScope
}

// GetRecordScopeOk returns a tuple with the RecordScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetRecordScopeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordScope) {
		return nil, false
	}
	return o.RecordScope, true
}

// HasRecordScope returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasRecordScope() bool {
	if o != nil && !IsNil(o.RecordScope) {
		return true
	}

	return false
}

// SetRecordScope gets a reference to the given string and assigns it to the RecordScope field.
func (o *GetDeployments200ResponseDataInner) SetRecordScope(v string) {
	o.RecordScope = &v
}

// GetContinueOnFailureEnabled returns the ContinueOnFailureEnabled field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetContinueOnFailureEnabled() bool {
	if o == nil || IsNil(o.ContinueOnFailureEnabled) {
		var ret bool
		return ret
	}
	return *o.ContinueOnFailureEnabled
}

// GetContinueOnFailureEnabledOk returns a tuple with the ContinueOnFailureEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetContinueOnFailureEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ContinueOnFailureEnabled) {
		return nil, false
	}
	return o.ContinueOnFailureEnabled, true
}

// HasContinueOnFailureEnabled returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasContinueOnFailureEnabled() bool {
	if o != nil && !IsNil(o.ContinueOnFailureEnabled) {
		return true
	}

	return false
}

// SetContinueOnFailureEnabled gets a reference to the given bool and assigns it to the ContinueOnFailureEnabled field.
func (o *GetDeployments200ResponseDataInner) SetContinueOnFailureEnabled(v bool) {
	o.ContinueOnFailureEnabled = &v
}

// GetDynamicRecordDeploymentStrategy returns the DynamicRecordDeploymentStrategy field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetDynamicRecordDeploymentStrategy() string {
	if o == nil || IsNil(o.DynamicRecordDeploymentStrategy) {
		var ret string
		return ret
	}
	return *o.DynamicRecordDeploymentStrategy
}

// GetDynamicRecordDeploymentStrategyOk returns a tuple with the DynamicRecordDeploymentStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetDynamicRecordDeploymentStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.DynamicRecordDeploymentStrategy) {
		return nil, false
	}
	return o.DynamicRecordDeploymentStrategy, true
}

// HasDynamicRecordDeploymentStrategy returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasDynamicRecordDeploymentStrategy() bool {
	if o != nil && !IsNil(o.DynamicRecordDeploymentStrategy) {
		return true
	}

	return false
}

// SetDynamicRecordDeploymentStrategy gets a reference to the given string and assigns it to the DynamicRecordDeploymentStrategy field.
func (o *GetDeployments200ResponseDataInner) SetDynamicRecordDeploymentStrategy(v string) {
	o.DynamicRecordDeploymentStrategy = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetDeployments200ResponseDataInner) GetLinks() ResourceLinks {
	if o == nil || IsNil(o.Links) {
		var ret ResourceLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeployments200ResponseDataInner) GetLinksOk() (*ResourceLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetDeployments200ResponseDataInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ResourceLinks and assigns it to the Links field.
func (o *GetDeployments200ResponseDataInner) SetLinks(v ResourceLinks) {
	o.Links = &v
}

func (o GetDeployments200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDeployments200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.PercentComplete) {
		toSerialize["percentComplete"] = o.PercentComplete
	}
	if !IsNil(o.StartDateTime) {
		toSerialize["startDateTime"] = o.StartDateTime
	}
	if !IsNil(o.CompletionDateTime) {
		toSerialize["completionDateTime"] = o.CompletionDateTime
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	if !IsNil(o.BatchMode) {
		toSerialize["batchMode"] = o.BatchMode
	}
	if !IsNil(o.RecordScope) {
		toSerialize["recordScope"] = o.RecordScope
	}
	if !IsNil(o.ContinueOnFailureEnabled) {
		toSerialize["continueOnFailureEnabled"] = o.ContinueOnFailureEnabled
	}
	if !IsNil(o.DynamicRecordDeploymentStrategy) {
		toSerialize["dynamicRecordDeploymentStrategy"] = o.DynamicRecordDeploymentStrategy
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetDeployments200ResponseDataInner struct {
	value *GetDeployments200ResponseDataInner
	isSet bool
}

func (v NullableGetDeployments200ResponseDataInner) Get() *GetDeployments200ResponseDataInner {
	return v.value
}

func (v *NullableGetDeployments200ResponseDataInner) Set(val *GetDeployments200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeployments200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeployments200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeployments200ResponseDataInner(val *GetDeployments200ResponseDataInner) *NullableGetDeployments200ResponseDataInner {
	return &NullableGetDeployments200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetDeployments200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeployments200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


