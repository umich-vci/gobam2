/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the ResponsePolicyZone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponsePolicyZone{}

// ResponsePolicyZone struct for ResponsePolicyZone
type ResponsePolicyZone struct {
	AbstractZone
	// The resource type.
	Type *string `json:"type,omitempty"`
	// The name of the resource.
	Name *string `json:"name,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The type of response policy zone.
	ResponsePolicyZoneType *string `json:"responsePolicyZoneType,omitempty"`
	ResponsePolicy *InlinedResponsePolicy `json:"responsePolicy,omitempty"`
	// The response policy type set for BlueCat Security Feed.
	OverridePolicyType *string `json:"overridePolicyType,omitempty"`
	// The custom refresh time interval set for BlueCat Security Feed, in seconds.
	OverrideRefreshTime *string `json:"overrideRefreshTime,omitempty"`
	// The target FQDN to which all undesirable connection attemps are redirected.
	RedirectTarget *string `json:"redirectTarget,omitempty"`
	FeedCategories []string `json:"feedCategories,omitempty"`
}

// NewResponsePolicyZone instantiates a new ResponsePolicyZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponsePolicyZone() *ResponsePolicyZone {
	this := ResponsePolicyZone{}
	return &this
}

// NewResponsePolicyZoneWithDefaults instantiates a new ResponsePolicyZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponsePolicyZoneWithDefaults() *ResponsePolicyZone {
	this := ResponsePolicyZone{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ResponsePolicyZone) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePolicyZone) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ResponsePolicyZone) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ResponsePolicyZone) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ResponsePolicyZone) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePolicyZone) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ResponsePolicyZone) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ResponsePolicyZone) SetName(v string) {
	o.Name = &v
}

// GetResponsePolicyZoneType returns the ResponsePolicyZoneType field value if set, zero value otherwise.
func (o *ResponsePolicyZone) GetResponsePolicyZoneType() string {
	if o == nil || IsNil(o.ResponsePolicyZoneType) {
		var ret string
		return ret
	}
	return *o.ResponsePolicyZoneType
}

// GetResponsePolicyZoneTypeOk returns a tuple with the ResponsePolicyZoneType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePolicyZone) GetResponsePolicyZoneTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResponsePolicyZoneType) {
		return nil, false
	}
	return o.ResponsePolicyZoneType, true
}

// HasResponsePolicyZoneType returns a boolean if a field has been set.
func (o *ResponsePolicyZone) HasResponsePolicyZoneType() bool {
	if o != nil && !IsNil(o.ResponsePolicyZoneType) {
		return true
	}

	return false
}

// SetResponsePolicyZoneType gets a reference to the given string and assigns it to the ResponsePolicyZoneType field.
func (o *ResponsePolicyZone) SetResponsePolicyZoneType(v string) {
	o.ResponsePolicyZoneType = &v
}

// GetResponsePolicy returns the ResponsePolicy field value if set, zero value otherwise.
func (o *ResponsePolicyZone) GetResponsePolicy() InlinedResponsePolicy {
	if o == nil || IsNil(o.ResponsePolicy) {
		var ret InlinedResponsePolicy
		return ret
	}
	return *o.ResponsePolicy
}

// GetResponsePolicyOk returns a tuple with the ResponsePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePolicyZone) GetResponsePolicyOk() (*InlinedResponsePolicy, bool) {
	if o == nil || IsNil(o.ResponsePolicy) {
		return nil, false
	}
	return o.ResponsePolicy, true
}

// HasResponsePolicy returns a boolean if a field has been set.
func (o *ResponsePolicyZone) HasResponsePolicy() bool {
	if o != nil && !IsNil(o.ResponsePolicy) {
		return true
	}

	return false
}

// SetResponsePolicy gets a reference to the given InlinedResponsePolicy and assigns it to the ResponsePolicy field.
func (o *ResponsePolicyZone) SetResponsePolicy(v InlinedResponsePolicy) {
	o.ResponsePolicy = &v
}

// GetOverridePolicyType returns the OverridePolicyType field value if set, zero value otherwise.
func (o *ResponsePolicyZone) GetOverridePolicyType() string {
	if o == nil || IsNil(o.OverridePolicyType) {
		var ret string
		return ret
	}
	return *o.OverridePolicyType
}

// GetOverridePolicyTypeOk returns a tuple with the OverridePolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePolicyZone) GetOverridePolicyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OverridePolicyType) {
		return nil, false
	}
	return o.OverridePolicyType, true
}

// HasOverridePolicyType returns a boolean if a field has been set.
func (o *ResponsePolicyZone) HasOverridePolicyType() bool {
	if o != nil && !IsNil(o.OverridePolicyType) {
		return true
	}

	return false
}

// SetOverridePolicyType gets a reference to the given string and assigns it to the OverridePolicyType field.
func (o *ResponsePolicyZone) SetOverridePolicyType(v string) {
	o.OverridePolicyType = &v
}

// GetOverrideRefreshTime returns the OverrideRefreshTime field value if set, zero value otherwise.
func (o *ResponsePolicyZone) GetOverrideRefreshTime() string {
	if o == nil || IsNil(o.OverrideRefreshTime) {
		var ret string
		return ret
	}
	return *o.OverrideRefreshTime
}

// GetOverrideRefreshTimeOk returns a tuple with the OverrideRefreshTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePolicyZone) GetOverrideRefreshTimeOk() (*string, bool) {
	if o == nil || IsNil(o.OverrideRefreshTime) {
		return nil, false
	}
	return o.OverrideRefreshTime, true
}

// HasOverrideRefreshTime returns a boolean if a field has been set.
func (o *ResponsePolicyZone) HasOverrideRefreshTime() bool {
	if o != nil && !IsNil(o.OverrideRefreshTime) {
		return true
	}

	return false
}

// SetOverrideRefreshTime gets a reference to the given string and assigns it to the OverrideRefreshTime field.
func (o *ResponsePolicyZone) SetOverrideRefreshTime(v string) {
	o.OverrideRefreshTime = &v
}

// GetRedirectTarget returns the RedirectTarget field value if set, zero value otherwise.
func (o *ResponsePolicyZone) GetRedirectTarget() string {
	if o == nil || IsNil(o.RedirectTarget) {
		var ret string
		return ret
	}
	return *o.RedirectTarget
}

// GetRedirectTargetOk returns a tuple with the RedirectTarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePolicyZone) GetRedirectTargetOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectTarget) {
		return nil, false
	}
	return o.RedirectTarget, true
}

// HasRedirectTarget returns a boolean if a field has been set.
func (o *ResponsePolicyZone) HasRedirectTarget() bool {
	if o != nil && !IsNil(o.RedirectTarget) {
		return true
	}

	return false
}

// SetRedirectTarget gets a reference to the given string and assigns it to the RedirectTarget field.
func (o *ResponsePolicyZone) SetRedirectTarget(v string) {
	o.RedirectTarget = &v
}

// GetFeedCategories returns the FeedCategories field value if set, zero value otherwise.
func (o *ResponsePolicyZone) GetFeedCategories() []string {
	if o == nil || IsNil(o.FeedCategories) {
		var ret []string
		return ret
	}
	return o.FeedCategories
}

// GetFeedCategoriesOk returns a tuple with the FeedCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponsePolicyZone) GetFeedCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.FeedCategories) {
		return nil, false
	}
	return o.FeedCategories, true
}

// HasFeedCategories returns a boolean if a field has been set.
func (o *ResponsePolicyZone) HasFeedCategories() bool {
	if o != nil && !IsNil(o.FeedCategories) {
		return true
	}

	return false
}

// SetFeedCategories gets a reference to the given []string and assigns it to the FeedCategories field.
func (o *ResponsePolicyZone) SetFeedCategories(v []string) {
	o.FeedCategories = v
}

func (o ResponsePolicyZone) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponsePolicyZone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ResponsePolicyZoneType) {
		toSerialize["responsePolicyZoneType"] = o.ResponsePolicyZoneType
	}
	if !IsNil(o.ResponsePolicy) {
		toSerialize["responsePolicy"] = o.ResponsePolicy
	}
	if !IsNil(o.OverridePolicyType) {
		toSerialize["overridePolicyType"] = o.OverridePolicyType
	}
	if !IsNil(o.OverrideRefreshTime) {
		toSerialize["overrideRefreshTime"] = o.OverrideRefreshTime
	}
	if !IsNil(o.RedirectTarget) {
		toSerialize["redirectTarget"] = o.RedirectTarget
	}
	if !IsNil(o.FeedCategories) {
		toSerialize["feedCategories"] = o.FeedCategories
	}
	return toSerialize, nil
}

type NullableResponsePolicyZone struct {
	value *ResponsePolicyZone
	isSet bool
}

func (v NullableResponsePolicyZone) Get() *ResponsePolicyZone {
	return v.value
}

func (v *NullableResponsePolicyZone) Set(val *ResponsePolicyZone) {
	v.value = val
	v.isSet = true
}

func (v NullableResponsePolicyZone) IsSet() bool {
	return v.isSet
}

func (v *NullableResponsePolicyZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponsePolicyZone(val *ResponsePolicyZone) *NullableResponsePolicyZone {
	return &NullableResponsePolicyZone{value: val, isSet: true}
}

func (v NullableResponsePolicyZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponsePolicyZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


