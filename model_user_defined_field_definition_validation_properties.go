/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the UserDefinedFieldDefinitionValidationProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserDefinedFieldDefinitionValidationProperties{}

// UserDefinedFieldDefinitionValidationProperties Validation rules assigned to the field when configuring the user defined field.
type UserDefinedFieldDefinitionValidationProperties struct {
	// The minimum value
	Min *int64 `json:"min,omitempty"`
	// The maximum value
	Max *int64 `json:"max,omitempty"`
	// The minimum length
	MinLength *int32 `json:"minLength,omitempty"`
	// The maximum length
	MaxLength *int32 `json:"maxLength,omitempty"`
	// The pattern to match against. The wildcard characters supported are '*' and '?'.
	Pattern *string `json:"pattern,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UserDefinedFieldDefinitionValidationProperties UserDefinedFieldDefinitionValidationProperties

// NewUserDefinedFieldDefinitionValidationProperties instantiates a new UserDefinedFieldDefinitionValidationProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserDefinedFieldDefinitionValidationProperties() *UserDefinedFieldDefinitionValidationProperties {
	this := UserDefinedFieldDefinitionValidationProperties{}
	return &this
}

// NewUserDefinedFieldDefinitionValidationPropertiesWithDefaults instantiates a new UserDefinedFieldDefinitionValidationProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserDefinedFieldDefinitionValidationPropertiesWithDefaults() *UserDefinedFieldDefinitionValidationProperties {
	this := UserDefinedFieldDefinitionValidationProperties{}
	return &this
}

// GetMin returns the Min field value if set, zero value otherwise.
func (o *UserDefinedFieldDefinitionValidationProperties) GetMin() int64 {
	if o == nil || IsNil(o.Min) {
		var ret int64
		return ret
	}
	return *o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDefinedFieldDefinitionValidationProperties) GetMinOk() (*int64, bool) {
	if o == nil || IsNil(o.Min) {
		return nil, false
	}
	return o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *UserDefinedFieldDefinitionValidationProperties) HasMin() bool {
	if o != nil && !IsNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given int64 and assigns it to the Min field.
func (o *UserDefinedFieldDefinitionValidationProperties) SetMin(v int64) {
	o.Min = &v
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *UserDefinedFieldDefinitionValidationProperties) GetMax() int64 {
	if o == nil || IsNil(o.Max) {
		var ret int64
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDefinedFieldDefinitionValidationProperties) GetMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *UserDefinedFieldDefinitionValidationProperties) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given int64 and assigns it to the Max field.
func (o *UserDefinedFieldDefinitionValidationProperties) SetMax(v int64) {
	o.Max = &v
}

// GetMinLength returns the MinLength field value if set, zero value otherwise.
func (o *UserDefinedFieldDefinitionValidationProperties) GetMinLength() int32 {
	if o == nil || IsNil(o.MinLength) {
		var ret int32
		return ret
	}
	return *o.MinLength
}

// GetMinLengthOk returns a tuple with the MinLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDefinedFieldDefinitionValidationProperties) GetMinLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.MinLength) {
		return nil, false
	}
	return o.MinLength, true
}

// HasMinLength returns a boolean if a field has been set.
func (o *UserDefinedFieldDefinitionValidationProperties) HasMinLength() bool {
	if o != nil && !IsNil(o.MinLength) {
		return true
	}

	return false
}

// SetMinLength gets a reference to the given int32 and assigns it to the MinLength field.
func (o *UserDefinedFieldDefinitionValidationProperties) SetMinLength(v int32) {
	o.MinLength = &v
}

// GetMaxLength returns the MaxLength field value if set, zero value otherwise.
func (o *UserDefinedFieldDefinitionValidationProperties) GetMaxLength() int32 {
	if o == nil || IsNil(o.MaxLength) {
		var ret int32
		return ret
	}
	return *o.MaxLength
}

// GetMaxLengthOk returns a tuple with the MaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDefinedFieldDefinitionValidationProperties) GetMaxLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxLength) {
		return nil, false
	}
	return o.MaxLength, true
}

// HasMaxLength returns a boolean if a field has been set.
func (o *UserDefinedFieldDefinitionValidationProperties) HasMaxLength() bool {
	if o != nil && !IsNil(o.MaxLength) {
		return true
	}

	return false
}

// SetMaxLength gets a reference to the given int32 and assigns it to the MaxLength field.
func (o *UserDefinedFieldDefinitionValidationProperties) SetMaxLength(v int32) {
	o.MaxLength = &v
}

// GetPattern returns the Pattern field value if set, zero value otherwise.
func (o *UserDefinedFieldDefinitionValidationProperties) GetPattern() string {
	if o == nil || IsNil(o.Pattern) {
		var ret string
		return ret
	}
	return *o.Pattern
}

// GetPatternOk returns a tuple with the Pattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDefinedFieldDefinitionValidationProperties) GetPatternOk() (*string, bool) {
	if o == nil || IsNil(o.Pattern) {
		return nil, false
	}
	return o.Pattern, true
}

// HasPattern returns a boolean if a field has been set.
func (o *UserDefinedFieldDefinitionValidationProperties) HasPattern() bool {
	if o != nil && !IsNil(o.Pattern) {
		return true
	}

	return false
}

// SetPattern gets a reference to the given string and assigns it to the Pattern field.
func (o *UserDefinedFieldDefinitionValidationProperties) SetPattern(v string) {
	o.Pattern = &v
}

func (o UserDefinedFieldDefinitionValidationProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserDefinedFieldDefinitionValidationProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Min) {
		toSerialize["min"] = o.Min
	}
	if !IsNil(o.Max) {
		toSerialize["max"] = o.Max
	}
	if !IsNil(o.MinLength) {
		toSerialize["minLength"] = o.MinLength
	}
	if !IsNil(o.MaxLength) {
		toSerialize["maxLength"] = o.MaxLength
	}
	if !IsNil(o.Pattern) {
		toSerialize["pattern"] = o.Pattern
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UserDefinedFieldDefinitionValidationProperties) UnmarshalJSON(data []byte) (err error) {
	varUserDefinedFieldDefinitionValidationProperties := _UserDefinedFieldDefinitionValidationProperties{}

	err = json.Unmarshal(data, &varUserDefinedFieldDefinitionValidationProperties)

	if err != nil {
		return err
	}

	*o = UserDefinedFieldDefinitionValidationProperties(varUserDefinedFieldDefinitionValidationProperties)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "min")
		delete(additionalProperties, "max")
		delete(additionalProperties, "minLength")
		delete(additionalProperties, "maxLength")
		delete(additionalProperties, "pattern")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUserDefinedFieldDefinitionValidationProperties struct {
	value *UserDefinedFieldDefinitionValidationProperties
	isSet bool
}

func (v NullableUserDefinedFieldDefinitionValidationProperties) Get() *UserDefinedFieldDefinitionValidationProperties {
	return v.value
}

func (v *NullableUserDefinedFieldDefinitionValidationProperties) Set(val *UserDefinedFieldDefinitionValidationProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableUserDefinedFieldDefinitionValidationProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableUserDefinedFieldDefinitionValidationProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserDefinedFieldDefinitionValidationProperties(val *UserDefinedFieldDefinitionValidationProperties) *NullableUserDefinedFieldDefinitionValidationProperties {
	return &NullableUserDefinedFieldDefinitionValidationProperties{value: val, isSet: true}
}

func (v NullableUserDefinedFieldDefinitionValidationProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserDefinedFieldDefinitionValidationProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


