/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccessRightPostRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessRightPostRequestBody{}

// AccessRightPostRequestBody struct for AccessRightPostRequestBody
type AccessRightPostRequestBody struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The resource type.
	Type *string `json:"type,omitempty"`
	// The default access right assigned to the user or group.
	DefaultAccessLevel string `json:"defaultAccessLevel"`
	UserScope InlinedUserScope `json:"userScope"`
	Resource *InlinedResource `json:"resource,omitempty"`
	// Indicates whether or not the user or group can perform a full deployment of data from the configuration to a managed server.
	DeploymentsAllowed *bool `json:"deploymentsAllowed,omitempty"`
	// Indicates whether or not the user or group can instantly deploy changed DNS resource records.
	QuickDeploymentsAllowed *bool `json:"quickDeploymentsAllowed,omitempty"`
	// The workflow level assigned to the user.
	WorkflowLevel *string `json:"workflowLevel,omitempty"`
	// A list of overridden access rights.
	AccessOverrides []AccessRightOverrideBean `json:"accessOverrides,omitempty"`
	// Indicates whether a user or group can perform a selection deployment of data to a managed server, and dynamically deploy resource records that are added, updated, and deleted within a DNS zone that has the Dynamic Update feature enabled.
	SelectiveDeploymentsAllowed *bool `json:"selectiveDeploymentsAllowed,omitempty"`
}

type _AccessRightPostRequestBody AccessRightPostRequestBody

// NewAccessRightPostRequestBody instantiates a new AccessRightPostRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessRightPostRequestBody(defaultAccessLevel string, userScope InlinedUserScope) *AccessRightPostRequestBody {
	this := AccessRightPostRequestBody{}
	this.DefaultAccessLevel = defaultAccessLevel
	this.UserScope = userScope
	return &this
}

// NewAccessRightPostRequestBodyWithDefaults instantiates a new AccessRightPostRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessRightPostRequestBodyWithDefaults() *AccessRightPostRequestBody {
	this := AccessRightPostRequestBody{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccessRightPostRequestBody) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRightPostRequestBody) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccessRightPostRequestBody) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AccessRightPostRequestBody) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AccessRightPostRequestBody) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRightPostRequestBody) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AccessRightPostRequestBody) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AccessRightPostRequestBody) SetType(v string) {
	o.Type = &v
}

// GetDefaultAccessLevel returns the DefaultAccessLevel field value
func (o *AccessRightPostRequestBody) GetDefaultAccessLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultAccessLevel
}

// GetDefaultAccessLevelOk returns a tuple with the DefaultAccessLevel field value
// and a boolean to check if the value has been set.
func (o *AccessRightPostRequestBody) GetDefaultAccessLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultAccessLevel, true
}

// SetDefaultAccessLevel sets field value
func (o *AccessRightPostRequestBody) SetDefaultAccessLevel(v string) {
	o.DefaultAccessLevel = v
}

// GetUserScope returns the UserScope field value
func (o *AccessRightPostRequestBody) GetUserScope() InlinedUserScope {
	if o == nil {
		var ret InlinedUserScope
		return ret
	}

	return o.UserScope
}

// GetUserScopeOk returns a tuple with the UserScope field value
// and a boolean to check if the value has been set.
func (o *AccessRightPostRequestBody) GetUserScopeOk() (*InlinedUserScope, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserScope, true
}

// SetUserScope sets field value
func (o *AccessRightPostRequestBody) SetUserScope(v InlinedUserScope) {
	o.UserScope = v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *AccessRightPostRequestBody) GetResource() InlinedResource {
	if o == nil || IsNil(o.Resource) {
		var ret InlinedResource
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRightPostRequestBody) GetResourceOk() (*InlinedResource, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *AccessRightPostRequestBody) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given InlinedResource and assigns it to the Resource field.
func (o *AccessRightPostRequestBody) SetResource(v InlinedResource) {
	o.Resource = &v
}

// GetDeploymentsAllowed returns the DeploymentsAllowed field value if set, zero value otherwise.
func (o *AccessRightPostRequestBody) GetDeploymentsAllowed() bool {
	if o == nil || IsNil(o.DeploymentsAllowed) {
		var ret bool
		return ret
	}
	return *o.DeploymentsAllowed
}

// GetDeploymentsAllowedOk returns a tuple with the DeploymentsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRightPostRequestBody) GetDeploymentsAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.DeploymentsAllowed) {
		return nil, false
	}
	return o.DeploymentsAllowed, true
}

// HasDeploymentsAllowed returns a boolean if a field has been set.
func (o *AccessRightPostRequestBody) HasDeploymentsAllowed() bool {
	if o != nil && !IsNil(o.DeploymentsAllowed) {
		return true
	}

	return false
}

// SetDeploymentsAllowed gets a reference to the given bool and assigns it to the DeploymentsAllowed field.
func (o *AccessRightPostRequestBody) SetDeploymentsAllowed(v bool) {
	o.DeploymentsAllowed = &v
}

// GetQuickDeploymentsAllowed returns the QuickDeploymentsAllowed field value if set, zero value otherwise.
func (o *AccessRightPostRequestBody) GetQuickDeploymentsAllowed() bool {
	if o == nil || IsNil(o.QuickDeploymentsAllowed) {
		var ret bool
		return ret
	}
	return *o.QuickDeploymentsAllowed
}

// GetQuickDeploymentsAllowedOk returns a tuple with the QuickDeploymentsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRightPostRequestBody) GetQuickDeploymentsAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.QuickDeploymentsAllowed) {
		return nil, false
	}
	return o.QuickDeploymentsAllowed, true
}

// HasQuickDeploymentsAllowed returns a boolean if a field has been set.
func (o *AccessRightPostRequestBody) HasQuickDeploymentsAllowed() bool {
	if o != nil && !IsNil(o.QuickDeploymentsAllowed) {
		return true
	}

	return false
}

// SetQuickDeploymentsAllowed gets a reference to the given bool and assigns it to the QuickDeploymentsAllowed field.
func (o *AccessRightPostRequestBody) SetQuickDeploymentsAllowed(v bool) {
	o.QuickDeploymentsAllowed = &v
}

// GetWorkflowLevel returns the WorkflowLevel field value if set, zero value otherwise.
func (o *AccessRightPostRequestBody) GetWorkflowLevel() string {
	if o == nil || IsNil(o.WorkflowLevel) {
		var ret string
		return ret
	}
	return *o.WorkflowLevel
}

// GetWorkflowLevelOk returns a tuple with the WorkflowLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRightPostRequestBody) GetWorkflowLevelOk() (*string, bool) {
	if o == nil || IsNil(o.WorkflowLevel) {
		return nil, false
	}
	return o.WorkflowLevel, true
}

// HasWorkflowLevel returns a boolean if a field has been set.
func (o *AccessRightPostRequestBody) HasWorkflowLevel() bool {
	if o != nil && !IsNil(o.WorkflowLevel) {
		return true
	}

	return false
}

// SetWorkflowLevel gets a reference to the given string and assigns it to the WorkflowLevel field.
func (o *AccessRightPostRequestBody) SetWorkflowLevel(v string) {
	o.WorkflowLevel = &v
}

// GetAccessOverrides returns the AccessOverrides field value if set, zero value otherwise.
func (o *AccessRightPostRequestBody) GetAccessOverrides() []AccessRightOverrideBean {
	if o == nil || IsNil(o.AccessOverrides) {
		var ret []AccessRightOverrideBean
		return ret
	}
	return o.AccessOverrides
}

// GetAccessOverridesOk returns a tuple with the AccessOverrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRightPostRequestBody) GetAccessOverridesOk() ([]AccessRightOverrideBean, bool) {
	if o == nil || IsNil(o.AccessOverrides) {
		return nil, false
	}
	return o.AccessOverrides, true
}

// HasAccessOverrides returns a boolean if a field has been set.
func (o *AccessRightPostRequestBody) HasAccessOverrides() bool {
	if o != nil && !IsNil(o.AccessOverrides) {
		return true
	}

	return false
}

// SetAccessOverrides gets a reference to the given []AccessRightOverrideBean and assigns it to the AccessOverrides field.
func (o *AccessRightPostRequestBody) SetAccessOverrides(v []AccessRightOverrideBean) {
	o.AccessOverrides = v
}

// GetSelectiveDeploymentsAllowed returns the SelectiveDeploymentsAllowed field value if set, zero value otherwise.
func (o *AccessRightPostRequestBody) GetSelectiveDeploymentsAllowed() bool {
	if o == nil || IsNil(o.SelectiveDeploymentsAllowed) {
		var ret bool
		return ret
	}
	return *o.SelectiveDeploymentsAllowed
}

// GetSelectiveDeploymentsAllowedOk returns a tuple with the SelectiveDeploymentsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessRightPostRequestBody) GetSelectiveDeploymentsAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.SelectiveDeploymentsAllowed) {
		return nil, false
	}
	return o.SelectiveDeploymentsAllowed, true
}

// HasSelectiveDeploymentsAllowed returns a boolean if a field has been set.
func (o *AccessRightPostRequestBody) HasSelectiveDeploymentsAllowed() bool {
	if o != nil && !IsNil(o.SelectiveDeploymentsAllowed) {
		return true
	}

	return false
}

// SetSelectiveDeploymentsAllowed gets a reference to the given bool and assigns it to the SelectiveDeploymentsAllowed field.
func (o *AccessRightPostRequestBody) SetSelectiveDeploymentsAllowed(v bool) {
	o.SelectiveDeploymentsAllowed = &v
}

func (o AccessRightPostRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessRightPostRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["defaultAccessLevel"] = o.DefaultAccessLevel
	toSerialize["userScope"] = o.UserScope
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.DeploymentsAllowed) {
		toSerialize["deploymentsAllowed"] = o.DeploymentsAllowed
	}
	if !IsNil(o.QuickDeploymentsAllowed) {
		toSerialize["quickDeploymentsAllowed"] = o.QuickDeploymentsAllowed
	}
	if !IsNil(o.WorkflowLevel) {
		toSerialize["workflowLevel"] = o.WorkflowLevel
	}
	if !IsNil(o.AccessOverrides) {
		toSerialize["accessOverrides"] = o.AccessOverrides
	}
	if !IsNil(o.SelectiveDeploymentsAllowed) {
		toSerialize["selectiveDeploymentsAllowed"] = o.SelectiveDeploymentsAllowed
	}
	return toSerialize, nil
}

func (o *AccessRightPostRequestBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"defaultAccessLevel",
		"userScope",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessRightPostRequestBody := _AccessRightPostRequestBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccessRightPostRequestBody)

	if err != nil {
		return err
	}

	*o = AccessRightPostRequestBody(varAccessRightPostRequestBody)

	return err
}

type NullableAccessRightPostRequestBody struct {
	value *AccessRightPostRequestBody
	isSet bool
}

func (v NullableAccessRightPostRequestBody) Get() *AccessRightPostRequestBody {
	return v.value
}

func (v *NullableAccessRightPostRequestBody) Set(val *AccessRightPostRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessRightPostRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessRightPostRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessRightPostRequestBody(val *AccessRightPostRequestBody) *NullableAccessRightPostRequestBody {
	return &NullableAccessRightPostRequestBody{value: val, isSet: true}
}

func (v NullableAccessRightPostRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessRightPostRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


