/*
BlueCat Address Manager 9.5 RESTful v2 API

The **BlueCat Address Manager 9.5 RESTful v2 API** is a new RESTful API for Address Manager that presents Address Manager objects as resources. Each resource has a unique endpoint, and related resources are grouped in collections. To fetch an individual resource, a `GET` request is sent to the resource's endpoint. To fetch all resources in a collection, a `GET` request is sent to the collection's endpoint.  The RESTful v2 API is [hypermedia driven](https://en.wikipedia.org/wiki/HATEOAS) and uses the [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language) format for representing links. When navigating through the API, you can use those links to navigate to related resources or child resources of the requested endpoint. The API supports the following media types for most endpoints:  `application/hal+json`, `application/json`, and `text/csv`.  For authentication, the API supports both `Basic` and `Bearer` HTTP authentication schemes.  To get started, create a session and receive credentials for `Basic` authentication by sending a `POST` request to the [/sessions](#/Admin%20Resources/postSession) endpoint, with a message body containing the user's credentials:  ```{\"username\":\"apiuser\", \"password\":\"apipass\"}```  The response will contain an `apiToken` field that can be entered with the username in the Swagger UI **Authorize** dialog. The response will also contain a `basicAuthenticationCredentials` field containing a base64 encoding of the requester's username and API token delimited by a colon. This string can be injected directly into request `Authorization` headers in the following format:  ```Authorization: Basic YXBpOlQ0OExOT3VIRGhDcnVBNEo1bGFES3JuS3hTZC9QK3pjczZXTzBJMDY=```  For full details on API format and authentication methods, refer to the Address Manager RESTful v2 API Guide on the BlueCat Documentation Portal.

API version: 9.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gobam2

import (
	"encoding/json"
)

// checks if the GetSettings200ResponseDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSettings200ResponseDataInner{}

// GetSettings200ResponseDataInner struct for GetSettings200ResponseDataInner
type GetSettings200ResponseDataInner struct {
	// The resource identifier.
	Id *int64 `json:"id,omitempty"`
	// The resource type.
	Type *string `json:"type,omitempty"`
	// The number of days to retain the administrative history records. A null retention period indicates that the data will be retained indefinitely.
	AdministrativeHistoryRetentionPeriod *string `json:"administrativeHistoryRetentionPeriod,omitempty"`
	// The number of days to retain the session and event history records. A null retention period indicates that the data will be retained indefinitely.
	SessionAndEventsRetentionPeriod *string `json:"sessionAndEventsRetentionPeriod,omitempty"`
	// The number of days to retain the DHCP transaction history records. A null retention period indicates that the data will be retained indefinitely. A retention period of 0 seconds indicates that the data wil not be retained.
	DhcpTransactionRetentionPeriod *string `json:"dhcpTransactionRetentionPeriod,omitempty"`
	// The number of days to retain the DDNS transaction history records. A null retention period indicates that the data will be retained indefinitely. A retention period of 0 seconds indicates that the data wil not be retained.
	DdnsTransactionRetentionPeriod *string `json:"ddnsTransactionRetentionPeriod,omitempty"`
	// Indicates if the audit data export service is enabled.
	ExportEnabled *bool `json:"exportEnabled,omitempty"`
	Destination *SinkBean `json:"destination,omitempty"`
	// Indicates whether users must provide a change control comment when creating, editing, or deleting resources.
	MandatoryCommentsEnabled *bool `json:"mandatoryCommentsEnabled,omitempty"`
	// Indicates whether the Address Manager UI Quick Actions widget will automatically provide the subsequent IPv4 address when adding host records.
	RememberLastAddressEnabled *bool `json:"rememberLastAddressEnabled,omitempty"`
	// The maximum time period of user inactivity before a session is terminated.
	SessionTimeout *string `json:"sessionTimeout,omitempty"`
	// Indicates whether a disclaimer will display on the Address Manager UI login page with the contents of disclaimerText.
	DisclaimerEnabled *bool `json:"disclaimerEnabled,omitempty"`
	// The disclaimer text or HTML for display on the Address Manager UI login page. If adding or editing disclaimer HTML through JSON, ensure that reserved characters are escaped.
	DisclaimerText *string `json:"disclaimerText,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// Indicates whether users can set a custom reverse zone name format in DNS deployment options.
	CustomReverseZoneFormatsAllowed *bool `json:"customReverseZoneFormatsAllowed,omitempty"`
	AddressManager *string `json:"addressManager,omitempty"`
	RestV2 *string `json:"restV2,omitempty"`
	ZoneImport *string `json:"zoneImport,omitempty"`
	ReconciliationService *string `json:"reconciliationService,omitempty"`
	DiscoveryEngine *string `json:"discoveryEngine,omitempty"`
	SnmpClient *string `json:"snmpClient,omitempty"`
	MonitoringService *string `json:"monitoringService,omitempty"`
	RrdTool *string `json:"rrdTool,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	// The limit for consecutive failed login attempts that results in a login delay.
	FailureLimit *int32 `json:"failureLimit,omitempty"`
	// The timespan in which consecutive failed login attempts count towards the failure limit.
	FailureLimitPeriod *string `json:"failureLimitPeriod,omitempty"`
	// The amount of time that a user must wait before they can attempt to log in after exceeding the login policy failure conditions.
	DelayDuration *string `json:"delayDuration,omitempty"`
	AddressManagerMonitoring *AddressManagerMonitoringBean `json:"addressManagerMonitoring,omitempty"`
	ServerMonitoring *ServerMonitoringBean `json:"serverMonitoring,omitempty"`
	F5ServerMonitoring *F5ServerMonitoringBean `json:"f5ServerMonitoring,omitempty"`
	// The minimum length that the password must be.
	MinLength *int32 `json:"minLength,omitempty"`
	// The maximum length that the password can be.
	MaxLength *int32 `json:"maxLength,omitempty"`
	// Indicates whether the password must contain at least one digit.
	DigitRequired *bool `json:"digitRequired,omitempty"`
	// Indicates whether the password must contain mixed case letters.
	MixedCaseRequired *bool `json:"mixedCaseRequired,omitempty"`
	// Indicates whether the password must contain at least one special character.
	SpecialCharacterRequired *bool `json:"specialCharacterRequired,omitempty"`
	// The fully qualified domain name of the Address Manager server.
	AddressManagerFqdn *string `json:"addressManagerFqdn,omitempty"`
	// The identifier of the service provider entity.
	MetadataUrl *string `json:"metadataUrl,omitempty"`
	// The URL location where the response from the IdP will be returned to the service provider.
	ConsumeUrl *string `json:"consumeUrl,omitempty"`
	// The URL location where the logout response message will be returned to the service provider.
	LogoutUrl *string `json:"logoutUrl,omitempty"`
	// The specified constraints on the name identifier format used to represent the requested subject.
	NameIdFormat *string `json:"nameIdFormat,omitempty"`
	// Indicates whether the message sent by the service provider will be signed.
	SigningEnabled *bool `json:"signingEnabled,omitempty"`
	// Indicates the requirement for assertions received by the service provider to be encrypted.
	EncryptionEnabled *bool `json:"encryptionEnabled,omitempty"`
	Pkcs12 *string `json:"pkcs12,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	Password *string `json:"password,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The organization associated with the service provider.
	OrganizationName *string `json:"organizationName,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The website URL for the organization associated with the service provider.
	OrganizationUrl *string `json:"organizationUrl,omitempty" validate:"regexp=^.*\\\\S+.*$"`
	// The name of the contact for the organization associated with the service provider.
	ContactName *string `json:"contactName,omitempty"`
	// The contact email for the organization associated with the service provider.
	ContactEmail *string `json:"contactEmail,omitempty"`
	SamlIdentityProviderEnabled *bool `json:"samlIdentityProviderEnabled,omitempty"`
	NonSsoAuthenticatorCount *int32 `json:"nonSsoAuthenticatorCount,omitempty"`
	NonSsoGroupCount *int32 `json:"nonSsoGroupCount,omitempty"`
	LocalAdminUserCount *int32 `json:"localAdminUserCount,omitempty"`
	LocalNonAdminUserCount *int32 `json:"localNonAdminUserCount,omitempty"`
	// The hostname of the Address Manager server.
	Hostname *string `json:"hostname,omitempty"`
	// The Address Manager server version.
	Version *string `json:"version,omitempty"`
	// The management IP address of the Address Manager server.
	Address *string `json:"address,omitempty"`
	// Indicates whether Address Manager Active/Backup (eth0/eth1) bonding mode is active.
	InterfaceRedundancyEnabled *bool `json:"interfaceRedundancyEnabled,omitempty"`
	// The current number of active Address Manager sessions.
	ActiveSessions *int32 `json:"activeSessions,omitempty"`
	Links *ResourceLinks `json:"_links,omitempty"`
}

// NewGetSettings200ResponseDataInner instantiates a new GetSettings200ResponseDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSettings200ResponseDataInner() *GetSettings200ResponseDataInner {
	this := GetSettings200ResponseDataInner{}
	return &this
}

// NewGetSettings200ResponseDataInnerWithDefaults instantiates a new GetSettings200ResponseDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSettings200ResponseDataInnerWithDefaults() *GetSettings200ResponseDataInner {
	this := GetSettings200ResponseDataInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *GetSettings200ResponseDataInner) SetId(v int64) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetSettings200ResponseDataInner) SetType(v string) {
	o.Type = &v
}

// GetAdministrativeHistoryRetentionPeriod returns the AdministrativeHistoryRetentionPeriod field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetAdministrativeHistoryRetentionPeriod() string {
	if o == nil || IsNil(o.AdministrativeHistoryRetentionPeriod) {
		var ret string
		return ret
	}
	return *o.AdministrativeHistoryRetentionPeriod
}

// GetAdministrativeHistoryRetentionPeriodOk returns a tuple with the AdministrativeHistoryRetentionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetAdministrativeHistoryRetentionPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.AdministrativeHistoryRetentionPeriod) {
		return nil, false
	}
	return o.AdministrativeHistoryRetentionPeriod, true
}

// HasAdministrativeHistoryRetentionPeriod returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasAdministrativeHistoryRetentionPeriod() bool {
	if o != nil && !IsNil(o.AdministrativeHistoryRetentionPeriod) {
		return true
	}

	return false
}

// SetAdministrativeHistoryRetentionPeriod gets a reference to the given string and assigns it to the AdministrativeHistoryRetentionPeriod field.
func (o *GetSettings200ResponseDataInner) SetAdministrativeHistoryRetentionPeriod(v string) {
	o.AdministrativeHistoryRetentionPeriod = &v
}

// GetSessionAndEventsRetentionPeriod returns the SessionAndEventsRetentionPeriod field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetSessionAndEventsRetentionPeriod() string {
	if o == nil || IsNil(o.SessionAndEventsRetentionPeriod) {
		var ret string
		return ret
	}
	return *o.SessionAndEventsRetentionPeriod
}

// GetSessionAndEventsRetentionPeriodOk returns a tuple with the SessionAndEventsRetentionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetSessionAndEventsRetentionPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.SessionAndEventsRetentionPeriod) {
		return nil, false
	}
	return o.SessionAndEventsRetentionPeriod, true
}

// HasSessionAndEventsRetentionPeriod returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasSessionAndEventsRetentionPeriod() bool {
	if o != nil && !IsNil(o.SessionAndEventsRetentionPeriod) {
		return true
	}

	return false
}

// SetSessionAndEventsRetentionPeriod gets a reference to the given string and assigns it to the SessionAndEventsRetentionPeriod field.
func (o *GetSettings200ResponseDataInner) SetSessionAndEventsRetentionPeriod(v string) {
	o.SessionAndEventsRetentionPeriod = &v
}

// GetDhcpTransactionRetentionPeriod returns the DhcpTransactionRetentionPeriod field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetDhcpTransactionRetentionPeriod() string {
	if o == nil || IsNil(o.DhcpTransactionRetentionPeriod) {
		var ret string
		return ret
	}
	return *o.DhcpTransactionRetentionPeriod
}

// GetDhcpTransactionRetentionPeriodOk returns a tuple with the DhcpTransactionRetentionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetDhcpTransactionRetentionPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.DhcpTransactionRetentionPeriod) {
		return nil, false
	}
	return o.DhcpTransactionRetentionPeriod, true
}

// HasDhcpTransactionRetentionPeriod returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasDhcpTransactionRetentionPeriod() bool {
	if o != nil && !IsNil(o.DhcpTransactionRetentionPeriod) {
		return true
	}

	return false
}

// SetDhcpTransactionRetentionPeriod gets a reference to the given string and assigns it to the DhcpTransactionRetentionPeriod field.
func (o *GetSettings200ResponseDataInner) SetDhcpTransactionRetentionPeriod(v string) {
	o.DhcpTransactionRetentionPeriod = &v
}

// GetDdnsTransactionRetentionPeriod returns the DdnsTransactionRetentionPeriod field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetDdnsTransactionRetentionPeriod() string {
	if o == nil || IsNil(o.DdnsTransactionRetentionPeriod) {
		var ret string
		return ret
	}
	return *o.DdnsTransactionRetentionPeriod
}

// GetDdnsTransactionRetentionPeriodOk returns a tuple with the DdnsTransactionRetentionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetDdnsTransactionRetentionPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.DdnsTransactionRetentionPeriod) {
		return nil, false
	}
	return o.DdnsTransactionRetentionPeriod, true
}

// HasDdnsTransactionRetentionPeriod returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasDdnsTransactionRetentionPeriod() bool {
	if o != nil && !IsNil(o.DdnsTransactionRetentionPeriod) {
		return true
	}

	return false
}

// SetDdnsTransactionRetentionPeriod gets a reference to the given string and assigns it to the DdnsTransactionRetentionPeriod field.
func (o *GetSettings200ResponseDataInner) SetDdnsTransactionRetentionPeriod(v string) {
	o.DdnsTransactionRetentionPeriod = &v
}

// GetExportEnabled returns the ExportEnabled field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetExportEnabled() bool {
	if o == nil || IsNil(o.ExportEnabled) {
		var ret bool
		return ret
	}
	return *o.ExportEnabled
}

// GetExportEnabledOk returns a tuple with the ExportEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetExportEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ExportEnabled) {
		return nil, false
	}
	return o.ExportEnabled, true
}

// HasExportEnabled returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasExportEnabled() bool {
	if o != nil && !IsNil(o.ExportEnabled) {
		return true
	}

	return false
}

// SetExportEnabled gets a reference to the given bool and assigns it to the ExportEnabled field.
func (o *GetSettings200ResponseDataInner) SetExportEnabled(v bool) {
	o.ExportEnabled = &v
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetDestination() SinkBean {
	if o == nil || IsNil(o.Destination) {
		var ret SinkBean
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetDestinationOk() (*SinkBean, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given SinkBean and assigns it to the Destination field.
func (o *GetSettings200ResponseDataInner) SetDestination(v SinkBean) {
	o.Destination = &v
}

// GetMandatoryCommentsEnabled returns the MandatoryCommentsEnabled field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetMandatoryCommentsEnabled() bool {
	if o == nil || IsNil(o.MandatoryCommentsEnabled) {
		var ret bool
		return ret
	}
	return *o.MandatoryCommentsEnabled
}

// GetMandatoryCommentsEnabledOk returns a tuple with the MandatoryCommentsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetMandatoryCommentsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MandatoryCommentsEnabled) {
		return nil, false
	}
	return o.MandatoryCommentsEnabled, true
}

// HasMandatoryCommentsEnabled returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasMandatoryCommentsEnabled() bool {
	if o != nil && !IsNil(o.MandatoryCommentsEnabled) {
		return true
	}

	return false
}

// SetMandatoryCommentsEnabled gets a reference to the given bool and assigns it to the MandatoryCommentsEnabled field.
func (o *GetSettings200ResponseDataInner) SetMandatoryCommentsEnabled(v bool) {
	o.MandatoryCommentsEnabled = &v
}

// GetRememberLastAddressEnabled returns the RememberLastAddressEnabled field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetRememberLastAddressEnabled() bool {
	if o == nil || IsNil(o.RememberLastAddressEnabled) {
		var ret bool
		return ret
	}
	return *o.RememberLastAddressEnabled
}

// GetRememberLastAddressEnabledOk returns a tuple with the RememberLastAddressEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetRememberLastAddressEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RememberLastAddressEnabled) {
		return nil, false
	}
	return o.RememberLastAddressEnabled, true
}

// HasRememberLastAddressEnabled returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasRememberLastAddressEnabled() bool {
	if o != nil && !IsNil(o.RememberLastAddressEnabled) {
		return true
	}

	return false
}

// SetRememberLastAddressEnabled gets a reference to the given bool and assigns it to the RememberLastAddressEnabled field.
func (o *GetSettings200ResponseDataInner) SetRememberLastAddressEnabled(v bool) {
	o.RememberLastAddressEnabled = &v
}

// GetSessionTimeout returns the SessionTimeout field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetSessionTimeout() string {
	if o == nil || IsNil(o.SessionTimeout) {
		var ret string
		return ret
	}
	return *o.SessionTimeout
}

// GetSessionTimeoutOk returns a tuple with the SessionTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetSessionTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.SessionTimeout) {
		return nil, false
	}
	return o.SessionTimeout, true
}

// HasSessionTimeout returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasSessionTimeout() bool {
	if o != nil && !IsNil(o.SessionTimeout) {
		return true
	}

	return false
}

// SetSessionTimeout gets a reference to the given string and assigns it to the SessionTimeout field.
func (o *GetSettings200ResponseDataInner) SetSessionTimeout(v string) {
	o.SessionTimeout = &v
}

// GetDisclaimerEnabled returns the DisclaimerEnabled field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetDisclaimerEnabled() bool {
	if o == nil || IsNil(o.DisclaimerEnabled) {
		var ret bool
		return ret
	}
	return *o.DisclaimerEnabled
}

// GetDisclaimerEnabledOk returns a tuple with the DisclaimerEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetDisclaimerEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DisclaimerEnabled) {
		return nil, false
	}
	return o.DisclaimerEnabled, true
}

// HasDisclaimerEnabled returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasDisclaimerEnabled() bool {
	if o != nil && !IsNil(o.DisclaimerEnabled) {
		return true
	}

	return false
}

// SetDisclaimerEnabled gets a reference to the given bool and assigns it to the DisclaimerEnabled field.
func (o *GetSettings200ResponseDataInner) SetDisclaimerEnabled(v bool) {
	o.DisclaimerEnabled = &v
}

// GetDisclaimerText returns the DisclaimerText field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetDisclaimerText() string {
	if o == nil || IsNil(o.DisclaimerText) {
		var ret string
		return ret
	}
	return *o.DisclaimerText
}

// GetDisclaimerTextOk returns a tuple with the DisclaimerText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetDisclaimerTextOk() (*string, bool) {
	if o == nil || IsNil(o.DisclaimerText) {
		return nil, false
	}
	return o.DisclaimerText, true
}

// HasDisclaimerText returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasDisclaimerText() bool {
	if o != nil && !IsNil(o.DisclaimerText) {
		return true
	}

	return false
}

// SetDisclaimerText gets a reference to the given string and assigns it to the DisclaimerText field.
func (o *GetSettings200ResponseDataInner) SetDisclaimerText(v string) {
	o.DisclaimerText = &v
}

// GetCustomReverseZoneFormatsAllowed returns the CustomReverseZoneFormatsAllowed field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetCustomReverseZoneFormatsAllowed() bool {
	if o == nil || IsNil(o.CustomReverseZoneFormatsAllowed) {
		var ret bool
		return ret
	}
	return *o.CustomReverseZoneFormatsAllowed
}

// GetCustomReverseZoneFormatsAllowedOk returns a tuple with the CustomReverseZoneFormatsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetCustomReverseZoneFormatsAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomReverseZoneFormatsAllowed) {
		return nil, false
	}
	return o.CustomReverseZoneFormatsAllowed, true
}

// HasCustomReverseZoneFormatsAllowed returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasCustomReverseZoneFormatsAllowed() bool {
	if o != nil && !IsNil(o.CustomReverseZoneFormatsAllowed) {
		return true
	}

	return false
}

// SetCustomReverseZoneFormatsAllowed gets a reference to the given bool and assigns it to the CustomReverseZoneFormatsAllowed field.
func (o *GetSettings200ResponseDataInner) SetCustomReverseZoneFormatsAllowed(v bool) {
	o.CustomReverseZoneFormatsAllowed = &v
}

// GetAddressManager returns the AddressManager field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetAddressManager() string {
	if o == nil || IsNil(o.AddressManager) {
		var ret string
		return ret
	}
	return *o.AddressManager
}

// GetAddressManagerOk returns a tuple with the AddressManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetAddressManagerOk() (*string, bool) {
	if o == nil || IsNil(o.AddressManager) {
		return nil, false
	}
	return o.AddressManager, true
}

// HasAddressManager returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasAddressManager() bool {
	if o != nil && !IsNil(o.AddressManager) {
		return true
	}

	return false
}

// SetAddressManager gets a reference to the given string and assigns it to the AddressManager field.
func (o *GetSettings200ResponseDataInner) SetAddressManager(v string) {
	o.AddressManager = &v
}

// GetRestV2 returns the RestV2 field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetRestV2() string {
	if o == nil || IsNil(o.RestV2) {
		var ret string
		return ret
	}
	return *o.RestV2
}

// GetRestV2Ok returns a tuple with the RestV2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetRestV2Ok() (*string, bool) {
	if o == nil || IsNil(o.RestV2) {
		return nil, false
	}
	return o.RestV2, true
}

// HasRestV2 returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasRestV2() bool {
	if o != nil && !IsNil(o.RestV2) {
		return true
	}

	return false
}

// SetRestV2 gets a reference to the given string and assigns it to the RestV2 field.
func (o *GetSettings200ResponseDataInner) SetRestV2(v string) {
	o.RestV2 = &v
}

// GetZoneImport returns the ZoneImport field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetZoneImport() string {
	if o == nil || IsNil(o.ZoneImport) {
		var ret string
		return ret
	}
	return *o.ZoneImport
}

// GetZoneImportOk returns a tuple with the ZoneImport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetZoneImportOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneImport) {
		return nil, false
	}
	return o.ZoneImport, true
}

// HasZoneImport returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasZoneImport() bool {
	if o != nil && !IsNil(o.ZoneImport) {
		return true
	}

	return false
}

// SetZoneImport gets a reference to the given string and assigns it to the ZoneImport field.
func (o *GetSettings200ResponseDataInner) SetZoneImport(v string) {
	o.ZoneImport = &v
}

// GetReconciliationService returns the ReconciliationService field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetReconciliationService() string {
	if o == nil || IsNil(o.ReconciliationService) {
		var ret string
		return ret
	}
	return *o.ReconciliationService
}

// GetReconciliationServiceOk returns a tuple with the ReconciliationService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetReconciliationServiceOk() (*string, bool) {
	if o == nil || IsNil(o.ReconciliationService) {
		return nil, false
	}
	return o.ReconciliationService, true
}

// HasReconciliationService returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasReconciliationService() bool {
	if o != nil && !IsNil(o.ReconciliationService) {
		return true
	}

	return false
}

// SetReconciliationService gets a reference to the given string and assigns it to the ReconciliationService field.
func (o *GetSettings200ResponseDataInner) SetReconciliationService(v string) {
	o.ReconciliationService = &v
}

// GetDiscoveryEngine returns the DiscoveryEngine field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetDiscoveryEngine() string {
	if o == nil || IsNil(o.DiscoveryEngine) {
		var ret string
		return ret
	}
	return *o.DiscoveryEngine
}

// GetDiscoveryEngineOk returns a tuple with the DiscoveryEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetDiscoveryEngineOk() (*string, bool) {
	if o == nil || IsNil(o.DiscoveryEngine) {
		return nil, false
	}
	return o.DiscoveryEngine, true
}

// HasDiscoveryEngine returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasDiscoveryEngine() bool {
	if o != nil && !IsNil(o.DiscoveryEngine) {
		return true
	}

	return false
}

// SetDiscoveryEngine gets a reference to the given string and assigns it to the DiscoveryEngine field.
func (o *GetSettings200ResponseDataInner) SetDiscoveryEngine(v string) {
	o.DiscoveryEngine = &v
}

// GetSnmpClient returns the SnmpClient field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetSnmpClient() string {
	if o == nil || IsNil(o.SnmpClient) {
		var ret string
		return ret
	}
	return *o.SnmpClient
}

// GetSnmpClientOk returns a tuple with the SnmpClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetSnmpClientOk() (*string, bool) {
	if o == nil || IsNil(o.SnmpClient) {
		return nil, false
	}
	return o.SnmpClient, true
}

// HasSnmpClient returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasSnmpClient() bool {
	if o != nil && !IsNil(o.SnmpClient) {
		return true
	}

	return false
}

// SetSnmpClient gets a reference to the given string and assigns it to the SnmpClient field.
func (o *GetSettings200ResponseDataInner) SetSnmpClient(v string) {
	o.SnmpClient = &v
}

// GetMonitoringService returns the MonitoringService field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetMonitoringService() string {
	if o == nil || IsNil(o.MonitoringService) {
		var ret string
		return ret
	}
	return *o.MonitoringService
}

// GetMonitoringServiceOk returns a tuple with the MonitoringService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetMonitoringServiceOk() (*string, bool) {
	if o == nil || IsNil(o.MonitoringService) {
		return nil, false
	}
	return o.MonitoringService, true
}

// HasMonitoringService returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasMonitoringService() bool {
	if o != nil && !IsNil(o.MonitoringService) {
		return true
	}

	return false
}

// SetMonitoringService gets a reference to the given string and assigns it to the MonitoringService field.
func (o *GetSettings200ResponseDataInner) SetMonitoringService(v string) {
	o.MonitoringService = &v
}

// GetRrdTool returns the RrdTool field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetRrdTool() string {
	if o == nil || IsNil(o.RrdTool) {
		var ret string
		return ret
	}
	return *o.RrdTool
}

// GetRrdToolOk returns a tuple with the RrdTool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetRrdToolOk() (*string, bool) {
	if o == nil || IsNil(o.RrdTool) {
		return nil, false
	}
	return o.RrdTool, true
}

// HasRrdTool returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasRrdTool() bool {
	if o != nil && !IsNil(o.RrdTool) {
		return true
	}

	return false
}

// SetRrdTool gets a reference to the given string and assigns it to the RrdTool field.
func (o *GetSettings200ResponseDataInner) SetRrdTool(v string) {
	o.RrdTool = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *GetSettings200ResponseDataInner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFailureLimit returns the FailureLimit field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetFailureLimit() int32 {
	if o == nil || IsNil(o.FailureLimit) {
		var ret int32
		return ret
	}
	return *o.FailureLimit
}

// GetFailureLimitOk returns a tuple with the FailureLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetFailureLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.FailureLimit) {
		return nil, false
	}
	return o.FailureLimit, true
}

// HasFailureLimit returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasFailureLimit() bool {
	if o != nil && !IsNil(o.FailureLimit) {
		return true
	}

	return false
}

// SetFailureLimit gets a reference to the given int32 and assigns it to the FailureLimit field.
func (o *GetSettings200ResponseDataInner) SetFailureLimit(v int32) {
	o.FailureLimit = &v
}

// GetFailureLimitPeriod returns the FailureLimitPeriod field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetFailureLimitPeriod() string {
	if o == nil || IsNil(o.FailureLimitPeriod) {
		var ret string
		return ret
	}
	return *o.FailureLimitPeriod
}

// GetFailureLimitPeriodOk returns a tuple with the FailureLimitPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetFailureLimitPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.FailureLimitPeriod) {
		return nil, false
	}
	return o.FailureLimitPeriod, true
}

// HasFailureLimitPeriod returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasFailureLimitPeriod() bool {
	if o != nil && !IsNil(o.FailureLimitPeriod) {
		return true
	}

	return false
}

// SetFailureLimitPeriod gets a reference to the given string and assigns it to the FailureLimitPeriod field.
func (o *GetSettings200ResponseDataInner) SetFailureLimitPeriod(v string) {
	o.FailureLimitPeriod = &v
}

// GetDelayDuration returns the DelayDuration field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetDelayDuration() string {
	if o == nil || IsNil(o.DelayDuration) {
		var ret string
		return ret
	}
	return *o.DelayDuration
}

// GetDelayDurationOk returns a tuple with the DelayDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetDelayDurationOk() (*string, bool) {
	if o == nil || IsNil(o.DelayDuration) {
		return nil, false
	}
	return o.DelayDuration, true
}

// HasDelayDuration returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasDelayDuration() bool {
	if o != nil && !IsNil(o.DelayDuration) {
		return true
	}

	return false
}

// SetDelayDuration gets a reference to the given string and assigns it to the DelayDuration field.
func (o *GetSettings200ResponseDataInner) SetDelayDuration(v string) {
	o.DelayDuration = &v
}

// GetAddressManagerMonitoring returns the AddressManagerMonitoring field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetAddressManagerMonitoring() AddressManagerMonitoringBean {
	if o == nil || IsNil(o.AddressManagerMonitoring) {
		var ret AddressManagerMonitoringBean
		return ret
	}
	return *o.AddressManagerMonitoring
}

// GetAddressManagerMonitoringOk returns a tuple with the AddressManagerMonitoring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetAddressManagerMonitoringOk() (*AddressManagerMonitoringBean, bool) {
	if o == nil || IsNil(o.AddressManagerMonitoring) {
		return nil, false
	}
	return o.AddressManagerMonitoring, true
}

// HasAddressManagerMonitoring returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasAddressManagerMonitoring() bool {
	if o != nil && !IsNil(o.AddressManagerMonitoring) {
		return true
	}

	return false
}

// SetAddressManagerMonitoring gets a reference to the given AddressManagerMonitoringBean and assigns it to the AddressManagerMonitoring field.
func (o *GetSettings200ResponseDataInner) SetAddressManagerMonitoring(v AddressManagerMonitoringBean) {
	o.AddressManagerMonitoring = &v
}

// GetServerMonitoring returns the ServerMonitoring field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetServerMonitoring() ServerMonitoringBean {
	if o == nil || IsNil(o.ServerMonitoring) {
		var ret ServerMonitoringBean
		return ret
	}
	return *o.ServerMonitoring
}

// GetServerMonitoringOk returns a tuple with the ServerMonitoring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetServerMonitoringOk() (*ServerMonitoringBean, bool) {
	if o == nil || IsNil(o.ServerMonitoring) {
		return nil, false
	}
	return o.ServerMonitoring, true
}

// HasServerMonitoring returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasServerMonitoring() bool {
	if o != nil && !IsNil(o.ServerMonitoring) {
		return true
	}

	return false
}

// SetServerMonitoring gets a reference to the given ServerMonitoringBean and assigns it to the ServerMonitoring field.
func (o *GetSettings200ResponseDataInner) SetServerMonitoring(v ServerMonitoringBean) {
	o.ServerMonitoring = &v
}

// GetF5ServerMonitoring returns the F5ServerMonitoring field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetF5ServerMonitoring() F5ServerMonitoringBean {
	if o == nil || IsNil(o.F5ServerMonitoring) {
		var ret F5ServerMonitoringBean
		return ret
	}
	return *o.F5ServerMonitoring
}

// GetF5ServerMonitoringOk returns a tuple with the F5ServerMonitoring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetF5ServerMonitoringOk() (*F5ServerMonitoringBean, bool) {
	if o == nil || IsNil(o.F5ServerMonitoring) {
		return nil, false
	}
	return o.F5ServerMonitoring, true
}

// HasF5ServerMonitoring returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasF5ServerMonitoring() bool {
	if o != nil && !IsNil(o.F5ServerMonitoring) {
		return true
	}

	return false
}

// SetF5ServerMonitoring gets a reference to the given F5ServerMonitoringBean and assigns it to the F5ServerMonitoring field.
func (o *GetSettings200ResponseDataInner) SetF5ServerMonitoring(v F5ServerMonitoringBean) {
	o.F5ServerMonitoring = &v
}

// GetMinLength returns the MinLength field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetMinLength() int32 {
	if o == nil || IsNil(o.MinLength) {
		var ret int32
		return ret
	}
	return *o.MinLength
}

// GetMinLengthOk returns a tuple with the MinLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetMinLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.MinLength) {
		return nil, false
	}
	return o.MinLength, true
}

// HasMinLength returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasMinLength() bool {
	if o != nil && !IsNil(o.MinLength) {
		return true
	}

	return false
}

// SetMinLength gets a reference to the given int32 and assigns it to the MinLength field.
func (o *GetSettings200ResponseDataInner) SetMinLength(v int32) {
	o.MinLength = &v
}

// GetMaxLength returns the MaxLength field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetMaxLength() int32 {
	if o == nil || IsNil(o.MaxLength) {
		var ret int32
		return ret
	}
	return *o.MaxLength
}

// GetMaxLengthOk returns a tuple with the MaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetMaxLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxLength) {
		return nil, false
	}
	return o.MaxLength, true
}

// HasMaxLength returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasMaxLength() bool {
	if o != nil && !IsNil(o.MaxLength) {
		return true
	}

	return false
}

// SetMaxLength gets a reference to the given int32 and assigns it to the MaxLength field.
func (o *GetSettings200ResponseDataInner) SetMaxLength(v int32) {
	o.MaxLength = &v
}

// GetDigitRequired returns the DigitRequired field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetDigitRequired() bool {
	if o == nil || IsNil(o.DigitRequired) {
		var ret bool
		return ret
	}
	return *o.DigitRequired
}

// GetDigitRequiredOk returns a tuple with the DigitRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetDigitRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.DigitRequired) {
		return nil, false
	}
	return o.DigitRequired, true
}

// HasDigitRequired returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasDigitRequired() bool {
	if o != nil && !IsNil(o.DigitRequired) {
		return true
	}

	return false
}

// SetDigitRequired gets a reference to the given bool and assigns it to the DigitRequired field.
func (o *GetSettings200ResponseDataInner) SetDigitRequired(v bool) {
	o.DigitRequired = &v
}

// GetMixedCaseRequired returns the MixedCaseRequired field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetMixedCaseRequired() bool {
	if o == nil || IsNil(o.MixedCaseRequired) {
		var ret bool
		return ret
	}
	return *o.MixedCaseRequired
}

// GetMixedCaseRequiredOk returns a tuple with the MixedCaseRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetMixedCaseRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.MixedCaseRequired) {
		return nil, false
	}
	return o.MixedCaseRequired, true
}

// HasMixedCaseRequired returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasMixedCaseRequired() bool {
	if o != nil && !IsNil(o.MixedCaseRequired) {
		return true
	}

	return false
}

// SetMixedCaseRequired gets a reference to the given bool and assigns it to the MixedCaseRequired field.
func (o *GetSettings200ResponseDataInner) SetMixedCaseRequired(v bool) {
	o.MixedCaseRequired = &v
}

// GetSpecialCharacterRequired returns the SpecialCharacterRequired field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetSpecialCharacterRequired() bool {
	if o == nil || IsNil(o.SpecialCharacterRequired) {
		var ret bool
		return ret
	}
	return *o.SpecialCharacterRequired
}

// GetSpecialCharacterRequiredOk returns a tuple with the SpecialCharacterRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetSpecialCharacterRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.SpecialCharacterRequired) {
		return nil, false
	}
	return o.SpecialCharacterRequired, true
}

// HasSpecialCharacterRequired returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasSpecialCharacterRequired() bool {
	if o != nil && !IsNil(o.SpecialCharacterRequired) {
		return true
	}

	return false
}

// SetSpecialCharacterRequired gets a reference to the given bool and assigns it to the SpecialCharacterRequired field.
func (o *GetSettings200ResponseDataInner) SetSpecialCharacterRequired(v bool) {
	o.SpecialCharacterRequired = &v
}

// GetAddressManagerFqdn returns the AddressManagerFqdn field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetAddressManagerFqdn() string {
	if o == nil || IsNil(o.AddressManagerFqdn) {
		var ret string
		return ret
	}
	return *o.AddressManagerFqdn
}

// GetAddressManagerFqdnOk returns a tuple with the AddressManagerFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetAddressManagerFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.AddressManagerFqdn) {
		return nil, false
	}
	return o.AddressManagerFqdn, true
}

// HasAddressManagerFqdn returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasAddressManagerFqdn() bool {
	if o != nil && !IsNil(o.AddressManagerFqdn) {
		return true
	}

	return false
}

// SetAddressManagerFqdn gets a reference to the given string and assigns it to the AddressManagerFqdn field.
func (o *GetSettings200ResponseDataInner) SetAddressManagerFqdn(v string) {
	o.AddressManagerFqdn = &v
}

// GetMetadataUrl returns the MetadataUrl field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetMetadataUrl() string {
	if o == nil || IsNil(o.MetadataUrl) {
		var ret string
		return ret
	}
	return *o.MetadataUrl
}

// GetMetadataUrlOk returns a tuple with the MetadataUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetMetadataUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataUrl) {
		return nil, false
	}
	return o.MetadataUrl, true
}

// HasMetadataUrl returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasMetadataUrl() bool {
	if o != nil && !IsNil(o.MetadataUrl) {
		return true
	}

	return false
}

// SetMetadataUrl gets a reference to the given string and assigns it to the MetadataUrl field.
func (o *GetSettings200ResponseDataInner) SetMetadataUrl(v string) {
	o.MetadataUrl = &v
}

// GetConsumeUrl returns the ConsumeUrl field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetConsumeUrl() string {
	if o == nil || IsNil(o.ConsumeUrl) {
		var ret string
		return ret
	}
	return *o.ConsumeUrl
}

// GetConsumeUrlOk returns a tuple with the ConsumeUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetConsumeUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumeUrl) {
		return nil, false
	}
	return o.ConsumeUrl, true
}

// HasConsumeUrl returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasConsumeUrl() bool {
	if o != nil && !IsNil(o.ConsumeUrl) {
		return true
	}

	return false
}

// SetConsumeUrl gets a reference to the given string and assigns it to the ConsumeUrl field.
func (o *GetSettings200ResponseDataInner) SetConsumeUrl(v string) {
	o.ConsumeUrl = &v
}

// GetLogoutUrl returns the LogoutUrl field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetLogoutUrl() string {
	if o == nil || IsNil(o.LogoutUrl) {
		var ret string
		return ret
	}
	return *o.LogoutUrl
}

// GetLogoutUrlOk returns a tuple with the LogoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetLogoutUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LogoutUrl) {
		return nil, false
	}
	return o.LogoutUrl, true
}

// HasLogoutUrl returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasLogoutUrl() bool {
	if o != nil && !IsNil(o.LogoutUrl) {
		return true
	}

	return false
}

// SetLogoutUrl gets a reference to the given string and assigns it to the LogoutUrl field.
func (o *GetSettings200ResponseDataInner) SetLogoutUrl(v string) {
	o.LogoutUrl = &v
}

// GetNameIdFormat returns the NameIdFormat field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetNameIdFormat() string {
	if o == nil || IsNil(o.NameIdFormat) {
		var ret string
		return ret
	}
	return *o.NameIdFormat
}

// GetNameIdFormatOk returns a tuple with the NameIdFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetNameIdFormatOk() (*string, bool) {
	if o == nil || IsNil(o.NameIdFormat) {
		return nil, false
	}
	return o.NameIdFormat, true
}

// HasNameIdFormat returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasNameIdFormat() bool {
	if o != nil && !IsNil(o.NameIdFormat) {
		return true
	}

	return false
}

// SetNameIdFormat gets a reference to the given string and assigns it to the NameIdFormat field.
func (o *GetSettings200ResponseDataInner) SetNameIdFormat(v string) {
	o.NameIdFormat = &v
}

// GetSigningEnabled returns the SigningEnabled field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetSigningEnabled() bool {
	if o == nil || IsNil(o.SigningEnabled) {
		var ret bool
		return ret
	}
	return *o.SigningEnabled
}

// GetSigningEnabledOk returns a tuple with the SigningEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetSigningEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SigningEnabled) {
		return nil, false
	}
	return o.SigningEnabled, true
}

// HasSigningEnabled returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasSigningEnabled() bool {
	if o != nil && !IsNil(o.SigningEnabled) {
		return true
	}

	return false
}

// SetSigningEnabled gets a reference to the given bool and assigns it to the SigningEnabled field.
func (o *GetSettings200ResponseDataInner) SetSigningEnabled(v bool) {
	o.SigningEnabled = &v
}

// GetEncryptionEnabled returns the EncryptionEnabled field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetEncryptionEnabled() bool {
	if o == nil || IsNil(o.EncryptionEnabled) {
		var ret bool
		return ret
	}
	return *o.EncryptionEnabled
}

// GetEncryptionEnabledOk returns a tuple with the EncryptionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetEncryptionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.EncryptionEnabled) {
		return nil, false
	}
	return o.EncryptionEnabled, true
}

// HasEncryptionEnabled returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasEncryptionEnabled() bool {
	if o != nil && !IsNil(o.EncryptionEnabled) {
		return true
	}

	return false
}

// SetEncryptionEnabled gets a reference to the given bool and assigns it to the EncryptionEnabled field.
func (o *GetSettings200ResponseDataInner) SetEncryptionEnabled(v bool) {
	o.EncryptionEnabled = &v
}

// GetPkcs12 returns the Pkcs12 field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetPkcs12() string {
	if o == nil || IsNil(o.Pkcs12) {
		var ret string
		return ret
	}
	return *o.Pkcs12
}

// GetPkcs12Ok returns a tuple with the Pkcs12 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetPkcs12Ok() (*string, bool) {
	if o == nil || IsNil(o.Pkcs12) {
		return nil, false
	}
	return o.Pkcs12, true
}

// HasPkcs12 returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasPkcs12() bool {
	if o != nil && !IsNil(o.Pkcs12) {
		return true
	}

	return false
}

// SetPkcs12 gets a reference to the given string and assigns it to the Pkcs12 field.
func (o *GetSettings200ResponseDataInner) SetPkcs12(v string) {
	o.Pkcs12 = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *GetSettings200ResponseDataInner) SetPassword(v string) {
	o.Password = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *GetSettings200ResponseDataInner) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetOrganizationUrl returns the OrganizationUrl field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetOrganizationUrl() string {
	if o == nil || IsNil(o.OrganizationUrl) {
		var ret string
		return ret
	}
	return *o.OrganizationUrl
}

// GetOrganizationUrlOk returns a tuple with the OrganizationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetOrganizationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationUrl) {
		return nil, false
	}
	return o.OrganizationUrl, true
}

// HasOrganizationUrl returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasOrganizationUrl() bool {
	if o != nil && !IsNil(o.OrganizationUrl) {
		return true
	}

	return false
}

// SetOrganizationUrl gets a reference to the given string and assigns it to the OrganizationUrl field.
func (o *GetSettings200ResponseDataInner) SetOrganizationUrl(v string) {
	o.OrganizationUrl = &v
}

// GetContactName returns the ContactName field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetContactName() string {
	if o == nil || IsNil(o.ContactName) {
		var ret string
		return ret
	}
	return *o.ContactName
}

// GetContactNameOk returns a tuple with the ContactName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetContactNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContactName) {
		return nil, false
	}
	return o.ContactName, true
}

// HasContactName returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasContactName() bool {
	if o != nil && !IsNil(o.ContactName) {
		return true
	}

	return false
}

// SetContactName gets a reference to the given string and assigns it to the ContactName field.
func (o *GetSettings200ResponseDataInner) SetContactName(v string) {
	o.ContactName = &v
}

// GetContactEmail returns the ContactEmail field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetContactEmail() string {
	if o == nil || IsNil(o.ContactEmail) {
		var ret string
		return ret
	}
	return *o.ContactEmail
}

// GetContactEmailOk returns a tuple with the ContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetContactEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ContactEmail) {
		return nil, false
	}
	return o.ContactEmail, true
}

// HasContactEmail returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasContactEmail() bool {
	if o != nil && !IsNil(o.ContactEmail) {
		return true
	}

	return false
}

// SetContactEmail gets a reference to the given string and assigns it to the ContactEmail field.
func (o *GetSettings200ResponseDataInner) SetContactEmail(v string) {
	o.ContactEmail = &v
}

// GetSamlIdentityProviderEnabled returns the SamlIdentityProviderEnabled field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetSamlIdentityProviderEnabled() bool {
	if o == nil || IsNil(o.SamlIdentityProviderEnabled) {
		var ret bool
		return ret
	}
	return *o.SamlIdentityProviderEnabled
}

// GetSamlIdentityProviderEnabledOk returns a tuple with the SamlIdentityProviderEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetSamlIdentityProviderEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SamlIdentityProviderEnabled) {
		return nil, false
	}
	return o.SamlIdentityProviderEnabled, true
}

// HasSamlIdentityProviderEnabled returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasSamlIdentityProviderEnabled() bool {
	if o != nil && !IsNil(o.SamlIdentityProviderEnabled) {
		return true
	}

	return false
}

// SetSamlIdentityProviderEnabled gets a reference to the given bool and assigns it to the SamlIdentityProviderEnabled field.
func (o *GetSettings200ResponseDataInner) SetSamlIdentityProviderEnabled(v bool) {
	o.SamlIdentityProviderEnabled = &v
}

// GetNonSsoAuthenticatorCount returns the NonSsoAuthenticatorCount field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetNonSsoAuthenticatorCount() int32 {
	if o == nil || IsNil(o.NonSsoAuthenticatorCount) {
		var ret int32
		return ret
	}
	return *o.NonSsoAuthenticatorCount
}

// GetNonSsoAuthenticatorCountOk returns a tuple with the NonSsoAuthenticatorCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetNonSsoAuthenticatorCountOk() (*int32, bool) {
	if o == nil || IsNil(o.NonSsoAuthenticatorCount) {
		return nil, false
	}
	return o.NonSsoAuthenticatorCount, true
}

// HasNonSsoAuthenticatorCount returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasNonSsoAuthenticatorCount() bool {
	if o != nil && !IsNil(o.NonSsoAuthenticatorCount) {
		return true
	}

	return false
}

// SetNonSsoAuthenticatorCount gets a reference to the given int32 and assigns it to the NonSsoAuthenticatorCount field.
func (o *GetSettings200ResponseDataInner) SetNonSsoAuthenticatorCount(v int32) {
	o.NonSsoAuthenticatorCount = &v
}

// GetNonSsoGroupCount returns the NonSsoGroupCount field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetNonSsoGroupCount() int32 {
	if o == nil || IsNil(o.NonSsoGroupCount) {
		var ret int32
		return ret
	}
	return *o.NonSsoGroupCount
}

// GetNonSsoGroupCountOk returns a tuple with the NonSsoGroupCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetNonSsoGroupCountOk() (*int32, bool) {
	if o == nil || IsNil(o.NonSsoGroupCount) {
		return nil, false
	}
	return o.NonSsoGroupCount, true
}

// HasNonSsoGroupCount returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasNonSsoGroupCount() bool {
	if o != nil && !IsNil(o.NonSsoGroupCount) {
		return true
	}

	return false
}

// SetNonSsoGroupCount gets a reference to the given int32 and assigns it to the NonSsoGroupCount field.
func (o *GetSettings200ResponseDataInner) SetNonSsoGroupCount(v int32) {
	o.NonSsoGroupCount = &v
}

// GetLocalAdminUserCount returns the LocalAdminUserCount field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetLocalAdminUserCount() int32 {
	if o == nil || IsNil(o.LocalAdminUserCount) {
		var ret int32
		return ret
	}
	return *o.LocalAdminUserCount
}

// GetLocalAdminUserCountOk returns a tuple with the LocalAdminUserCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetLocalAdminUserCountOk() (*int32, bool) {
	if o == nil || IsNil(o.LocalAdminUserCount) {
		return nil, false
	}
	return o.LocalAdminUserCount, true
}

// HasLocalAdminUserCount returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasLocalAdminUserCount() bool {
	if o != nil && !IsNil(o.LocalAdminUserCount) {
		return true
	}

	return false
}

// SetLocalAdminUserCount gets a reference to the given int32 and assigns it to the LocalAdminUserCount field.
func (o *GetSettings200ResponseDataInner) SetLocalAdminUserCount(v int32) {
	o.LocalAdminUserCount = &v
}

// GetLocalNonAdminUserCount returns the LocalNonAdminUserCount field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetLocalNonAdminUserCount() int32 {
	if o == nil || IsNil(o.LocalNonAdminUserCount) {
		var ret int32
		return ret
	}
	return *o.LocalNonAdminUserCount
}

// GetLocalNonAdminUserCountOk returns a tuple with the LocalNonAdminUserCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetLocalNonAdminUserCountOk() (*int32, bool) {
	if o == nil || IsNil(o.LocalNonAdminUserCount) {
		return nil, false
	}
	return o.LocalNonAdminUserCount, true
}

// HasLocalNonAdminUserCount returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasLocalNonAdminUserCount() bool {
	if o != nil && !IsNil(o.LocalNonAdminUserCount) {
		return true
	}

	return false
}

// SetLocalNonAdminUserCount gets a reference to the given int32 and assigns it to the LocalNonAdminUserCount field.
func (o *GetSettings200ResponseDataInner) SetLocalNonAdminUserCount(v int32) {
	o.LocalNonAdminUserCount = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *GetSettings200ResponseDataInner) SetHostname(v string) {
	o.Hostname = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *GetSettings200ResponseDataInner) SetVersion(v string) {
	o.Version = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *GetSettings200ResponseDataInner) SetAddress(v string) {
	o.Address = &v
}

// GetInterfaceRedundancyEnabled returns the InterfaceRedundancyEnabled field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetInterfaceRedundancyEnabled() bool {
	if o == nil || IsNil(o.InterfaceRedundancyEnabled) {
		var ret bool
		return ret
	}
	return *o.InterfaceRedundancyEnabled
}

// GetInterfaceRedundancyEnabledOk returns a tuple with the InterfaceRedundancyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetInterfaceRedundancyEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.InterfaceRedundancyEnabled) {
		return nil, false
	}
	return o.InterfaceRedundancyEnabled, true
}

// HasInterfaceRedundancyEnabled returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasInterfaceRedundancyEnabled() bool {
	if o != nil && !IsNil(o.InterfaceRedundancyEnabled) {
		return true
	}

	return false
}

// SetInterfaceRedundancyEnabled gets a reference to the given bool and assigns it to the InterfaceRedundancyEnabled field.
func (o *GetSettings200ResponseDataInner) SetInterfaceRedundancyEnabled(v bool) {
	o.InterfaceRedundancyEnabled = &v
}

// GetActiveSessions returns the ActiveSessions field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetActiveSessions() int32 {
	if o == nil || IsNil(o.ActiveSessions) {
		var ret int32
		return ret
	}
	return *o.ActiveSessions
}

// GetActiveSessionsOk returns a tuple with the ActiveSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetActiveSessionsOk() (*int32, bool) {
	if o == nil || IsNil(o.ActiveSessions) {
		return nil, false
	}
	return o.ActiveSessions, true
}

// HasActiveSessions returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasActiveSessions() bool {
	if o != nil && !IsNil(o.ActiveSessions) {
		return true
	}

	return false
}

// SetActiveSessions gets a reference to the given int32 and assigns it to the ActiveSessions field.
func (o *GetSettings200ResponseDataInner) SetActiveSessions(v int32) {
	o.ActiveSessions = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *GetSettings200ResponseDataInner) GetLinks() ResourceLinks {
	if o == nil || IsNil(o.Links) {
		var ret ResourceLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSettings200ResponseDataInner) GetLinksOk() (*ResourceLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *GetSettings200ResponseDataInner) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given ResourceLinks and assigns it to the Links field.
func (o *GetSettings200ResponseDataInner) SetLinks(v ResourceLinks) {
	o.Links = &v
}

func (o GetSettings200ResponseDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSettings200ResponseDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.AdministrativeHistoryRetentionPeriod) {
		toSerialize["administrativeHistoryRetentionPeriod"] = o.AdministrativeHistoryRetentionPeriod
	}
	if !IsNil(o.SessionAndEventsRetentionPeriod) {
		toSerialize["sessionAndEventsRetentionPeriod"] = o.SessionAndEventsRetentionPeriod
	}
	if !IsNil(o.DhcpTransactionRetentionPeriod) {
		toSerialize["dhcpTransactionRetentionPeriod"] = o.DhcpTransactionRetentionPeriod
	}
	if !IsNil(o.DdnsTransactionRetentionPeriod) {
		toSerialize["ddnsTransactionRetentionPeriod"] = o.DdnsTransactionRetentionPeriod
	}
	if !IsNil(o.ExportEnabled) {
		toSerialize["exportEnabled"] = o.ExportEnabled
	}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.MandatoryCommentsEnabled) {
		toSerialize["mandatoryCommentsEnabled"] = o.MandatoryCommentsEnabled
	}
	if !IsNil(o.RememberLastAddressEnabled) {
		toSerialize["rememberLastAddressEnabled"] = o.RememberLastAddressEnabled
	}
	if !IsNil(o.SessionTimeout) {
		toSerialize["sessionTimeout"] = o.SessionTimeout
	}
	if !IsNil(o.DisclaimerEnabled) {
		toSerialize["disclaimerEnabled"] = o.DisclaimerEnabled
	}
	if !IsNil(o.DisclaimerText) {
		toSerialize["disclaimerText"] = o.DisclaimerText
	}
	if !IsNil(o.CustomReverseZoneFormatsAllowed) {
		toSerialize["customReverseZoneFormatsAllowed"] = o.CustomReverseZoneFormatsAllowed
	}
	if !IsNil(o.AddressManager) {
		toSerialize["addressManager"] = o.AddressManager
	}
	if !IsNil(o.RestV2) {
		toSerialize["restV2"] = o.RestV2
	}
	if !IsNil(o.ZoneImport) {
		toSerialize["zoneImport"] = o.ZoneImport
	}
	if !IsNil(o.ReconciliationService) {
		toSerialize["reconciliationService"] = o.ReconciliationService
	}
	if !IsNil(o.DiscoveryEngine) {
		toSerialize["discoveryEngine"] = o.DiscoveryEngine
	}
	if !IsNil(o.SnmpClient) {
		toSerialize["snmpClient"] = o.SnmpClient
	}
	if !IsNil(o.MonitoringService) {
		toSerialize["monitoringService"] = o.MonitoringService
	}
	if !IsNil(o.RrdTool) {
		toSerialize["rrdTool"] = o.RrdTool
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.FailureLimit) {
		toSerialize["failureLimit"] = o.FailureLimit
	}
	if !IsNil(o.FailureLimitPeriod) {
		toSerialize["failureLimitPeriod"] = o.FailureLimitPeriod
	}
	if !IsNil(o.DelayDuration) {
		toSerialize["delayDuration"] = o.DelayDuration
	}
	if !IsNil(o.AddressManagerMonitoring) {
		toSerialize["addressManagerMonitoring"] = o.AddressManagerMonitoring
	}
	if !IsNil(o.ServerMonitoring) {
		toSerialize["serverMonitoring"] = o.ServerMonitoring
	}
	if !IsNil(o.F5ServerMonitoring) {
		toSerialize["f5ServerMonitoring"] = o.F5ServerMonitoring
	}
	if !IsNil(o.MinLength) {
		toSerialize["minLength"] = o.MinLength
	}
	if !IsNil(o.MaxLength) {
		toSerialize["maxLength"] = o.MaxLength
	}
	if !IsNil(o.DigitRequired) {
		toSerialize["digitRequired"] = o.DigitRequired
	}
	if !IsNil(o.MixedCaseRequired) {
		toSerialize["mixedCaseRequired"] = o.MixedCaseRequired
	}
	if !IsNil(o.SpecialCharacterRequired) {
		toSerialize["specialCharacterRequired"] = o.SpecialCharacterRequired
	}
	if !IsNil(o.AddressManagerFqdn) {
		toSerialize["addressManagerFqdn"] = o.AddressManagerFqdn
	}
	if !IsNil(o.MetadataUrl) {
		toSerialize["metadataUrl"] = o.MetadataUrl
	}
	if !IsNil(o.ConsumeUrl) {
		toSerialize["consumeUrl"] = o.ConsumeUrl
	}
	if !IsNil(o.LogoutUrl) {
		toSerialize["logoutUrl"] = o.LogoutUrl
	}
	if !IsNil(o.NameIdFormat) {
		toSerialize["nameIdFormat"] = o.NameIdFormat
	}
	if !IsNil(o.SigningEnabled) {
		toSerialize["signingEnabled"] = o.SigningEnabled
	}
	if !IsNil(o.EncryptionEnabled) {
		toSerialize["encryptionEnabled"] = o.EncryptionEnabled
	}
	if !IsNil(o.Pkcs12) {
		toSerialize["pkcs12"] = o.Pkcs12
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.OrganizationUrl) {
		toSerialize["organizationUrl"] = o.OrganizationUrl
	}
	if !IsNil(o.ContactName) {
		toSerialize["contactName"] = o.ContactName
	}
	if !IsNil(o.ContactEmail) {
		toSerialize["contactEmail"] = o.ContactEmail
	}
	if !IsNil(o.SamlIdentityProviderEnabled) {
		toSerialize["samlIdentityProviderEnabled"] = o.SamlIdentityProviderEnabled
	}
	if !IsNil(o.NonSsoAuthenticatorCount) {
		toSerialize["nonSsoAuthenticatorCount"] = o.NonSsoAuthenticatorCount
	}
	if !IsNil(o.NonSsoGroupCount) {
		toSerialize["nonSsoGroupCount"] = o.NonSsoGroupCount
	}
	if !IsNil(o.LocalAdminUserCount) {
		toSerialize["localAdminUserCount"] = o.LocalAdminUserCount
	}
	if !IsNil(o.LocalNonAdminUserCount) {
		toSerialize["localNonAdminUserCount"] = o.LocalNonAdminUserCount
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.InterfaceRedundancyEnabled) {
		toSerialize["interfaceRedundancyEnabled"] = o.InterfaceRedundancyEnabled
	}
	if !IsNil(o.ActiveSessions) {
		toSerialize["activeSessions"] = o.ActiveSessions
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableGetSettings200ResponseDataInner struct {
	value *GetSettings200ResponseDataInner
	isSet bool
}

func (v NullableGetSettings200ResponseDataInner) Get() *GetSettings200ResponseDataInner {
	return v.value
}

func (v *NullableGetSettings200ResponseDataInner) Set(val *GetSettings200ResponseDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSettings200ResponseDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSettings200ResponseDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSettings200ResponseDataInner(val *GetSettings200ResponseDataInner) *NullableGetSettings200ResponseDataInner {
	return &NullableGetSettings200ResponseDataInner{value: val, isSet: true}
}

func (v NullableGetSettings200ResponseDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSettings200ResponseDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


